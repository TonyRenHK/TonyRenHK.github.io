{"meta":{"title":"Tony Ren's 学习笔记","subtitle":null,"description":null,"author":"Tony Ren","url":"http://tonyrenhk.github.io"},"pages":[{"title":"SFDX 常用命令以及相关资料","date":"2021-01-02T00:00:00.000Z","updated":"2025-05-06T03:51:48.337Z","comments":true,"path":"Note/2024-01-02-Template.html","permalink":"http://tonyrenhk.github.io/Note/2024-01-02-Template.html","excerpt":"preview","text":"preview Quizlet: Between term and definition : \\n\\n Answer :Between rows : \\n\\n\\n— \\n 1级标题2级标题3级标题四级标题五级标题六级标题强调文本 强调文本 加粗文本 加粗文本 &#x3D;&#x3D;标记文本&#x3D;&#x3D; 删除文本 引用文本 H2O is是液体。 2^10^ 运算结果是 1024。 项目 Value 电脑 $1600 手机 $12 导管 $1 Column 1 Column 2 centered 文本居中 right-aligned 文本居右 链接: link. 图片: 带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw &#x3D;30x30) 居中的图片: 居中并且带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center &#x3D;30x30) 微信网页版 Bitbucket 有道笔记 Trailhead 有道首页 Dillinger222 111 Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor. Type some Markdown on the left See HTML in the right Magic New Features! Import a HTML file and watch it magically convert to Markdown Drag and drop images (requires your Dropbox account be linked) You can also: Import and save files from GitHub, Dropbox, Google Drive and One Drive Drag and drop markdown and HTML files into Dillinger Export documents as Markdown, HTML and PDF Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email. As John Gruber writes on the Markdown site Aura components can contain Lightning web components. However, the opposite doesn’t apply. Lightning web components can’t contain Aura components.formatting syntax is to make it as readableas possible. The idea is that aMarkdown-formatted document should bepublishable as-is, as plain text, withoutlooking like it’s been marked up with tagsor formatting instructions. This text you see here is actually written in Markdown! To get a feel for Markdown’s syntax, type some text into the left window and watch the results in the right. TechDillinger uses a number of open source projects to work properly: AngularJS - HTML enhanced for web apps! Ace Editor - awesome web-based text editor markdown-it - Markdown parser done right. Fast and easy to extend. Twitter Bootstrap - great UI boilerplate for modern web apps node.js - evented I&#x2F;O for the backend Express - fast node.js network app framework @tjholowaychuk Gulp - the streaming build system Breakdance - HTML to Markdown converter jQuery - duh And of course Dillinger itself is open source with a public repository on GitHub. InstallationDillinger requires Node.js v4+ to run. Install the dependencies and devDependencies and start the server. 123$ cd dillinger$ npm install -d$ node app For production environments… 12$ npm install --production$ NODE_ENV=production node app PluginsDillinger is currently extended with the following plugins. Instructions on how to use them in your own application are linked below. Plugin README Dropbox plugins&#x2F;dropbox&#x2F;README.md Github plugins&#x2F;github&#x2F;README.md Google Drive plugins&#x2F;googledrive&#x2F;README.md OneDrive plugins&#x2F;onedrive&#x2F;README.md Medium plugins&#x2F;medium&#x2F;README.md Google Analytics plugins&#x2F;googleanalytics&#x2F;README.md DevelopmentWant to contribute? Great! Dillinger uses Gulp + Webpack for fast developing.Make a change in your file and instantanously see your updates! Open your favorite Terminal and run these commands. First Tab: 1$ node app Second Tab: 1$ gulp watch (optional) Third: 1$ karma test Building for sourceFor production release: 1$ gulp build --prod Generating pre-built zip archives for distribution: 1$ gulp build dist --prod DockerDillinger is very easy to install and deploy in a Docker container. By default, the Docker will expose port 8080, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image. 12cd dillingerdocker build -t joemccann/dillinger:$&#123;package.json.version&#125; . This will create the dillinger image and pull in the necessary dependencies. Be sure to swap out ${package.json.version} with the actual version of Dillinger. Once done, run the Docker image and map the port to whatever you wish on your host. In this example, we simply map port 8000 of the host to port 8080 of the Docker (or whatever port was exposed in the Dockerfile): 1docker run -d -p 8000:8080 --restart=\"always\" &lt;youruser&gt;/dillinger:$&#123;package.json.version&#125; Verify the deployment by navigating to your server address in your preferred browser. 1127.0.0.1:8000 Kubernetes + Google CloudSee KUBERNETES.md Todos Write MORE Tests Add Night Mode LicenseMIT Free Software, Hell Yeah! Tables Are Cool col 1 is left-aligned $1600 col 2 is centered $12 col 3 is right-aligned $1 欢迎使用 Markdown在线编辑器 MdEditorMarkdown是一种轻量级的「标记语言」 **** Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面，Markdown文件的后缀名便是“.md” MdEditor是一个在线编辑Markdown文档的编辑器MdEditor扩展了Markdown的功能（如表格、脚注、内嵌HTML等等），以使让Markdown转换成更多的格式，和更丰富的展示效果，这些功能原初的Markdown尚不具备。 Markdown增强版中比较有名的有Markdown Extra、MultiMarkdown、 Maruku等。这些衍生版本要么基于工具，如Pandoc，Pandao；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。 MdEditor源于Pandao的JavaScript开源项目，开源地址Editor.md，并在MIT开源协议的许可范围内进行了优化，以适应广大用户群体的需求。向优秀的markdown开源编辑器原作者Pandao致敬。 MdEditor的功能列表演示标题H1标题H2标题H3标题H4标题H5标题H5字符效果和横线等 删除线 删除线（开启识别HTML标签时） 斜体字 斜体字 粗体 粗体 粗斜体 粗斜体 上标：X2，下标：O2 缩写(同HTML的abbr标签) 即更长的单词或短语的缩写形式，前提是开启识别HTML标签时，已默认开启 The HTML specification is maintained by the W3C. 引用 Blockquotes 引用文本 Blockquotes 引用的行内混合 Blockquotes 引用：如果想要插入空白换行即&lt;br /&gt;标签，在插入处先键入两个以上的空格然后回车即可，普通链接。 锚点与链接 Links普通链接普通链接带标题直接链接：https://www.mdeditor.com[锚点链接][anchor-id][anchor-id]: https://www.mdeditor.com/mailto:test.test@gmail.comGFM a-tail link @pandao邮箱地址自动链接 test.test@gmail.com www@vip.qq.com @pandao 多语言代码高亮 Codes行内代码 Inline code执行命令：npm install marked 缩进风格即缩进四个空格，也做为实现类似 &lt;pre&gt; 预格式化文本 ( Preformatted Text ) 的功能。 &lt;?php echo &quot;Hello world!&quot;; ?&gt; 预格式化文本： | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell | JS代码123function test() &#123; console.log(\"Hello world!\");&#125; HTML 代码 HTML codes1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;mate charest=\"utf-8\" /&gt; &lt;meta name=\"keywords\" content=\"Editor.md, Markdown, Editor\" /&gt; &lt;title&gt;Hello world!&lt;/title&gt; &lt;style type=\"text/css\"&gt; body&#123;font-size:14px;color:#444;font-family: \"Microsoft Yahei\", Tahoma, \"Hiragino Sans GB\", Arial;background:#fff;&#125; ul&#123;list-style: none;&#125; img&#123;border:none;vertical-align: middle;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1 class=\"text-xxl\"&gt;Hello world!&lt;/h1&gt; &lt;p class=\"text-green\"&gt;Plain text&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 图片 Images图片加链接 (Image + Link)： Follow your heart. 列表 Lists无序列表（减号）Unordered Lists (-) 列表一 列表二 列表三 无序列表（星号）Unordered Lists (*) 列表一 列表二 列表三 无序列表（加号和嵌套）Unordered Lists (+) 列表一 列表二 列表二-1 列表二-2 列表二-3 列表三 列表一 列表二 列表三 有序列表 Ordered Lists (-) 第一行 第二行 第三行 GFM task list GFM task list 1 GFM task list 2 GFM task list 3 GFM task list 3-1 GFM task list 3-2 GFM task list 3-3 GFM task list 4 GFM task list 4-1 GFM task list 4-2 绘制表格 Tables 项目 价格 数量 计算机 $1600 5 手机 $12 12 管线 $1 234 First Header Second Header Content Cell Content Cell Content Cell Content Cell First Header Second Header Content Cell Content Cell Content Cell Content Cell Function name Description help() Display the help window. destroy() Destroy your computer! Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 zebra stripes are neat $1 Item Value Computer $1600 Phone $12 Pipe $1 特殊符号 HTML Entities Codes&copy; &amp; &uml; &trade; &iexcl; &pound;&amp; &lt; &gt; &yen; &euro; &reg; &plusmn; &para; &sect; &brvbar; &macr; &laquo; &middot; X&sup2; Y&sup3; &frac34; &frac14; &times; &divide; &raquo; 18&ordm;C &quot; &apos; [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] Emoji表情 :smiley: Blockquotes :star: GFM task lists &amp; Emoji &amp; fontAwesome icon emoji &amp; editormd logo emoji :editormd-logo-5x: :smiley: @mentions, :smiley: #refs, links, formatting, and tags supported :editormd-logo:; list syntax required (any unordered or ordered list supported) :editormd-logo-3x:; [ ] :smiley: this is a complete item :smiley:; []this is an incomplete item test link :fa-star: @pandao; [ ]this is an incomplete item :fa-star: :fa-gear:; :smiley: this is an incomplete item test link :fa-star: :fa-gear:; :smiley: this is :fa-star: :fa-gear: an incomplete item test link; 反斜杠 Escape*literal asterisks* [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 科学公式 TeX(KaTeX)$$E&#x3D;mc^2$$ 行内的公式$$E&#x3D;mc^2$$行内的公式，行内的$$E&#x3D;mc^2$$公式。 $$x &gt; y$$ $$(\\sqrt{3x-1}+(1+x)^2)$$ $$\\sin(\\alpha)^{\\theta}&#x3D;\\sum_{i&#x3D;0}^{n}(x^i + \\cos(f))$$ 多行公式： 12345\\displaystyle\\left( \\sum\\_&#123;k&#x3D;1&#125;^n a\\_k b\\_k \\right)^2\\leq\\left( \\sum\\_&#123;k&#x3D;1&#125;^n a\\_k^2 \\right)\\left( \\sum\\_&#123;k&#x3D;1&#125;^n b\\_k^2 \\right) 123456789\\displaystyle \\frac&#123;1&#125;&#123; \\Bigl(\\sqrt&#123;\\phi \\sqrt&#123;5&#125;&#125;-\\phi\\Bigr) e^&#123; \\frac25 \\pi&#125;&#125; &#x3D; 1+\\frac&#123;e^&#123;-2\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-4\\pi&#125;&#125; &#123; 1+\\frac&#123;e^&#123;-6\\pi&#125;&#125; &#123;1+\\frac&#123;e^&#123;-8\\pi&#125;&#125; &#123;1+\\cdots&#125; &#125; &#125; &#125; 123f(x) &#x3D; \\int_&#123;-\\infty&#125;^\\infty \\hat f(\\xi)\\,e^&#123;2 \\pi i \\xi x&#125; \\,d\\xi 分页符 Page break Print Test: Ctrl + P [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 绘制流程图 Flowchart12345678st&#x3D;&gt;start: 用户登陆op&#x3D;&gt;operation: 登陆操作cond&#x3D;&gt;condition: 登陆成功 Yes or No?e&#x3D;&gt;end: 进入后台st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op [&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;] 绘制序列图 Sequence Diagram1234Andrew-&gt;China: Says HelloNote right of China: China thinks\\nabout itChina--&gt;Andrew: How are you?Andrew-&gt;&gt;China: I am good thanks! End表急送服务号公众号搜索“表急送” @TOC Link你好！ 这是你第一次使用 Markdown编辑器 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。 新的改变我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客： 全新的界面设计 ，将会带来全新的写作体验； 在创作中心设置你喜爱的代码高亮样式，Markdown 将代码片显示选择的高亮样式 进行展示； 增加了 图片拖拽 功能，你可以将本地的图片直接拖拽到编辑区域直接展示； 全新的 KaTeX数学公式 语法； 增加了支持甘特图的mermaid语法[^1] 功能； 增加了 多屏幕编辑 Markdown文章功能； 增加了 焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置 等功能，功能按钮位于编辑区域与预览区域中间； 增加了 检查列表 功能。 [^1]: mermaid语法说明 功能快捷键撤销：Ctrl/Command + Z重做：Ctrl/Command + Y加粗：Ctrl/Command + B斜体：Ctrl/Command + I标题：Ctrl/Command + Shift + H无序列表：Ctrl/Command + Shift + U有序列表：Ctrl/Command + Shift + O检查列表：Ctrl/Command + Shift + C插入代码：Ctrl/Command + Shift + K插入链接：Ctrl/Command + Shift + L插入图片：Ctrl/Command + Shift + G查找：Ctrl/Command + F替换：Ctrl/Command + G 合理的创建标题，有助于目录的生成直接输入1次#，并按下space后，将生成1级标题。输入2次#，并按下space后，将生成2级标题。以此类推，我们支持6级标题。有助于使用TOC语法后生成一个完美的目录。 如何改变文本的样式强调文本 强调文本 加粗文本 加粗文本 &#x3D;&#x3D;标记文本&#x3D;&#x3D; &#x3D;&#x3D;删除文本&#x3D;&#x3D; 引用文本 H2O is是液体。 2^10^ 运算结果是 1024. 插入链接与图片链接: link. 图片: 带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw &#x3D;30x30) 居中的图片: 居中并且带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center &#x3D;30x30) 当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。 如何插入一段漂亮的代码片去博客设置页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 代码片. 12// An highlighted blockvar foo = 'bar'; 生成一个适合你的列表 项目 项目 项目 项目1 项目2 项目3 计划任务 完成任务 创建一个表格一个简单的表格是这么创建的： 项目 Value 电脑 $1600 手机 $12 导管 $1 设定内容居中、居左、居右使用:---------:居中使用:----------居左使用----------:居右 第一列 第二列 第三列 第一列文本居中 第二列文本居右 第三列文本居左 SmartyPantsSmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如： TYPE ASCII HTML Single backticks &#39;Isn&#39;t this fun?&#39; ‘Isn’t this fun?’ Quotes &quot;Isn&#39;t this fun?&quot; “Isn’t this fun?” Dashes -- is en-dash, --- is em-dash – is en-dash, — is em-dash 创建一个自定义列表MarkdownText-to-HTML conversion toolAuthors: JohnLuke如何创建一个注脚一个具有注脚的文本。^2 注释也是必不可少的Markdown将文本转换为 HTML。 *[HTML]: 超文本标记语言 KaTeX数学公式您可以使用渲染LaTeX数学表达式 KaTeX: Gamma公式展示 $\\Gamma(n) &#x3D; (n-1)!\\quad\\foralln\\in\\mathbb N$ 是通过欧拉积分 $$\\Gamma(z) &#x3D; \\int_0^\\infty t^{z-1}e^{-t}dt,.$$ 你可以找到更多关于的信息 LaTeX 数学表达式here. 新的甘特图功能，丰富你的文章12345678gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section 现有任务 已完成 :done, des1, 2014-01-06,2014-01-08 进行中 :active, des2, 2014-01-09, 3d 计划一 : des3, after des2, 5d 计划二 : des4, after des3, 5d 关于 甘特图 语法，参考 这儿, UML 图表可以使用UML图表进行渲染。 Mermaid. 例如下面产生的一个序列图： 123456789sequenceDiagram张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?李四--&gt;&gt;王五: 你最近怎么样，王五？李四--x 张三: 我很好，谢谢!李四-x 王五: 我很好，谢谢!Note right of 王五: 李四想了很长时间, 文字太长了&lt;br&#x2F;&gt;不适合放在一行.李四--&gt;&gt;张三: 打量着王五...张三-&gt;&gt;王五: 很好... 王五, 你怎么样? 这将产生一个流程图。: 12345graph LRA[长方形] -- 链接 --&gt; B((圆))A --&gt; C(圆角长方形)B --&gt; D&#123;菱形&#125;C --&gt; D 关于 Mermaid 语法，参考 这儿, FLowchart流程图我们依旧会支持flowchart的流程图： 123456789flowchatst&#x3D;&gt;start: 开始e&#x3D;&gt;end: 结束op&#x3D;&gt;operation: 我的操作cond&#x3D;&gt;condition: 确认？st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 关于 Flowchart流程图 语法，参考 这儿. 导出与导入导出如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 文章导出 ，生成一个.md文件或者.html文件进行本地保存。 导入如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，继续你的创作。"},{"title":"书签BookMark","date":"2018-12-06T09:43:57.000Z","updated":"2025-05-06T03:51:48.337Z","comments":false,"path":"Note/BookMark.html","permalink":"http://tonyrenhk.github.io/Note/BookMark.html","excerpt":"","text":"这里会列举一些常用的书签,和收录一些有用的工具。 工具教程学习链接To Do List Wechat Public Account微信排版编辑器-微信公众号图文排版工具：135编辑器官网 下载Youtube链接：Youtube Video Downloader Online | Download Youtube Videos Online 在线PS：Photopea | Online Photo Editor Salesforce AppExchange Salesforce Brandstore Salesforce Community Top Trailblazers Salesforce Webinars Force Leader Board Global Salesforce Blogs trailhead leaderboard trailhead-board"},{"title":"Online Tools在线工具","date":"2018-12-06T09:43:57.000Z","updated":"2025-05-06T03:51:48.337Z","comments":false,"path":"Note/OnlineTools.html","permalink":"http://tonyrenhk.github.io/Note/OnlineTools.html","excerpt":"","text":"在线软件 mindmeister： https://www.mindmeister.com/ 货币转换器 | 汇率 | OANDA iloveimg.com，获得管理图像文件的更多功能 。 微信公众号如下是一些编辑微信公众号的常用工具，其中这是微信公众号登入口。 【编辑器】135编辑器: https://www.135editor.com/ 【编辑器】96微信编辑器: http://bj.96weixin.com/ 【编辑器】365编辑器: https://www.365editor.com/ 【编辑器】秀米首页 - 秀米 XIUMI: https://xiumi.us/#/ 【编辑器】在线 Markdown 编辑器 - Dillinger: https://dillinger.io/ 简体转繁体：https://www.hao123.com/haoserver/jianfanzh.htm Online Markdown Converter(代码转换): http://md.ityouknow.com/ 【图片】一键复制黏贴照片工具：Snaggy - easy screenshots: https://snag.gy/ 【图片】Photoshop在线精简版: http://www.uupoop.com/ 素材中国_免费素材共享平台www.sccnn.com : http://www.sccnn.com/ 免费在线二维码生成器 : https://cn.online-qrcode-generator.com/ 在线二维码图片生成器 : http://www.liantu.com/ Word Code block 创客贴_平面设计作图神器_免费设计模板_在线稿定设计印刷 Md2All : http://md.aclickall.com/ Video to animated GIF converter : https://ezgif.com/video-to-gif 在线视频转GIF软件_视频转GIF在线制作工具_92素材网 : http://www.92sucai.com/gif/video.html Bitly | URL Shortener, Custom Branded URLs, API &amp; Link Management JavaScript工具 Online JavaScript beautifier: https://beautifier.io/ JSFiddle: https://jsfiddle.net/ CodePen : https://codepen.io/ 其他工具 Text Editor for Google Drive: http://texteditor.nsspot.net/ 时间校准_北京时间校准_北京时间在线校准_现在北京时间 北京时间 Free File Hosting - Online Storage; Upload Mp3, Videos, Music. Backup Files API工具 API Tester : https://apitester.com/ 软件下载 Apowersoft Screen Recorder - Download"},{"title":"Code","date":"2008-12-06T09:43:57.000Z","updated":"2025-05-06T03:51:48.337Z","comments":false,"path":"Note/Code.html","permalink":"http://tonyrenhk.github.io/Note/Code.html","excerpt":"","text":"12345678910111213trigger accountTestTrggr on Account (before insert, before update) &#123; for(Account a: Trigger.new) &#123; List&lt;Contact&gt; contacts = [select id, salutation, firstname, lastname, email from Contact where accountId = :a.Id]; for(Contact c: contacts) &#123; System.debug('Contact Id[' + c.Id + '], FirstName[' + c.firstname + '], LastName[' + c.lastname +']'); c.Description=c.salutation + ' ' + c.firstName + ' ' + c.lastname; update c; &#125; &#125;&#125; 666 12345678910111213141516trigger accountTestTrggr on Account (before insert, before update) &#123; List&lt;Account&gt; accountsWithContacts = [select id, name, (select id, salutation, description, firstname, lastname, email from Contacts) from Account where Id IN :Trigger.newMap.keySet()]; List&lt;Contact&gt; contactsToUpdate = new List&lt;Contact&gt;&#123;&#125;; for(Account a: accountsWithContacts)&#123; for(Contact c: a.Contacts)&#123; System.debug('Contact Id[' + c.Id + '], FirstName[' + c.firstname + '], LastName[' + c.lastname +']'); c.Description=c.salutation + ' ' + c.firstName + ' ' + c.lastname; contactsToUpdate.add(c); &#125; &#125; update contactsToUpdate;&#125;"},{"title":"To Do List","date":"2018-12-05T09:43:57.000Z","updated":"2025-05-06T03:51:48.337Z","comments":false,"path":"Note/To_Do_List.html","permalink":"http://tonyrenhk.github.io/Note/To_Do_List.html","excerpt":"","text":"Connect Components with Events Unit | Salesforce Trailhead : https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_events ✿✿✿文章Topic ✿✿✿Link : Sandbox Preview Instructions for the Salesforce Winter ‘19 Release - Salesforce Blog : https://www.salesforce.com/blog/2018/08/winter-19-release-sandbox-preview-instructions.html Salesforce Lightning application with Vue.js and Webpack — PART 1: https://medium.com/@ennoucas/creating-a-salesforce-application-with-vue-js-and-webpack-part-1-17c726484f1f Salesforce Lightning application with Vue.js and Webpack — PART 2: https://medium.com/@ennoucas/salesforce-lightning-application-with-vue-js-and-webpack-part-2-af0071347274 Running A Salesforce Aura App Locally And On Heroku | Developer Force Blog: https://developer.salesforce.com/blogs/developer-relations/2015/06/running-aura-app-heroku.html 10 Ways to Integrate with G Suite - Salesforce Live: https://www.salesforce.com/video/1779868/ Quip live app 学习入门 Quip Live Apps API Guide: https://tony-team.quip.com/dev/liveapps/ Blockchain at Dreamforce 2018 – Phil Komarny – Medium: https://medium.com/@philkomarny/blockchain-at-dreamforce-2018-7288ce7dee12 Salesforce API Reference: https://developer.salesforce.com/docs/api-explorer/sobject/Account https://www.quipsupport.com/hc/en-us/articles/115001153906-How-do-I-use-Quip-Connect- https://www.v2force.com/connected-apps/ Try Einstein Analytics free for 30 days - Salesforce Blog : https://www.salesforce.com/blog/2019/02/einstein-analytics-free-trial.html http://www.apexhours.com/introduction-to-lightning-web-components-lwc/ Build a Bear-Tracking App with Lightning Web Components | Salesforce : https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps Setting Up Jenkins for Force.com Continuous Integration | Developer Force Blog : https://developer.salesforce.com/blogs/developer-relations/2013/03/setting-up-jenkins-for-force-com-continuous-integration.html (92) Introduction to Salesforce Authenticator - YouTube : https://www.youtube.com/watch?v=mDihoAnWrUk https://twitter.com/asksalesforce/status/1090987839377027073Quip - How Workflow Therapy can change the way your team works together LWC http://amitsalesforce.blogspot.com/2019/01/how-to-get-current-user-id-in-lightning-web-components.html"},{"title":"IT学习网站书签BookMark","date":"2018-12-06T09:43:57.000Z","updated":"2025-05-06T03:51:48.337Z","comments":false,"path":"Note/Tutorial.html","permalink":"http://tonyrenhk.github.io/Note/Tutorial.html","excerpt":"","text":"Main 掘金 - 帮助开发者成长的社区 : https://juejin.im/ freeCodeCamp.org: https://medium.freecodecamp.org/ DockOne.io : http://dockone.io/ 云栖社区-阿里云官方开发者社区 : https://yq.aliyun.com/ 开源中国 : https://www.oschina.net/ Top Shelf Web Development Training ― Scotch.io : https://scotch.io/ DEV Community 👩‍💻👨‍💻: https://dev.to/ 视频教程 发现课程 - 多贝公开课 网易公开课 Coursera edX 腾讯大讲堂 Salesforce Live Codecademy Google Cloud OnAir YouTube Salesforce Webinars eBooks IT eBooks - Free Download - New Releases: http://it-ebooks.info/ free-programming-books&#x2F;free-programming-books-zh.md at master · EbookFoundation&#x2F;free-programming-books: https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books-zh.md justjavac&#x2F;free-programming-books-zh_CN: 免费的计算机编程类中文书籍，欢迎投稿: https://github.com/justjavac/free-programming-books-zh_CN Salesforce Lightning Design System: https://www.lightningdesignsystem.com/ 教程 Salesforce Apex Code Corner: Export Data in CSV or Excel In Apex Salesforce: http://salesforceapexcodecorner.blogspot.com/2012/03/export-in-csv-and-excel-in-apex.html Journey to Lightning Experience Challenges Coderbyte | The #1 Website for Coding Challenges : https://coderbyte.com/ React React – A JavaScript library for building user interfaces: https://reactjs.org/ ReactJS Tutorial: https://www.tutorialspoint.com/reactjs/ IT Reading DEV Community Where software engineers connect, build their resumes, and grow.: https://dev.to/ 猴子都能懂的GIT入门 | 贝格乐（Backlog） UI Design 优设-UISDC: 优秀设计联盟-SDC-优设网-设计师交流学习平台-听讲座，聊设计，找素材，尽在优设网 : https://www.uisdc.com/ UI中国-专业用户体验设计平台 : https://www.ui.cn/ Hongkiat - Tech and Design Tips : https://www.hongkiat.com/blog/ Learn, Code and Share on Tutorialzine : https://tutorialzine.com/ CSS Lightning Design System: https://www.lightningdesignsystem.com/ Components - Salesforce Lightning Component Library: https://developer.salesforce.com/docs/component-library/overview/components Semantic UI : https://semantic-ui.com/ Dribbble - Discover the World’s Top Designers &amp; Creative Professionals 源码学习 ccoenraets&#x2F;lightning-react-app: https://github.com/ccoenraets/lightning-react-app DjangoThe Web framework for perfectionists with deadlines | Django : https://www.djangoproject.com/ Git教程Pro Git 简体中文版: http://iissnan.com/progit/ IT Reading List:Hacker Noon: https://hackernoon.com/CSDN-专业IT技术社区 : https://www.csdn.net/V2EX: https://www.v2ex.com/Salesforce Developers Blog : https://developer.salesforce.com/blogs/Free Programming Books – GoalKicker.com: https://goalkicker.com/Fundebug博客: https://blog.fundebug.com/SegmentFault 思否: https://segmentfault.com/Salesforce Trailblazer Community : https://success.salesforce.com/Stack Overflow - Where Developers Learn, Share, &amp; Build Careers: https://stackoverflow.com/Blog Posts - Salesforce Admins: https://admin.salesforce.com/postsHTML Online Articles - Tips, tricks, tutorials…: https://html-online.com/articles/腾讯云 - 连接智能未来 : https://cloud.tencent.com/人人都是产品经理 | 产品经理、产品爱好者学习交流平台 : http://www.woshipm.com/The SitePoint Forums : https://www.sitepoint.com/community/"},{"title":"项目","date":"2018-11-23T09:43:57.000Z","updated":"2025-05-06T03:51:48.337Z","comments":false,"path":"Project/index.html","permalink":"http://tonyrenhk.github.io/Project/index.html","excerpt":"","text":"项目列表News PostNews Post: Link Daily NoteDaily Note using Google App Script, DataBase is Google Drive Daily Note : Link Generate Blog Post Name for Jekyll Blog quickly Link Salesforce考试公众号"},{"title":"微信","date":"2018-11-23T09:43:57.000Z","updated":"2025-05-06T03:51:48.337Z","comments":false,"path":"Wechat/index.html","permalink":"http://tonyrenhk.github.io/Wechat/index.html","excerpt":"","text":"微信微信号微信号:kun_stylehk"},{"title":"hexo-theme-doc主题实现中文搜索","date":"2018-11-27T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"about/Temp.html","permalink":"http://tonyrenhk.github.io/about/Temp.html","excerpt":"","text":"Guide Users Through Your Business Processes with Cloud Flow Designerhttps://trailhead.salesforce.com/content/learn/modules/business_process_automation/flow 题目Guide users through creating a leadBuild a flow that creates a lead with user-entered information and uploads a related file for the lead. Then add the flow to a Home page. Challenge Requirements: Create a flow: Name: New Lead Type: Screen Flow In the flow, add a screen with these required screen fields. Last Name Company Name In the flow, create a lead record. Use the screen fields to set the lead’s Last Name and Company.Store the lead’s ID in a Text variable called leadId. In the flow, add another screen with a Lightning component screen field. Name the field Upload_File Choose the forceContent:fileUpload Lightning component. Use the leadId variable to set the component’s Related Record ID attribute. Activate the New Lead flow. Create a new Lightning page: Type: Home page Label: Process Automation Home In Process Automation Home, add a Flow component that references the New Lead flow. Activate the page and set it as the default Home page."},{"title":"关于我","date":"2018-11-23T09:59:12.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"about/index.html","permalink":"http://tonyrenhk.github.io/about/index.html","excerpt":"","text":"关于我本站本站建立于2018年。利用如下： Node.js框架Hexo 主题 Material-X 评论Valine，后来删除了，你在上面评论，我也看不到，不如直接联系我。。 照片原先使用简书存储，后来imgur，现在存储于Github上面 同时，部署于Github 和bitbucket上。 我我就没什么好写的了。 我是谁码农分享者我主业搞Salesforce,副业搞搞钱。。 我会啥SalesforcePythonJavaScript 我在学啥PythonNodejsReactjs… 联系我 邮件：renchk@foxmail.com 微信：点这里。 未来计划未来计划在博客里面加入如下信息 心知天气 : https://www.seniverse.com/ 加入lightningdesignsystem的bookmarks 加入金山词霸词典 声明本站提供的任何代码示例纯粹用于实验和学习目的，不提供任何保证或支持。本站的主要目的是分享知识和我个人的经验于学习历程。同时，部分公众号文章会经过本站的markdown排版之后发表。如果使用相关代码和本站内提及的有关方法，需要您自担风险。如果您有任何疑问或代码有任何问题，请随时与我联系（renchk@foxmail.com），或在下方留言。谢谢。"}],"posts":[{"title":"Python 入门基础学习笔记笔记","slug":"2022-02-01-PythonStudyNote1","date":"2022-02-01T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2022/02/01/2022-02-01-PythonStudyNote1/","link":"","permalink":"http://tonyrenhk.github.io/2022/02/01/2022-02-01-PythonStudyNote1/","excerpt":"Python量化入门学习笔记","text":"Python量化入门学习笔记 EMA 方法学习事件123456789101112131415161718import pandas as pdimport matplotlib.pyplot as plt stockValues = pd.DataFrame( &#123;'Stock_Values': [60, 102, 103, 104, 101, 105, 102, 103, 103, 102]&#125;) ema = stockValues.ewm(com=0.4).mean()print(ema)plt.plot(stockValues, label=\"Stock Values\")plt.plot(ema, label=\"EMA Values\")plt.xlabel(\"Days\")plt.ylabel(\"Price\")plt.legend()plt.show()","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Python","slug":"Python","permalink":"http://tonyrenhk.github.io/tags/Python/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Salesforce 管理员笔记","slug":"2021-11-01-SalesforceAdminNote","date":"2021-11-01T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2021/11/01/2021-11-01-SalesforceAdminNote/","link":"","permalink":"http://tonyrenhk.github.io/2021/11/01/2021-11-01-SalesforceAdminNote/","excerpt":"Salesforce admin Notes 这里记录一些管理员常用SQL。","text":"Salesforce admin Notes 这里记录一些管理员常用SQL。 PermissionObject: SetupEntityAccess ParentId SetupEntityId Permission_id class_id class_id or page_id Group Member后台把用户大量加入group里面的方法如下，object name: GroupMember UserOrGroupId GroupId USER_ID Group_Id 注意这里Group_Id可以为queue。 Sharing查询某一数据的 Sharing 的快速链接 https://yourcompany.salesforce.com/p/share/CustomObjectSharingDetail?parentId={your_recordId} 注意，如果是account，https://yourcompany.salesforce.com/p/share/AccSharingDetail?parentId={your_recordId} 直接打开某一对象的Sharing rule的设置页面，可以直接用如下链接： https://yourcompany.my.salesforce.com/p/own/OrgSharingDetail?st=your_object_Id}&amp;setupid=SecuritySharing 如何检查数据的Access Right？1SELECT RecordId,HasReadAccess FROM UserRecordAccess WHERE UserId = :userInfo.getUserId() AND RecordId = 'abc' 重置密码apex code1system.setPassword(&#39;&lt;user_id&gt;&#39;,&#39;your_password&#39;); 查询 Class 的PermissionCheck Class Permission SQL : 1select id,(SELECT Id, Parent.Name, Parent.Profile.Name FROM SetupEntityAccessItems) from ApexClass where name &#x3D; &#39;YourclassName&#39;","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Apex","slug":"Apex","permalink":"http://tonyrenhk.github.io/tags/Apex/"},{"name":"Admin","slug":"Admin","permalink":"http://tonyrenhk.github.io/tags/Admin/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Salesforce  开发者笔记","slug":"2020-11-25-SalesforceStudyNote","date":"2020-11-25T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2020/11/25/2020-11-25-SalesforceStudyNote/","link":"","permalink":"http://tonyrenhk.github.io/2020/11/25/2020-11-25-SalesforceStudyNote/","excerpt":"Salesforce Study Notes &amp; Apex tips","text":"Salesforce Study Notes &amp; Apex tips 修改User Profile 和License12345678910111213141516171819202122String userId &#x3D; &#39;0051i000001L23u&#39;;String NewProfileId &#x3D; &#39;00eD0000001AseK&#39;; user u &#x3D;[select id,ProfileId,UserPermissionsMarketingUser from user where id&#x3D; : userId];List&lt;permissionsetassignment&gt; PSAList &#x3D; [select AssigneeId ,PermissionSetId from permissionsetassignment where AssigneeId &#x3D;:userId and PermissionSet.License.Name !&#x3D;&#39;Salesforce&#39; ];List&lt;permissionsetassignment&gt; NewPSAList &#x3D; new List&lt;permissionsetassignment&gt; ();for(permissionsetassignment psa : PSAList)&#123;NewPSAList.add(new permissionsetassignment(AssigneeId &#x3D; userId, PermissionSetId &#x3D; psa.PermissionSetId ) );&#125;system.debug(&#39;user &#39;);system.debug(u);u.ProfileId &#x3D;NewProfileId;u.UserPermissionsMarketingUser &#x3D; false;update u;insert NewPSAList; SQL: select AssigneeId ,PermissionSetId from permissionsetassignment where AssigneeId &#x3D; ‘0051i000001L23u’ Apex如何remove 乱七八糟符号123String strText &#x3D; &#39;Welcome - to! % $sale&amp;sforce \\\\ &#x2F;code # crack %&#39;;strText &#x3D; strText.replaceAll(&#39;[^a-zA-Z0-9\\\\s+]&#39;, &#39;&#39;);System.debug(&#39;strText &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt; &#39;+strText); Check if user is FrozenPlease find below SQL, so that you can query related user if needed 1SELECT UserId,IsFrozen ,IsPasswordLocked FROM UserLogin WHERE UserId &#x3D;&#39;XXXXXXXX&#39; 复制A user permission 到 B User123456789101112131415161718192021222324252627282930313233343536373839404142434445String OldUserId = '005D00000023koO'; String NewUserId = '0051i000001KHkT'; //****************Copy Permission Set Assignment******************* List &lt;PermissionSetAssignment&gt; PSAList=[select id,AssigneeId,PermissionSetId,PermissionSet.Name from PermissionSetAssignment where AssigneeId=: OldUserId and PermissionSet.Name like 'XXX%']; List &lt;PermissionSetAssignment&gt; NewPSAList = new List &lt;PermissionSetAssignment&gt;(); set&lt;String&gt; NewPermissionSetId = new set&lt;String&gt; (); List &lt;PermissionSetAssignment&gt; NewPermissionList=[select id,AssigneeId,PermissionSetId,PermissionSet.Name from PermissionSetAssignment where AssigneeId=: NewUserId and PermissionSet.Name like 'XXX%']; for (PermissionSetAssignment PSA :NewPermissionList)&#123; NewPermissionSetId.add(PSA.PermissionSetId);&#125; for (PermissionSetAssignment PSA :PSAList)&#123; if(!NewPermissionSetId.contains(PSA.PermissionSetId ))&#123; PermissionSetAssignment temp = new PermissionSetAssignment(AssigneeId = NewUserId,PermissionSetId = PSA.PermissionSetId ); NewPSAList.add(temp); &#125;&#125;system.debug(NewPSAList);if(NewPSAList.size()&gt;0)&#123; insert NewPSAList; &#125; //***************Public Group******************* List &lt;GroupMember&gt; NewGMList = new List &lt;GroupMember&gt;(); set&lt;String&gt; NewGroupSetId = new set&lt;String&gt; ();List &lt;GroupMember&gt; OldGroupMemberList = [select GroupId,Group.Name,UserOrGroupId from GroupMember where UserOrGroupId =: OldUserId and Group.Name like 'XXX%']; List &lt;GroupMember&gt; NewGroupMemberList = [select GroupId,Group.Name,UserOrGroupId from GroupMember where UserOrGroupId =: NewUserId and Group.Name like 'XXX%']; for(GroupMember gm :NewGroupMemberList )&#123; NewGroupSetId.add(gm.GroupId );&#125;for(GroupMember gm :OldGroupMemberList )&#123; if(!NewGroupSetId.contains(gm.GroupId))&#123; GroupMember temp = new GroupMember(GroupId = gm.GroupId ,UserOrGroupId = NewUserId ); NewGMList.add(temp); &#125;&#125;insert NewGMList; 如何得到月尾的最后一天？123Date selectedDate = Date.today().addDays(4);Date firstDate = selectedDate.toStartOfMonth();p.Date__c =firstDate.addDays(date.daysInMonth(selectedDate.year() , selectedDate.month()) - 1); 把string 改为 date12Date x = Date.valueOf('2015-8-11'); system.debug('Now '+ x ); Scheduled Job每15分钟跑一次1234 System.schedule('Scheduled Job 1', '0 0 * * * ?', new ScheduledClass());System.schedule('Scheduled Job 2', '0 15 * * * ?', new ScheduledClass());System.schedule('Scheduled Job 3', '0 30 * * * ?', new ScheduledClass());System.schedule('Scheduled Job 4', '0 45 * * * ?', new ScheduledClass()); 可编辑字段(一)如何获得对象中的可编辑字段 123456Map&lt;String, Schema.SObjectField&gt; map = Schema.SObjectType.Custom1__c.fields.getMap();for(String fieldName : map.keySet()) &#123; if(map.get(fieldName).getDescribe().isUpdateable()) &#123; custom1.put(fieldName , 'some value'); &#125;&#125; 可编辑字段(二)下面function获得对象中的所有可编辑字段 12345678910111213141516public static String GetUpdateableField(String ObjectName)&#123; String QueryStr= 'select '; String[] types = New List&lt;String&gt;(); types.add(ObjectName); Schema.DescribeSobjectResult[] results = Schema.describeSObjects(types); for(string apiName : results[0].fields.getMap().keySet())&#123; Schema.SObjectField field = results[0].fields.getMap().get(apiName); Schema.DisplayType FldType = field.getDescribe().getType(); //system.debug('apiName : '+ apiName + ' || FldType:'+FldType + '|| is editable : '+field.getDescribe().isUpdateable() ); if(field.getDescribe().isUpdateable())&#123; QueryStr += apiName + ','; &#125; &#125; QueryStr = QueryStr.subString(0, QueryStr.length() - 1) + ' from '+ObjectName; return QueryStr;&#125; 常用代码注释模板如下提供几个模板仅供参考： 12345678910111213141516/*+-----------------------+------------------------------------------------------------------------------------+| Author | Your name +-----------------------+------------------------------------------------------------------------------------+| Description | For what? | | | - Object(s) | table name | - Description | what you are doing here? +-----------------------+------------------------------------------------------------------------------------+| Creation Date | 23/12/2016 +-----------------------+------------------------------------------------------------------------------------+| Modifications | 2/2/2017 who - doing what? +-----------------------+------------------------------------------------------------------------------------+| Governor informations | +-----------------------+------------------------------------------------------------------------------------+*/ 123456789101112131415161718192021222324252627/** * @name 名字 * @abstract 申明变量/类/方法 * @access 指明这个变量、类、函数/方法的存取权限 * @author 函数作者的名字和邮箱地址 * @category 组织packages * @copyright 指明版权信息 * @const 指明常量 * @deprecate 指明不推荐或者是废弃的信息MyEclipse编码设置 * @example 示例 * @exclude 指明当前的注释将不进行分析，不出现在文挡中 * @final 指明这是一个最终的类、方法、属性，禁止派生、修改。 * @global 指明在此函数中引用的全局变量 * @include 指明包含的文件的信息 * @link 定义在线连接 * @module 定义归属的模块信息 * @modulegroup 定义归属的模块组 * @package 定义归属的包的信息 * @param 定义函数或者方法的参数信息 * @return 定义函数或者方法的返回信息 * @see 定义需要参考的函数、变量，并加入相应的超级连接。 * @since 指明该api函数或者方法是从哪个版本开始引入的 * @static 指明变量、类、函数是静态的。 * @throws 指明此函数可能抛出的错误异常,极其发生的情况 * @var 定义说明变量/属性。 * @version 定义版本信息 */ 12345678 / ** 文件名：[文件名]* 作者：〈版权〉* 描述：〈描述〉* 修改人：〈修改人〉* 修改时间：YYYY-MM-DD* 修改内容：〈修改内容〉*/ 1234567891011121314 / ** 文件名：LogManager.java* 版权：Copyright 2000-2001 Huawei Tech. Co. Ltd. All Rights Reserved.* 描述： WIN V200R002 WEBSMAP 通用日志系统* 修改人：张三* 修改时间：2001-02-16* 修改内容：新增* 修改人：李四* 修改时间：2001-02-26* 修改内容：。。。。。。* 修改人：王五* 修改时间：2001-03-25* 修改内容：。。。。。。 */ 获得字段信息12345678910111213141516171819202122232425262728293031Map &lt; String, Schema.SObjectType &gt; schemaMap = Schema.getGlobalDescribe();Schema.SObjectType ObjectSchema = schemaMap.get('Account_Interface__c');Map &lt; String, Schema.SObjectField &gt; fieldMap = ObjectSchema.getDescribe().fields.getMap();for (String fieldName: fieldMap.keySet()) &#123; String fName = fieldMap.get(fieldName).getDescribe().getLabel(); system.debug('|| fName:'+fName);&#125;``` ## 获得字段类型 ```JavaMap &lt; String, Schema.SObjectType &gt; schemaMap = Schema.getGlobalDescribe();Schema.SObjectType ObjectSchema = schemaMap.get('Account_Interface__c');Map &lt; String, Schema.SObjectField &gt; fieldMap = ObjectSchema.getDescribe().fields.getMap();for (String apiName: fieldMap.keySet()) &#123; Schema.SObjectField field = fieldMap.get(apiName); Schema.DisplayType FldType = field.getDescribe().getType(); system.debug(FldType);&#125; 获得某一个对象的字段类型1234567public static String GetFieldType(Schema.SObjectType ObjectSchema , String FieldAPIName)&#123; Map &lt; String, Schema.SObjectField &gt; fieldMap = ObjectSchema.getDescribe().fields.getMap(); system.debug('FieldAPIName : '+FieldAPIName); Schema.SObjectField field = fieldMap.get(FieldAPIName.toLowercase()); Schema.DisplayType fName = field.getDescribe().getType(); return String.valueOf(fName);&#125; 动态更新Sobject12345678910public static void dynamicUpsert(List&lt;SObject&gt; records, SObjectType sObjectType)&#123; if (sObjectType != null) &#123; String listType = 'List&lt;' + sObjectType + '&gt;'; List&lt;SObject&gt; castRecords = (List&lt;SObject&gt;)Type.forName(listType).newInstance(); castRecords.addAll(records); upsert castRecords; &#125;&#125; This also works with Database.upsert for the following signatures:Database.upsert(List records)Database.upsert(List records, SObjectField externalIdField)Database.upsert(List records, Boolean allOrNone)It does not work for the following signature because it causes a compile fail:Database.upsert(List records, SObjectField externalIdField, Boolean allOrNone) 新建File123456789101112131415public static void UploadIntoFile(Blob requestBody,String FileName)&#123; try&#123; // select id,Title from ContentDocument //String yourFiles = FileBody;//Lets assume this is your binary string of the files'; datetime myDateTime = datetime.now(); ContentVersion conVer = new ContentVersion(); conVer.ContentLocation = 'S'; // S specify this document is in SF, use E for external files conVer.PathOnClient = 'File.txt'; // The files name, extension is very important here which will help the file in preview. conVer.Title = FileName + String.valueOf(myDateTime) ; // Display name of the files conVer.VersionData = requestBody;//EncodingUtil.base64Decode(yourFiles); // converting your binary string to Blog insert conVer; &#125;catch(dmlException e)&#123; system.debug(e.getMessage()); &#125; &#125; Reference : https://developer.salesforce.com/docs/atlas.en-us.api.meta/api/sforce_api_objects_contentdocument.htm 12345678ContentVersion cont = new ContentVersion();cont.Title = 'Title for this contentVersion';cont.PathOnClient = 'file_' + Datetime.now().getTime() + '.txt';cont.VersionData = Blob.valueOf('My Content in file_' + Datetime.now().getTime() + '.txt');cont.Origin = 'H';insert cont; SQL –&gt;List–&gt; Map1map&lt;id, User&gt; userMap = new map&lt;id, User&gt;([select ID,ManagerId,Manager.Email from User where id in : OwnerIdSet]); Tell the Day of the Week of a Date12345Date d = System.today();Datetime dt = (DateTime)d;String dayOfWeek = dt.format('EEEE');system.debug('dayOfWeek : '+dayOfWeek); 12345Date d = System.today();Datetime dt = (DateTime)d;String dayOfWeek = dt.format('u');System.debug('~~~~~~~~~ ::'+dayOfWeek);","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Apex","slug":"Apex","permalink":"http://tonyrenhk.github.io/tags/Apex/"},{"name":"StudyNote","slug":"StudyNote","permalink":"http://tonyrenhk.github.io/tags/StudyNote/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Heroku学习以及相关资料","slug":"2020-08-01-Heroku-Study","date":"2020-08-01T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2020/08/01/2020-08-01-Heroku-Study/","link":"","permalink":"http://tonyrenhk.github.io/2020/08/01/2020-08-01-Heroku-Study/","excerpt":"Heroku 常用命令行","text":"Heroku 常用命令行 安装Heroku CLI首先需要安装Heroku CLI在本地中，安装连接如下： macOS Homebrew 安装如下: 1$ brew tap heroku&#x2F;brew &amp;&amp; brew install heroku Ubuntu 16+ 安装如下: 1$ sudo snap install --classic heroku 或者： 1$ curl https:&#x2F;&#x2F;cli-assets.heroku.com&#x2F;install.sh | sh 当然，在snapcraft上也是可以https://snapcraft.io/ 也是可以下载的。snapcraft链接如下：https://snapcraft.io/heroku 或者参考官方链接：https://devcenter.heroku.com/articles/heroku-cli#download-and-install npm方法：npm的方法需要提前安装Node和npm 1$ npm install -g heroku Windows电脑64位电脑安装下载：https://cli-assets.heroku.com/heroku-x64.exe32位电脑安装下载：https://cli-assets.heroku.com/heroku-x86.exe 如何检查自己是否安装成功？如下命令行查看目前版本 1heroku --version 如果发现自己版本不够新，可以使用下面命令行更新 1heroku update 登入Heroku首先需要在本地登入，如下方法是会跳转到网页进行授权登入。 1$ heroku login 有时候，我们在服务器上登入，可以用下面的方法登入 123456$ heroku login -iheroku: Enter your login credentialsEmail: me@example.comPassword: ***************Two-factor code: ********Logged in as me@heroku.com 登入后，命令行会将您的电子邮件地址和API token 保存到~&#x2F;.netrc 中。 #如果登入有问题怎么办？如果您在登录时遇到问题，请尝试移动.netrc文件。 12mv ~&#x2F;.netrc ~&#x2F;.netrc.backupheroku login 同时，登出命令行为heroku logout。 如何查看自己的token？12$ heroku auth:tokenc4cd94da15ea0544802c2cfd5ec4ead324327430 如何新建一个项目?直接输入heroku create就会新建一个app 123$ heroku create › Creating app... done, ⬢ fierce-sands-29965https:&#x2F;&#x2F;fierce-sands-29965.herokuapp.com&#x2F; | https:&#x2F;&#x2F;git.heroku.com&#x2F;fierce-sands-29965.git 但是该方法会新建一个随机名字的app，这里是fierce-sands-29965，它的git地址为https://git.heroku.com/fierce-sands-29965.git。 如果我们需要创建一个名为“ example”的新应用，可以参考如下： 1234567$ mkdir example$ cd example$ git init$ heroku apps:create exampleCreating ⬢ example... donehttps:&#x2F;&#x2F;example.herokuapp.com&#x2F; | https:&#x2F;&#x2F;git.heroku.com&#x2F;example.gitGit remote heroku added 如果你已经有Repository，可以 在新目录或现有目录中初始化git存储库 1234$ cd my-project&#x2F;$ git init$ heroku git:remote -a my-project这里所谓的git:remote -a， 翻译成git语言就是git remote add heroku my-project #如何删除你的app？假如这里我要删除上午新建的app ‘fierce-sands-29965’，可以使用heroku apps:destroy命令行： 123456 heroku apps:destroy fierce-sands-29965 › ▸ WARNING: This will delete ⬢ fierce-sands-29965 including all add-ons. ▸ To proceed, type fierce-sands-29965 or re-run this command with --confirm fierce-sands-29965&gt; fierce-sands-29965Destroying ⬢ fierce-sands-29965 (including all add-ons)... done 如何复制你的Repository 到本地？12$ heroku git:clone -a test-app$ cd test-app test-app为你在Heroku上的app #​如何部署你的应用？​参考如下代码： 123$ git add .$ git commit -am &quot;make it better&quot;$ git push heroku master 这里就是完全使用Git语言。 如何分叉应用？有时候你可能需要fork 一个production出来，使用heroku fork复制现有的应用程序，包括加载项，config vars和Heroku Postgres数据。 12345678$ heroku fork --from sourceapp --to targetappCreating fork targetapp... doneCopying slug... doneAdding heroku-postgresql:dev... doneCreating database backup from sourcapp... .. doneRestoring database backup to targetapp... .. doneCopying config vars... doneFork complete, view it at http:&#x2F;&#x2F;targetapp.herokuapp.com&#x2F; 注意：原始应用程序称为sourceapp，而新的分支应用程序称为targetapp。 #如何查看现有的app? 1$ heroku apps 如何查看自己收藏的应用(favorited apps)？ 1$ heroku apps:favorites 如何查看你的app信息？1$ heroku apps:info your-app 这里可以查看你的app网站url和安装了那些Addons，还有容量等信息 1234567891011&#x3D;&#x3D;&#x3D; sfdc-nodejsAddons: scheduler:standardAuto Cert Mgmt: falseDynos: web: 1Git URL: https:&#x2F;&#x2F;git.heroku.com&#x2F;sfdc-nodejs.gitOwner: youname@qq.comRegion: usRepo Size: 5 MBSlug Size: 27 MBStack: heroku-16Web URL: https:&#x2F;&#x2F;sfdc-nodejs.herokuapp.com&#x2F; 同时，有时候需要查看你的Heroku配置变量。 1$ heroku config -a sfdc-nodejs 那么怎么添加变量呢？这里我们添加RAILS_ENV和RACK_ENV都为staging。 1$ heroku config:set -a sfdc-nodejs RAILS_ENV&#x3D;staging RACK_ENV&#x3D;staging sfdc-nodejs为你的app名字。假如需要删除变量， 1$ heroku config:unset -a pernod-ricard-sfdc-nodejs RAILS_ENV 如何重启dyno？ 1$ heroku dyno:restart -a your-app 如何查看日志Logs? 1$ heroku logs -a your-app 查看postgresql 数据库信息： 1$ heroku pg -a your-app 这里可以查看有多少条数据和几个表。 #如何对app进行重命名？ 1$ heroku apps:rename --app oldname newname 注意名字需要用小写。同时，如果修改名字，所有本地Git URL都得修改。 展示Heroku 服务器的地区1$ heroku regions 会显示如下 12345678910ID Location Runtime───────── ─────────────────────── ──────────────eu Europe Common Runtimeus United States Common Runtimedublin Dublin, Ireland Private Spacesfrankfurt Frankfurt, Germany Private Spacesoregon Oregon, United States Private Spacessydney Sydney, Australia Private Spacestokyo Tokyo, Japan Private Spacesvirginia Virginia, United States Private Spaces 如何run console?假如在yourApp 下面有nodeFile.js，需要执行，可以执行如下代码 1$ heroku run -a yourApp node nodeFile.js #查看目前sessions 1$ heroku sessions 查看目前的add-ons123456$ heroku addonsOwning App Add-on Plan Price State ───────────────────────── ────────────────────────────── ─────────────────────────── ───── ───────bitnews1 mongolab-shaped-58019 mongolab:sandbox free createdbitnews1 newrelic-slippery-34265 newrelic:wayne free createdbitnews1 scheduler-dimensional-71609 scheduler:standard free created 如何新建一个PostgreSQL数据库1$ heroku addons:create heroku-postgresql:hobby-dev -a yourApp 如何新建一个mongolab 数据库1$ heroku addons:create mongolab -a yourApp 列表可以参考 ：https://devcenter.heroku.com/categories/add-on-documentation 新建一个scheduler1$ heroku addons:create scheduler:standard -a yourApp 本文系笔者在开发时候积累的常用命令行，并不是全部命令行，欲查阅全部命令行，请参考Heroku 开发者中心 参考文章： https://devcenter.heroku.com/articles/heroku-cli https://devcenter.heroku.com/articles/heroku-cli-commands","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Heroku","slug":"Heroku","permalink":"http://tonyrenhk.github.io/tags/Heroku/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Salesforce Pardot Study","slug":"2020-07-11-Pardot-Study-Note","date":"2020-07-11T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2020/07/11/2020-07-11-Pardot-Study-Note/","link":"","permalink":"http://tonyrenhk.github.io/2020/07/11/2020-07-11-Pardot-Study-Note/","excerpt":"Salesforce Pardot Study Note","text":"Salesforce Pardot Study Note Guide: Trailhead | Help &amp; Support Pardot Specialist Resource Guide | Salesforce Chris Question : Pardot Specialist &#x2F; Consultant Exam Study Questions — Kristina’s Alexandra’s Blog TrailheadTrailmixes | Salesforce TrailheadTrailmixes | Salesforce TrailheadQuestionhttps://www.proprofs.com/quiz-school/story.php?title=pardot-consultant-2019-practice-questionsray tron ：https://www.proprofs.com/discuss/account/?user=cmF5dHJvbjgwMDA=&amp;qpage=1 https://www.proprofs.com/discuss/account/?user=cmF5dHJvbjgwMDA=https://www.proprofs.com/quiz-school/story.php?title=mjm1mjqxmqy6q0 https://quizlet.com/339976878/info Pardot Consultant - ProProfs Quiz 😀 https://www.examtopics.com/exams/salesforce/crt-160/view/7/ 视频https://www.youtube.com/watch?v=FXsYS4NL8TA Reference Link: Pardot Lightning App Basics | Salesforce Trailhead Salesforce &amp; Pardot Integration | Salesforce Trailhead Pardot Lead Generation for Salesforce Classic | Salesforce Trailhead Pardot Salesforce Integration for Lightning App | Salesforce Trailhead Modules | Salesforce Trailhead","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Pardot","slug":"Pardot","permalink":"http://tonyrenhk.github.io/tags/Pardot/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"营销云 Marketing Cloud 学习笔记","slug":"2020-07-10-Marketing-Cloud","date":"2020-07-10T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2020/07/10/2020-07-10-Marketing-Cloud/","link":"","permalink":"http://tonyrenhk.github.io/2020/07/10/2020-07-10-Marketing-Cloud/","excerpt":"三分钟教你打通Salesforce平台和营销云Marketing Cloud Connect过来了解一下~","text":"三分钟教你打通Salesforce平台和营销云Marketing Cloud Connect过来了解一下~ 众所周知，Salesforce平台包括Sales Cloud和Service Cloud等，和Marketing Cloud并不是联通的系统，很多时候需要人手打通，今天带大家了解一下如何快速Salesforce平台连接至营销云Marketing Cloud平台上。 首先需要安装一个APP到你的Saleforce平台上面 安装连接如下： 如果你是Production Org可以用这个链接：https://sfdc.co/MCC 如果你是Sandbox Org，可以使用这个链接：https://sfdc.co/MCCSandbox 点击安装和有关授权之后， 安装成功之后，会收到邮件。安装的详细帮助文档可以参考如下： https://help.salesforce.com/articleView?id=mc_co_install_marketing_cloud_connect.htm&amp;type=5 首选，需要在Salesforce平台，在User layout把Marketing Cloud for AppExchange Admin和Marketing Cloud for AppExchange User拖出来。 效果如下， 在自己的User Details里面打上勾。 在Lead的layout上面，把Email Sends 和Individual Email Results拖到Related List里面 同时，把LeadActions的Visualforce Page拖到Page Layout里面。 同样做法，在Contact的layout上面，把Email Sends 和Individual Email Results拖到Related List里面，把LeadActions的Visualforce Page拖到Page Layout里面。 接下来，需要新建一个Permission，如下， 在Lead的Email Opt Out field，选择Set Field-Level Security，将需要进行连接的用户Profile，设置为Visible 在Contact的Email Opt Out field，选择Set Field-Level Security，将对应的Profile设置为Visible， 至此，Salesforce部分的配置已经完成一部分了。 接下来是登入Marketing Cloud，在Setup处，点击Apps，选择Salesforce Intergration， 点击 Connect Account，会出现如下画面。 点击授权之后，会跳转回原来的Marketing Cloud画面。 至此，Marketing Cloud的相关授权已经完成。 接下来，我们需要回到Salesforce上，在Setup上面，选择Apps–&gt;App Manager。 修改Connected App为如下 Permitted Users：Admin approved users are pre-authorized IP Relaxation：Relax IP restrictions. Refresh Token Policy：Immediately expire refresh token 然后点保存。 最后在Permission处，选择刚刚新建的Permission。 在Setup处，选择Process Automation Settings，将Default Workflow User处修改成管理员。 在Setup处，选择Session Settings，然后什么也不用做，点保存即可。 接下来在App Lancher上，选择Marketing Cloud的Tab，进入配置环境。 然后点击Verify即可。 接下来你会跳到下面这个页面。 接下来直接点Next，连续点好几个Next，直到Done为止。 接下来你会看到这样画面，选择I agree。然后点击Configure Marketing Cloud Connector。 理想情况下，你会看到这样画面。 接下来，系统会跳转到如下画面，点击Connect to Marketing Cloud。 正常情况下，你会跳转到如下页面。在Account处，选择Email。 把Sends这几个全部选上。 在Notifications处，输入您的邮箱，如果系统出错，会发邮件到您的邮箱里面。 在“Tracking”部分，为您的组织选择有关Marketing Cloud发送到CRM系统的特定电子邮件跟踪数据的适当选项。请记住，您为这些所做的选择可能会影响CRM组织的整体存储。 最后记得点击保存。接下来会跳转到如下页面，选择至少一个BU。 这样，Salesforce部分已经搞定。接下来，我们回到Marekting cloud部分，到User下面，点击Integrate，需要选择用户进行集成。 这里需要选择Salesforce内的用户名。 如果设置成功Salesforce.com Status处会显示Integrated。 就这样，我们已经完全打通了Salesforce平台和Marketing Cloud了！ 那么如何断开连接？ 在MC下，Marketing Cloud Email Studio 处，选择admin Tab。 相关参考文章： https://help.salesforce.com/articleView?id=mc_co_disconnect_account.htm&amp;type=5 https://help.salesforce.com/articleView?id=mc_co_marketing_cloud_connect.htm&amp;type=5 最后推荐一个Trailhead模块供大家学习： https://trailhead.salesforce.com/content/learn/modules/marketing-cloud-connect","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"MC","slug":"MC","permalink":"http://tonyrenhk.github.io/tags/MC/"},{"name":"MCC","slug":"MCC","permalink":"http://tonyrenhk.github.io/tags/MCC/"},{"name":"Marketing Cloud Connect","slug":"Marketing-Cloud-Connect","permalink":"http://tonyrenhk.github.io/tags/Marketing-Cloud-Connect/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"三分钟教你设计出一封交互式邮件","slug":"2020-06-12-Marketing-Cloud-Interactive-Email","date":"2020-06-12T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2020/06/12/2020-06-12-Marketing-Cloud-Interactive-Email/","link":"","permalink":"http://tonyrenhk.github.io/2020/06/12/2020-06-12-Marketing-Cloud-Interactive-Email/","excerpt":"【Salesforce营销云】交互式电邮学习","text":"【Salesforce营销云】交互式电邮学习 在Marketing Cloud（营销云)中，设计邮件是最常用的工作日常。很多时候我们会把一些问卷变成一个链接发送给邮件订阅者，然后订阅者会点开邮件里面的链接填写表单。这是传统方法，今天带大家了解一下交互式电邮，我们可以把问卷嵌入邮件中，让订阅者打开邮件，就可以直接填写表单。 在Content Builder中，有一个Interactive Content 模块，可以在电邮内部设计和用户交互的一些内容，如表单等内容。 Interactive Content 模块里面，有很多内置的模块如Review模块，Profile模块，Lead或者Case模块，或者从0开始。 如果是Review模块，可以为一些打分的选项。常用的应用场景可以是一些活动结束的报名反馈等 Progressive Profile可以是收集一些订阅者的文档信息如名字，电话电邮等。 也可以是一些Case类型表单。 也可以是Lead表单，甚至是新的潜在客户。 这里可以捕捉一些lead的基本信息。 接下来看看设置这一块，我们需要定义数据捕捉之后存储的地方，可以是现有的Data Extension，或者也可以自动新建一个新的Data Extension。 这里我们选择现有的Data Extension。 接下来需要设计我们需要向用户问的问题，如需要对方的名字和一些常用问题。 同时，我们在这里新增一个选项如Checkbox。注意，这个不是单选项，是多选择项。Radio才是单选。 选择Checkbox之后，需要设计问题名字，也就是Label. 同时可以设置一些选项给订阅者填选择。 就这样，在layout处就可以看到我们设计的问题。 同时可以设置一些隐藏字段，如email地址等 同时，也可以在Design处修改一些样式如提交按钮的颜色，或调整字体大小。 最终，我们电邮在手机端查看的样式如下。 怎么样？很简单吧？","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Marketing Cloud","slug":"Marketing-Cloud","permalink":"http://tonyrenhk.github.io/tags/Marketing-Cloud/"},{"name":"MC","slug":"MC","permalink":"http://tonyrenhk.github.io/tags/MC/"},{"name":"Interactive Email","slug":"Interactive-Email","permalink":"http://tonyrenhk.github.io/tags/Interactive-Email/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Salesforce CPQ 学习资料","slug":"2020-06-01-CPQ-Study","date":"2020-06-02T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2020/06/02/2020-06-01-CPQ-Study/","link":"","permalink":"http://tonyrenhk.github.io/2020/06/02/2020-06-01-CPQ-Study/","excerpt":"CPQ 学习笔记","text":"CPQ 学习笔记 今天带大家了解一下Salesforce Certified CPQ Specialist考试是如何备考的。本文不会涉及任何考题，只会涉及考试知识点，所以，只要官方考点没有进行大的改版，本文长期有效。本文信息量巨大，建议直接分享至朋友圈或者当场收藏以便日后快速查阅。关于CPQ考试，Salesforce是建议有6到12个月的Salesforce CPQ项目经验的人参加考试。 01官方考纲 理想情况下，您将从事5到10个Salesforce CPQ项目的经验后参加考试。 如果你这从事过Salesforce CPQ相关项目经验，我们强烈建议您在开发者组织中基于实际业务场景构建解决方案。 如果您没有练习的环境，建议您注册一个CPQ 开发者环境，注册链接：https://developer.salesforce.com/promotions/orgs/cpqtrails 如果您是Salesforce客户，想将CPQ安装到您的Sandbox，可以利用如下链接 http://steelbrick2.force.com/Installcpq 考点分布： https://trailhead.salesforce.com/en/help?article=Salesforce-Certified-CPQ-Specialist-Exam-Guide Trailhead 的 Trailmix : https://trailhead.salesforce.com/users/strailhead/trailmixes/prepare-for-your-salesforce-cpq-specialist-credential 02知识点 本学习指南旨在帮助您回顾CPQ专家考试的目标和重点Salesforce CPQ概念。下面是考点分布。 考点 总结一下考点分布如下： 在每个部分中，您都可以从官方考试指南中找到业务场景，以及您必须了解Salesforce CPQ主题，才能为每个业务构建解决方案场景。 CPQ Platform****23% 用户会用到的关系图如下： 首先需要了解Products，Price Book和 Price book entries是做什么的。Products是您出售的所有项目和服务及其标准价格的基本目录。通过Price books，您可以创建具有特定用途的相关标价的自定义产品集合。 Price books公司向客户提供的产品和服务的价格。Price book entries跟踪每种产品的不同价格类型，以适应您向不同细分市场和客户销售产品的方式。可以参考如下官方帮助文档：https://help.salesforce.com/articleView?id=products_prices_sfx.htm&amp;type=5 考点：Design, configure, and troubleshoot price rules using lookup objects and formula fields to meet business requirements. Price Rules https://help.salesforce.com/articleView?id=cpq_price_rules_intro.htm 价格规则可以定位到配置器或报价行编辑器的计算器。如果您以计算器为目标，则可以设置“计算器评估事件”字段以应用价格规则： Before calculation After calculation During calculation Or during any combination of the above three Price Rule 注意事项 可以参考链接：https://help.salesforce.com/articleView?id=cpq_price_rule_considerations.htm&amp;type=0 **Price Rule Fields：**https://help.salesforce.com/articleView?id=cpq_price_rule_fields.htm&amp;type=5 Create a Price Condition 链接：https://help.salesforce.com/articleView?id=cpq_create_price_cond.htm&amp;type=5 注意：在执行Apex test class期间，Salesforce CPQ不执行price rules。Javascript报价计算器在外部网络服务中执行触发式计算，而Apex测试类不能进行任意触发。 Price Condition Fields 链接：https://help.salesforce.com/articleView?id=cpq_price_condition_fields.htm&amp;type=5 Price Actions 链接：https://help.salesforce.com/articleView?id=cpq_price_action_parent.htm&amp;type=5 Configurator Evaluation Events 链接：https://help.salesforce.com/articleView?id=cpq_config_pr_examples.htm&amp;type=5 Price Rules for Pricing Guidance 链接：https://help.salesforce.com/articleView?id=cpq_price_rule_pricing_guidance.htm&amp;type=5 考点：应用对报价计算顺序和报价行定价字段的了解，以满足定价和业务需求。这里可以参考如下帮助文档。 The CPQ Quote Calculation Sequence https://help.salesforce.com/articleView?id=cpq_manage_calc_seq.htm&amp;type=5 **考点：**Utilize out-of-the-box and custom permissions, record types, field sets, and page layouts to ensure users can fulfill their job requirements. Salesforce CPQ User permission set没有对CPQ对象的读取，创建，编辑或删除权限。我们建议您创建对quote, quote line group, quote line item, quote template, and quote document对象具有读取和写入权限的单独权限集，并将其分配给您的Salesforce CPQ用户。注意，用户必须具有一个字段的编辑权限才能将其映射到另一个字段。各种对象所需要的权限可以参考如下文档。 Salesforce CPQ Profile Permissions https://help.salesforce.com/articleView?id=cpq_profile_permissions.htm&amp;type=5 **考点：**Given a business process, demonstrate knowledge of CPQ data flow (e.g., twin fields) across CPQ objects. 这里需要的是对twin fields的掌握。 CPQ Twin Fields (Mapping Data Between Objects) https://help.salesforce.com/articleView?id=cpq_twin_fields.htm&amp;type=5 **考点：**展示有关CPQ对象数据模型的知识，因为它与数据迁移有关。 这里可以观看如下视频，**Best Practices &amp; Considerations for CPQ Data Migration **(Video) https://www.salesforce.com/video/1765277/ **考点：**为国际客户和用户设置用于本地化和多币种的CPQ。 重点链接：Translating CPQ Records https://help.salesforce.com/articleView?id=cpq_localization_concept.htm&amp;type=5 这里需要注意，Primary quote必须与其parent opportunity具有相同的币种。Pricebooks可以包含多种货币。但是，为了使产品出现在quote line编辑器的“产品选择”页面中，该产品必须具有与quote有相同的pricebook entry和币种在pricebook中。当您根据opportunity创建primary quote时，它将继承opportunity的货币。用户无法通过opportunity的primary quote字段更改与该opportunity相关的报价的币种。创建时，非primary quote默认为用户的货币值。所有的机会和报价都需要Price books 。当您根据opportunity创建quotes时，它会继承opportunity的Price books。Price books可以包含几种货币的价格，但是Salesforce CPQ仅会在opportunity的页面或者或“产品选择”页面上显示货币。其他关于多币种的信息，可以参考如下帮助文档。 Guidelines for CPQ in Multicurrency Orgs https://help.salesforce.com/articleView?id=cpq_multicurrency_cpq.htm&amp;type=5 考点：Given a scenario, determine the necessary CPQ package-level settings. 需要了解package级别的设置，相关设置可以在Installed Packages里面进行设置。 具体设置可以参考如下帮助文档，Salesforce CPQ Package Settings https://help.salesforce.com/articleView?id=cpq_package_settings.htm&amp;type=5 **考点：**Determine how the CPQ managed package fits within a Salesforce org. 这里推荐给大家一个Trailhead模块。 Master Salesforce Billing Admin Fundamentals https://trailhead.salesforce.com/en/content/learn/trails/salesforce-billing-admin-fundamentals Bundle Configurations****17% Bundle Configurations还是比较重要的，占有 17%的考试比例。 Learn Salesforce CPQ Admin Fundamentals: https://trailhead.salesforce.com/en/content/learn/trails/cpq-admin Bundle的意思大概是捆绑销售商品。有的地方叫Pack。 考点：Given a scenario, set up a bundle structure to meet business requirements. 那么如何新建Bundle呢？我们可以创建或选择一种产品作为您的Bundle父项。然后 从父产品的相关列表中创建所需的Features。关于Bundle的全部内容，可以参考如下帮助文档。 CPQ Product Bundles https://help.salesforce.com/articleView?id=cpq_bundle_products.htm&amp;type=5 这里特别需要注意的是基于Bundle 配置的唯一Quote Line码，当您的销售代表报价bundle 产品时，Salesforce CPQ可以根据bundle 的配置为其分配quote line唯一的打包产品代码。您可以为包装产品代码定义一个模板，该模板包含静态文本和变量的组合。然后，您的销售代表可以将每个包装产品代码用作SKU，并将已配置的bundle 销售数据快速发送给他们的订单小组。其他信息可以参考如下链接：https://help.salesforce.com/articleView?id=cpq_product_code_layout.htm&amp;type=5 还有一个Product Actions的例子，也可以参考如下链接， https://help.salesforce.com/articleView?id=cpq_product_actions.htm&amp;type=5 **考点：**Given a scenario, set up product rules to meet business requirements. 这个考点主要考察产品规则的知识点掌握。所有产品规则均包含错误条件( Error Conditions)，Actions和配置规则( Configuration Rules)的相关列表。注意任何规则都需要有Error Condition。这里可以参考下面两篇文章 Product Rules Overview 链接：https://help.salesforce.com/articleView?id=cpq_product_rules.htm&amp;type=5 Product Rule Guidelines https://help.salesforce.com/articleView?id=cpq_product_rule_guidelines.htm&amp;type=5 嵌套Bundles中的验证规则 ：https://help.salesforce.com/articleView?id=cpq_nested_validation_rules.htm&amp;type=5 ****Pricing:****16% 价格的考点也是CPQ考试比较重要的一环节，同时需要留意折扣和加价的一些模块。考点之一是：Given a scenario, identify the appropriate pricing strategy (discount schedules, block pricing, contracted prices, subscription pricing, percent-of-total, usage-based pricing). CPQ Pricing Methods https://help.salesforce.com/articleView?id=cpq_pricing_methods.htm&amp;type=5 您可以根据几个不同的数量范围为产品定价，这个就是大宗定价(Block Pricing)。当销售代表将该产品添加到报价中时，Salesforce CPQ会检查该产品在数量范围内的位置，并相应地对报价行进行定价。，示例如下，您可能出售小型企业某些订阅许可证，并按许可证数量进行收费，一到五个许可证$ 200，六到十个许可证$ 150，十一个或更多许可证$ 100。让我们看看如何在许可证的产品记录上设置批量定价。 订阅产品的定期折扣时间表也是一个考点之一。如果您使用的是期限折扣计划，我们建议您按期限对层进行命名，以方便参考。假如有下表。 如果客户购买有效期为12个月的产品，则可以享受20％的折扣。相关参考文档如下 Term-Based Discount Schedules https://help.salesforce.com/articleView?id=cpq_term_discount_schedules.htm&amp;type=5 还有一种折扣方式 Slab-Based Discount Schedules，考生也需要留意， https://help.salesforce.com/articleView?id=cpq_slab_ds_with_block.htm&amp;type=5 合约价格Contracted Pricing相关参考文档如下 https://help.salesforce.com/articleView?id=cpq_contracted_prices_parent.htm&amp;type=5 有一种常见的报价方式叫Multi-Dimensional Quoting (MDQ)，中文叫多维报价。您可以在quote line编辑器中将固定价格订阅产品显示为细分为一条quote line。每个细分代表一个时间单位（季度，月，年或自定义），并且定价和数量独立于该行的其他细分。相关参考文档如下 Guidelines for MDQ Products https://help.salesforce.com/articleView?id=cpq_mdq_guidelines.htm&amp;type=5 比方说，一个长达4年的MDQ，每年$4,000的报价如下所示。 使用MDQ需要有正确的开始日期才可以进行报价。同时，MDQ产品仅支持基于月的订阅条款单位，而且是不支持Usage Pricing。MDQ产品不能成为bundle产品的父母。 另外一个考点是：给定方案，确定预期的定价结果，这个也是常见的考点之一。这里有一个例子可以参考 Price Waterfall Example： https://help.salesforce.com/articleView?id=000271078&amp;language=en_US&amp;type=1 合作伙伴的定价流程是： List 单价-&gt; Partner 单价-&gt; Regular 单价-&gt; Customer 单价-&gt;Net 单价 比如原价是：$ 10,000，合作伙伴折扣有 20％，系统折扣为10％，额外折扣为 50％，分销商折扣为50％，最终价格为多少？ 合作伙伴折扣有 20％，那么$ 10,000 * 0.80 &#x3D; $ 8,000，Partner 单价：$ 8,000。 系统折扣为10％，$ 8000 * 0.9 &#x3D; $ 7,200，最后Regular 价格：$ 7,200 额外折扣为 50％，经过计算$ 7,200 * .05 &#x3D; $ 3,600，则Customer 单位价格：$ 3,600 分销商折扣为50％，之后$ 3,600 * 0.5 &#x3D; $ 1,800，结果净单价：$ 1,800 Quote Templates 7% Quote 模板其实是CPQ的重要环节，但是考点却只有7%。 Given a scenario, set up a quote template to meet business requirements. 考生需要掌握使用CPQ模板构建CPQ文档。Quote Templates控制报价单文件的格式和组织。每个模板都包含一些部分，您可以在其中自定义单个内容记录的显示方式。在报价文件中显示产品图像字段，在报价单草稿预览中显示水印在报价，添加或者删除CPQ报价文档的页眉和页脚，甚至可以显示Discount Schedules 在CPQ报价文档中。可以参考如下文章，Quote Template Overview https://help.salesforce.com/articleView?id=cpq_quote_templates.htm&amp;type=5 您可以设置您的CPQ报价单的样式，Styling Your Quote Documents https://help.salesforce.com/articleView?id=cpq_styling_cpq_quote_doc.htm&amp;type=5 如何通过’Conditional Print Field’控制Quote Line的显示。可以参考如下文章，Conditionally Display Line Columns https://help.salesforce.com/articleView?id=cpq_conditional_line_columns.htm&amp;type=5 注意，如果是有隐藏行列时，默认情况下，Salesforce CPQ会自动分配宽度给最右边的行列。 如何利用quote的字段值有效控制整个章节进行有条件显示，同样也是利用’Conditional Print Field’进行控制。可以参考如下章节，Conditionally Display Template Sections https://help.salesforce.com/articleView?id=cpq_conditional_temp_section.htm&amp;type=5 如果您的文档可能包含基于销售代表所销售quote类型的一些补充材料，则此功能很有用。 Quote templates 拥有很多选项对您的文档的布局 layout进行定制化。可以参考如下文章 Line Item Print Options https://help.salesforce.com/articleView?id=cpq_print_option_guidelines.htm&amp;type=5 同时，文档支持的字体有如下：https://help.salesforce.com/articleView?id=cpq_doc_fonts.htm&amp;type=5 Product Selection7% Given a scenario, use search filters, field sets, and custom actions to enable product selection and configuration. CPQ Search Filters https://help.salesforce.com/articleView?id=cpq_search_filters.htm&amp;type=5 创建一个自定义操作(Custom Action)，以在报价行编辑器或配置器中过滤产品，订阅或资产。 Filtering Custom Action https://help.salesforce.com/articleView?id=cpq_filter_custom_action.htm&amp;type=5 Orders, Contracts, Amendments, and Renewals 15% 如下图是CPQ各种对象的关系图。 **考点：**展示出对生成订单和合同所需数据的理解。 先来看看Order，您必须从Primary Quote价创建Orders。在Salesforce CPQ中，从Primary Quote创建Orders后，将无法编辑Primary Quote。新建Order时，您的订购产品将从其Primary Quote继承这些字段：List Price：Unit Price：Total Price。Order的状态字段默认设置为Draft草稿。您可以在Order为草稿时编辑Order上的字段并订购产品。单击Activate激活，将订单状态设置为已激活，并锁定字段编辑中的记录。您只能在订单激活后才能开票(invoice)或订立合同(contract)。单击Deactivate停用以使订单返回草稿状态并进行进一步的字段编辑。Guidelines for CPQ Orders https://help.salesforce.com/articleView?id=cpq_guidelines_create_orders.htm&amp;type=5 再来看看合同，如果需要从opportunity创建合同时，Salesforce CPQ需要以下对象和设置。 至少有一个订阅产品的机会 要有一个Lookup到业务机会的primary quote主要报价 在opportunity上有一个基于合同的续订方法 默认情况下，订阅将从quote Lines的开始日期和结束日期继承其开始日期和结束日期。相关参考文档如下 Creating a Contract from an Opportunity https://help.salesforce.com/articleView?id=cpq_contract_opp_concept.htm&amp;type=5 当然，也可以可以通过Order新建合同 Creating a Contract from an Order https://help.salesforce.com/articleView?id=cpq_contract_order_concept.htm&amp;type=5 **考点：**Demonstrate understanding of how to generate renewal and amendment quotes to meet business requirements. 修改你的合同 Amend Your Contracts https://help.salesforce.com/articleView?id=cpq_amend_contracts.htm&amp;type=5 其次需要了解如何修正程序， 如果您需要修改产品合同，而合同里面包含MDQ products，您的修订报价仅包含将来的MDQ products，不可以修改过去的MDQ，而且Salesforce CPQ不支持修改多个具有不同开始日期的MDQ订阅，在这种情况下，每个MDQ订阅的续订报价行开始日期等于报价或报价行组的开始日期。Amendment Processes https://help.salesforce.com/articleView?id=cpq_amendment_processes.htm&amp;type=5 Renew Your Contracts and Assets https://help.salesforce.com/articleView?id=cpq_renewal_parent_new.htm&amp;type=5 考点：Given a scenario, recommend when to use orders, contracts, subscriptions, and assets to meet business requirements. Subscription Guidelines https://help.salesforce.com/articleView?id=cpq_subscription_overview.htm&amp;type=5 也可以参考如下 https://help.salesforce.com/articleView?id=cpq_twin_fields.htm&amp;type=5 ** Products 11%** 产品也占有11%的比例。考点之一就是如何设置产品，价目表和价目表条目( products, pricebooks, and pricebook entries)。这里重点还包括MDQ的考察。可以参考如下文章，Guidelines for MDQ Products https://help.salesforce.com/articleView?id=cpq_mdq_guidelines.htm&amp;type=5 同时需要了解和使用定价准则，产品如果有消费计划(Consumption Schedules) 是不能有价格维度(Price Dimensions)，同时，报价行只能有一个数量。修改或续订时，您可以将数量从1更改为0。，而且也不支持持续订价格(Renewal Pricing)。注意，消费率帐单条款(Consumption Rate Billing Terms)必须大于或等于一个月,而且必须少于或等于5年或60个月。 Usage Pricing Guidelines https://help.salesforce.com/articleView?id=cpq_usage_pricing_guidelines.htm&amp;type=5 price book是什么？是产品的价格手册，也就是价格列表。standard price book就是标准价格。custom price book就是自定义价格，自定义价格手册是可以面向不同市场，地区或客户集提供不同产品价格。 Manage Pricebooks https://help.salesforce.com/articleView?id=pricebooks_landing_page.htm&amp;type=0 Considerations for Creating and Maintaining Pricebooks https://help.salesforce.com/articleView?id=pricebooks_considerations_for_creating.htm&amp;type=0 考点：演示产品目录设置如何影响总体CPQ数据流。 重点学习文章为：CPQ: Create a Product Catalog https://help.salesforce.com/articleView?id=000350951&amp;language=en_US&amp;type=1&amp;mode=1 Approvals 4% 考点：Select and set up advanced or native approvals to meet business requirements. CPQ有自己的高级审批流程。Setting Up Advanced Approvals https://help.salesforce.com/articleView?id=cpq_aa_setup_parent.htm&amp;type=5 03资源 这里列举了一些资源给大家： https://www.udemy.com/course/introduction-salesforce-cpq/ Help List:http://www.salesforcechris.com/salesforce-cpq-specialist-resource-guide/ Salesforce管理员认证备考秘籍 Pardot专家认证备考秘籍 Salesforce销售云考试备考秘籍","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"CPQ","slug":"CPQ","permalink":"http://tonyrenhk.github.io/tags/CPQ/"},{"name":"SFDC","slug":"SFDC","permalink":"http://tonyrenhk.github.io/tags/SFDC/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"LWC学习","slug":"2020-05-01-LWC-Study","date":"2020-05-01T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2020/05/01/2020-05-01-LWC-Study/","link":"","permalink":"http://tonyrenhk.github.io/2020/05/01/2020-05-01-LWC-Study/","excerpt":"LWC学习笔记","text":"LWC学习笔记 LWC下面如何加一个加载动画Spinner?局部加载: 123456789&lt;lightning-button label=\"Toggle\" variant=\"brand\" onclick=&#123;toggle&#125;&gt; &lt;/lightning-button&gt;&lt;br/&gt;&lt;div if:true=&#123;isLoaded&#125;&gt; &lt;lightning-spinner alternative-text=\"Loading...\"&gt;&lt;/lightning-spinner&gt;&lt;/div&gt; JavaScript代码如下： 12345@track isLoaded = false;toggle() &#123; this.isLoaded = !this.isLoaded;&#125; 全局加载： 1234567&lt;lightning-button label=\"Toggle Full\" variant=\"brand\" onclick=&#123;toggleFull&#125;&gt;&lt;/lightning-button&gt;&lt;br/&gt;&lt;div if:true=&#123;isLoadedFull&#125;&gt; &lt;lightning-spinner style=\"position: fixed;\" alternative-text=\"Loading...\"&gt;&lt;/lightning-spinner&gt; &lt;div style=\"position: fixed;\" class=\"slds-backdrop slds-backdrop_open\"&gt;&lt;/div&gt;&lt;/div&gt; JavaScript代码如下： 1234@track isLoadedFull = false;toggleFull() &#123; this.isLoadedFull = !this.isLoadedFull;&#125; 参考文章：https://developer.salesforce.com/docs/component-library/bundle/lightning:spinner/examplehttps://lightningdesignsystem.com/components/spinners/","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"LWC","slug":"LWC","permalink":"http://tonyrenhk.github.io/tags/LWC/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Salesforce 面试","slug":"2020-04-11-Salesforce-interview","date":"2020-04-11T00:00:00.000Z","updated":"2025-05-06T03:51:48.340Z","comments":true,"path":"2020/04/11/2020-04-11-Salesforce-interview/","link":"","permalink":"http://tonyrenhk.github.io/2020/04/11/2020-04-11-Salesforce-interview/","excerpt":"面试经验","text":"面试经验 ​1. 什么是Apex？ Apex是一种强类型，面向对象(object-oriented)的编程语言，允许开发人员通过将自己的业务逻辑编写到平台中来扩展Salesforce平台。Apex看起来类似于Java，可以通过各种用户启动的事件启动，例如记录更新，按钮单击，对象触发器或外部Web服务请求等。 官方参考链接： https://trailhead.salesforce.com/en/content/learn/modules/apex_database 2. 您可以直接在生产组织Production中自定义Apex和Visualforce吗？ Apex无法在生产组织中进行自定义，必须通过沙盒环境进行更改和部署并满足测试覆盖率。另一方面，Visualforce可以直接在生产中定制（这不是最佳实践 ） 3. Apex触发器可运行的两个选项是什么？ Apex触发器可以在保存记录之前或者之后运行。之前的操作通常用于验证将要插入的信息。之后的触发器操作用于处理其他数据而不是当前数据，如访问系统设置的当前对象的字段值（例如记录）ID 或者LastModifiedDate字段），并影响其他记录的更改。 官方参考链接： https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_triggers.htm 4. Apex何时应该用于Flow或Process Builder？ 您应该使用Apex而不是声明性自动化选项有多种原因： 1）Flow和Process Builder操作有时会有一些功能限制，需要用到Apex。例如，从外部系统中提取信息或者与外部系统进行交互。 在处理某些或大型数据集时，由于限制较少，Apex可以比声明性选项更有效。 5. Governor Limits是做什么的？ Salesforce在多multitenant环境中运行，这意味着Salesforce平台上的其他公司共享资源（存储，CPU，内存）。这也意味着必须有一定的限制以确保使用Salesforce体系结构的所有公司遵守某些规则，并且不要让他们的代码或流程独占共享资源。常见的Governor Limits限制的几个例子有如下一些： SOQL查询检索的记录总数 - 50,000 发出的SOQL查询总数（次数） - 100（同步）200（异步） 发布的DML报表总数 - 150 在一次transaction中可以用到的callouts次数（HTTP请求或Web服务调用） - 100 Salesforce服务器上的最大CPU运行时间 - 10,000毫秒（同步）60,000毫秒（异步） 官方参考链接： https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_gov_limits.htm 6. 知道如何进行Apex测试吗？ 该类问题的常见问法是：Apex测试覆盖范围是什么？部署所需的最低测试覆盖率是多少？ 为了确保您的代码符合一定的标准，Apex Code覆盖率显示了您的类和触发器中的代码可执行行数，同时需要成功执行。代码覆盖百分比是覆盖的代码行数除以覆盖代码行数和未覆盖代码行数之和。部署到生产所需的最低测试覆盖率为75％。 官方参考链接： https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_code_coverage_intro.htm 7. Apex 最佳实践例子和我们分享一下？ 参见的最佳实践有这些： 整理您的代码 避免FOR循环中的SOQL查询或DML语句 避免使用硬编码ID 官方参考链接： https://developer.salesforce.com/page/Apex_Code_Best_Practices **8. 如下代码有什么问题？**需要怎么改？ 12345678910111213trigger accountTestTrggr on Account (before insert, before update) &#123; for(Account a: Trigger.new) &#123; List&lt;Contact&gt; contacts &#x3D; [select id, salutation, firstname, lastname, email from Contact where accountId &#x3D; :a.Id]; for(Contact c: contacts) &#123; System.debug(&#39;Contact Id[&#39; + c.Id + &#39;], FirstName[&#39; + c.firstname + &#39;], LastName[&#39; + c.lastname +&#39;]&#39;); c.Description&#x3D;c.salutation + &#39; &#39; + c.firstName + &#39; &#39; + c.lastname; update c; &#125; &#125;&#125; 主要问题是在for循环中使用了查询或DML语句。一次transaction可以执行最大SOQL查询次数是100，如果这操作放在for循环中时，每次迭代循环都会调用一次数据库操作，这使得很容易达到这些调控器限制。如果一批超过100个帐户记录调用此触发器，则调控器限制将引发运行时异常。 现在修改如下，把update的动作放到For循环外面，如果使用单个帐户记录或最多200个帐户记录调用此触发器，则只执行一个SOQL查询和一个更新语句。 123456789101112131415trigger accountTestTrggr on Account (before insert, before update) &#123; List&lt;Account&gt; accountsWithContacts &#x3D; [select id, name, (select id, salutation, description, firstname, lastname, email from Contacts) from Account where Id IN :Trigger.newMap.keySet()]; List&lt;Contact&gt; contactsToUpdate &#x3D; new List&lt;Contact&gt;&#123;&#125;; for(Account a: accountsWithContacts)&#123; for(Contact c: a.Contacts)&#123; System.debug(&#39;Contact Id[&#39; + c.Id + &#39;], FirstName[&#39; + c.firstname + &#39;], LastName[&#39; + c.lastname +&#39;]&#39;); c.Description&#x3D;c.salutation + &#39; &#39; + c.firstName + &#39; &#39; + c.lastname; contactsToUpdate.add(c); &#125; &#125; update contactsToUpdate;&#125; #9. Apex Email Service是什么？ 您可以使用Apex Email Service来处理入站电子邮件的内容，标题和附件。例如，您可以创建一个电子邮件服务，该服务根据邮件中的联系信息自动创建联系人记录。参考链接： https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_email_inbound_what_is.htm #10. List, Set, Map在Apex中有什么区别？ List- 列表是按其索引区分的有序元素集合。列表元素可以是任何数据类型：基元类型，集合，对象，sObject，用户定义类型和内置Apex类型。Set - 集合是不包含任何重复的元素的无序集合。集合元素可以是任何数据类型 - 基元类型，集合，sObject，用户定义类型和内置Apex类型。Map - 地图是键值对的集合，其中每个唯一键映射到单个值。键和值可以是任何数据类型 - 基元类型，集合，sObject，用户定义类型和内置Apex类型。 参考链接：https://www.salesforceben.com/30-salesforce-developer-interview-questions-answers/ #11.Custom labels是什么？有什么限制？ Custom Labels是可从 Apex 类或 Visualforce 页访问的自定义文本值。此处的值可以转换为 Salesforce 支持的任何语言。它们的好处是使开发人员能够创建多语言应用程序, 这些应用程序以用户的母语自动显示信息。最多可以为组织创建 5, 000个Custom Labels, 它们的长度最多可以为 1000个字符。 #12. 用Visualforce写一个分页的例子 #13. 如何在JavaScript调用controller的方法？ 利用actionfunction。相关参考代码如下： 123456&lt;script&gt;function JSmethodCallFromAnyAction()&#123;callfromJS();&#125;&lt;&#x2F;apex:page&gt; #14. Get 和Set在Apex有什么用？ 简单来说，Get方法用于将值从控制器传递到 VF 页。而Set方法用于将值设置回控制器变量中。 ​在实际面试中会遇到不同的面试题目，以下列出了常见的面试题目供大家参考和学习。 #1. Role 和Profile有什么区别？ Profiles是可以，也是必须加到用户记录中，而Roles是可以选择性地加入到用户记录中。 Profile是可以控制用户CRED权限如（创建，读取，编辑，删除）。 它们还包含用户可以执行的系统权限，例如导出数据。3） Roles在整个组织内共享记录。 它们以hierarchical方式工作，使用户可以访问在公司组织结构中较低层的人的记录，如你的经理可以查看你的记录。官方参考链接：https://help.salesforce.com/articleView?id=admin_userprofiles.htm&amp;type=5 #2. 能否列出三种对象关系？ 1）查找关系Lookup：可用于将两个对象链接在一起。它是在两个对象之间创建子父关系(child-parent)的最基本的关系类型。2）主 - 细节关系 master-detail ：也可用于将两个对象链接在一起。主 - 细节关系在父母和孩子之间建立紧密的关系。子记录继承父级的安全性，如果删除父级，则还将删除所有关联的子级记录。主 - 细节关系创建了一些额外的功能，例如汇总汇总字段( roll-up summary)，其功能是允许在父项上计算子项的统计数据。3）多对多关系many-to-many：（也称为联结对象junction）允许您在需要建模多对多关系的两个对象之间创建关系。主要表现为一个子对象具有两个父对象，且是基于主 - 细节关系建立的。 官方参考链接： https://help.salesforce.com/articleView?id=overview_of_custom_object_relationships.htm&amp;type=5 #3. SOQL是干嘛的？ SOQL代表Salesforce对象查询语言。它与广泛使用的语言SQL（结构化查询语言）非常相似，用于查询数据库。SOQL专为Salesforce数据设计，用于查询Salesforce平台以检索数据。SOQL在Apex和Visualforce中用于返回数据集。注意SQL英文为Structured Query Language。 官方参考链接： https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql.htm #4. Salesforce.com 和 Force.com有什么区别？ Salesforce.com是SaaS（软件即服务）产品，而Force.com是PaaS产品（平台即服务）。Salesforce.com提供一系列预先打包的解决方案，例如专为特定目的而设计的销售Sales Cloud和服务云 &amp; Service Cloud。而Force.com允许您构建自己的应用程序。Salesforce.com建立在Force.com平台上。 #5.从沙盒环节部署到生产环境可以使用哪些选项？ 有多种方法可以从Sandbox 部署到Production。主要方法是使用名为Change Sets的Salesforce功能。这些允许您打包组件，然后将它们部署到另一个Salesforce组织。还有其他各种方法，包括ANT MIgration Tool，SFDX, Unmanaged包，metaforce, DreamFactory等。 官方参考链接:https://help.salesforce.com/articleView?id=deploy_overview.htm&amp;type=5 #6. 听说过bucket字段吗？知道是干什么的吗？ 可以在Salesforce报告中使用存储桶字段将字段值组合在一起。这些字段不是在Salesforce平台上创建的，只存在于报表本身中。官方参考链接:https://help.salesforce.com/articleView?id=reports_bucketing_overview.htm&amp;type=5 #7. 解释Workflow和Process Builder之间的区别？ Workflow和Process Builder是自动化工具，可用于扩展Salesforce平台功能。两者都是通过点击页面实现创建Workflow和PB，并具有各种功能和特性来自动化业务流程。 Workflow - 一种自动化工具，可以评估参数，并启动自动化功能。这些功能可以包括字段更新，发送电子邮件，创建任务或发送出站邮件。 Process Builder - 流程构建器是一种更新的自动化工具，具有更广泛的功能。这些包括创建记录，更新子记录，发布到聊天，启动Flow等。简单来说，流程构建器可以评估多个条件，并根据满足的条件触发不同的自动化。官方参考链接: https://help.salesforce.com/articleView?id=process_overview.htm&amp;type=5 #8. Sharing Rules一般是怎么使用的？ Sharing Rules的设置是用于拓展现有的共享设置。并根据定义的标准授予用户对一组记录的访问权限。可以基于记录的所有者或字段值分享给不同的profile，role或公共组。官方参考链接: https://help.salesforce.com/articleView?id=security_about_sharing_rules.htm&amp;type=5 #9. 解释汇总字段的使用以及可以使用的地方 汇总字段可用于根据父记录子记录计算信息。虽然公式字段可以计算单个记录中的信息，但汇总汇总字段可以计算一组子记录中的数据。例如，汇总字段可用于计算帐户上所有close won机会的总价值。汇总字段只能用于主 - 详细信息关系。 #10.记录类型Record Type和页面布局之间有什么关系Page Layouts 页面布局用于定义向用户显示哪些字段，部分和相关列表。页面布局控制对象记录页面上按钮，字段，s控件，Visualforce，自定义链接和相关列表的布局和组织。它们还有助于确定哪些字段是可见的，只读的和必需的。使用页面布局为用户自定义记录页面的内容。 可以参考官方参考链接:https://help.salesforce.com/articleView?id=customize_layout.htm&amp;type=0 记录类型Record Type可以通过定义不同的业务流程来扩展它。管理员可以创建不同的记录类型Record Type，以区分销售交易类别，为每个交易提供不同的选项列表值。 可以参考官方参考链接:https://help.salesforce.com/articleView?id=customize_recordtype.htm&amp;type=0 页面布局可以用于控制在记录上向用户显示哪些数据。如上所述，管理员可以更改页面中的任何元素，删除字段，部分，链接和自定义Visualforce代码等一系列模块。您可以将页面布局应用于不同的用户组（销售，支持，财务，管理），仅显示与该组用户相关的数据。而且，管理员还可以将页面布局应用于记录类型。 使用页面布局时需要注意的一件重要事项是，每个记录类型Record Type所对应的页面布局只能应用一个组用户的Profile。例如，如果您在帐户上有一种记录类型Record Type，则每个Profile只能应用一种页面布局。","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"面试","slug":"面试","permalink":"http://tonyrenhk.github.io/tags/%E9%9D%A2%E8%AF%95/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"如何在家进行Salesforce考试？","slug":"2020-03-09-How-Salesforce-exam","date":"2020-04-10T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2020/04/10/2020-03-09-How-Salesforce-exam/","link":"","permalink":"http://tonyrenhk.github.io/2020/04/10/2020-03-09-How-Salesforce-exam/","excerpt":"How to Salesforce online exam?","text":"How to Salesforce online exam? Salesforce在线网考方便灵活，不过需要自己准备考试环境。如果考试环境不合格，可能无法进入考试，或者在考试过程中被监考叫停。本文填坑，确保大伙儿顺利进行网考。 硬件要求 屏幕分辨率1024 x 768或以上 你的电脑需要有如下硬件设施： 屏幕分辨率1024 x 768或以上 网速（上下载速度至少1Mbps） 电脑要有内置麦可风 摄像头，受疫情影响，今年3月开始Salesforce临时取消独立摄像头的限制。但是，还是需要摄像头的。 最少有50MB可用空间 最少支持720p分辨率 帧率 30fps 注意：受疫情影响，Salesforce临时取消独立摄像头的限制。注意是临时取消，但是，考生电脑还是需要配备摄像头，并不是如网络传言取消摄像头限制。也就是说，Salesforce是允许你的电脑自用油内置摄像头进行备考。相关信息可以参考这篇文章：Salesforce为新冠病毒形势下推出的支援措施。 软件要求 屏幕分辨率1024 x 768或以上 软件要求如下： 操作系统 Win7或者以上，OS X 10.7以上 Net Framework 4.0，如果有Office办公软件，这项基本都已安装 Adobe Flash™ ActiveX 控件 浏览器 Safari (最新版本) Firefox (最新版本) Chrome (最新版本) 注意：IE已经被官方移除支持的浏览器名单了。 硬件测试 如果你不确定自己的网速及摄像头是否达标， KRYTERION提供以下网址可以测试，网速测试： http://test.kryteriononline.com/webcam-checker/ 也可以用这个网站进行摄像头测试： https://www.onlinemictest.com/webcam-test/ 开始考试 首先需要登入考试，链接：http://www.webassessor.com/salesforce 其次，需要安装在线考试软件在你的电脑里面，软件Windows下载地址如下： https://media.webassessor.com/sentinel/windows/v4/Setup.exe 如果你是第一次考试的话，需要采集你的照片信息。相关信息也可以在考试页面上看到。 在准备考试时，请关闭电脑其他软件如QQ，微信，邮件，以免有弹出消息导致考试中断。 在你快考试的大概前10分钟，你打开网站，如果已经可以开考，会见到一个’Launch’按钮。而还不能开考的，会显示问号。 点击‘Continue’继续。 然后会登入系统采集页面 这里需要点击’Start’才可以继续，系统会出现一个绿色的框，你需要调整自己的位置让绿色的框对准你的脸。 然后选择你的设备连接，点击继续： 这里需要调整你的摄像头位置，然后点开始考试。 考试中 如果你有佩戴眼镜，在考试时候，会突然弹出如下页面，不用紧张，这时候只需要把你的眼镜摘下来，如下图左边所示给监考看一下你的眼镜。 考试遇到问题怎么办？ 如果考试中出现问题，或突然中断，不用担心，你每做的一题都会存入系统中，不用担心你所做的题目会不见。 如果情况紧急的话，可以尝试通过如下方式联系Salesforce考试中心： Kryterion Kryterion Online Proctored Support 电话(需要用英文)： 美国本土电话：866-579-8374 (USA Toll Free) 或者1-877-313-2008 (US) 国际电话：+001-602-659-4679 (International) **邮箱：**support@kryteriononline.com 或者olpsupport@kryteriononline.com 或者在kryterion官网寻找在线帮助，点击’Chat with an Expert’ 网站如下：https://kryterion.force.com/support 如果你的情况不是很紧急的话，可以在Salesforce里面提一个Case。 http://certification.salesforce.com/open-a-case","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"exam","slug":"exam","permalink":"http://tonyrenhk.github.io/tags/exam/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"如何在Salesforce上搭建一个全球疫情排行榜？","slug":"2020-04-10-Salesforce-Covid-19-List","date":"2020-04-10T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2020/04/10/2020-04-10-Salesforce-Covid-19-List/","link":"","permalink":"http://tonyrenhk.github.io/2020/04/10/2020-04-10-Salesforce-Covid-19-List/","excerpt":"基于Salesforce LWC的全球疫情排行榜","text":"基于Salesforce LWC的全球疫情排行榜 今天我们来尝试在Salesforce上搭建一个‘全球疫情全球疫情趋势列表(排行榜)’，方便一些企业特别是外企能够在Salesforce内实时查看全球疫情趋势。 效果 废话不多说，先来看看效果。主页君将其发布在Salesforce Community 上，大家可以看看 https://trailhead-cn-developer-edition.na112.force.com/s/covid-19-list-01 也可以直接放在Salesforce主页(Home Page)上，有了这个，一些跨国企业可以在Salesforce主页上展示给员工该列表，这样员工每一次登入Salesforce就可以直接查看不同国家的新增确诊案例。 然后我们具体来看看怎么做。 首先，我们的思路是，在Salesforce后台通过实时API拿到全球疫情数据，然后，通过LWC前端展现出来，并且利用官方的一些模块化组建如lightning-datatable，将数据展现给用户。 其次我们需要解决数据源的问题，如何拿到全球确诊准确实时的数据是非常关键。我们可以调用Postman的一个API，直接Get就可以了，API End Point为https://api.covid19api.com/summary 之后我们需要分析接口，拿到的数据是分到‘国家’，并且显示了‘新增确诊’，‘累积确诊’等数据，如美国的情况，我们可以将其直接转换到lightning-datatable的格式。 123456789101112&#123; \"Country\": \"United States of America\", \"CountryCode\": \"US\", \"Slug\": \"united-states\", \"NewConfirmed\": 32129, \"TotalConfirmed\": 275582, \"NewDeaths\": 1161, \"TotalDeaths\": 7087, \"NewRecovered\": 0, \"TotalRecovered\": 0, \"Date\": \"2020-04-05T06:37:00Z\"&#125; 关于API的其他参考资料，大家可以参考Postman的文档：https://documenter.getpostman.com/view/10808728/SzS8rjbc?version=latest 然后我们可以在Apex Class，通过HttpRequest 调用其API。 1234567891011121314151617181920public without sharing class Covid19TrackerController &#123; @AuraEnabled(continuation=true cacheable = true) public static Map&lt;String, Object&gt; getCov19Data()&#123; Map&lt;String, Object&gt; results = new Map&lt;String, Object&gt; (); Http http = new Http(); HttpRequest request = new HttpRequest(); request.setEndpoint('https://api.covid19api.com/summary'); request.setMethod('GET'); HttpResponse response = http.send(request); // If the request is successful, parse the JSON response. if (response.getStatusCode() == 200) &#123; // Deserialize the JSON string into collections of primitive data types. results = (Map&lt;String, Object&gt;) JSON.deserializeUntyped(response.getBody()); &#125; return results; &#125; &#125; 关于Call out的文章，大家可以参考：https://trailhead.salesforce.com/en/content/learn/modules/apex_integration_services/apex_integration_rest_callouts 需要注意的是，这里需要把这个API放入Remote Site Setting 里面 然后新建一个LWC 的component，名字为 ：covid19TrackerCompt 在covid19TrackerCompt.html利用lightning-datatable把数据展示出来 12345678910111213141516171819&lt;template&gt; &lt;template if:true=&#123;showSpinner&#125;&gt; &lt;lightning-layout class=\"slds-m-top_medium slds-m-bottom_small\"&gt; &lt;lightning-spinner alternative-text=\"Loading\"&gt;&lt;/lightning-spinner&gt; &lt;/lightning-layout&gt; &lt;/template&gt; &lt;lightning-card title=\"新型冠状病毒全球排行榜\" icon-name=\"standard:announcement\"&gt; &lt;lightning-datatable key-field=\"id\" data=&#123;data&#125; show-row-number-column columns=&#123;columns&#125; sorted-by=&#123;sortBy&#125; sorted-direction=&#123;sortDirection&#125; onsort=&#123;handleSortdata&#125; hide-checkbox-column=true&gt; &lt;/lightning-datatable&gt; &lt;/lightning-card&gt; &lt;img src=&#123;FooterLogoUrl&#125; style=\"display: block; margin: 0 auto;\" &gt;&lt;/template&gt; 关于lightning-datatable的官方帮助文档，大家可以参考https://developer.salesforce.com/docs/component-library/bundle/lightning-datatable/example 接下来，在 covid19TrackerCompt.js上，拿Covid19TrackerController里面的全球个案数据。注意，由于这里我们使用官方的lightning-datatable，所以是没有排序功能的，所以要自己写，可以参见 sortData(fieldname, direction)，每一次点击‘新增确诊’，然后调用handleSortdata(event)，从而实现datatable的排序功能。 同时，我们给每一个国家加上一个状态，如果这个国家没有死亡病例，那么就是绿色，有死亡病例就是红色，可以通过TotalDeaths 来判断。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140import &#123; LightningElement, track, api, wire &#125; from 'lwc';import getCovidData from '@salesforce/apexContinuation/Covid19TrackerController.getCov19Data';import WechatPublicLogo_1 from '@salesforce/resourceUrl/WechatPublicLogo_1';// Summary Table columnsconst columns = [ &#123; label: '国家', fieldName: 'Country', type: 'text', sortable: \"true\", cellAttributes: &#123; class: &#123; fieldName: 'covidStatus' &#125; &#125; &#125;, &#123; label: '新增确诊', fieldName: 'NewConfirmed', type: 'number', sortable: \"true\", cellAttributes: &#123; class: &#123; fieldName: 'covidStatus' &#125; &#125; &#125;, &#123; label: '累积确诊', fieldName: 'TotalConfirmed', type: 'number', sortable: \"true\", cellAttributes: &#123; class: &#123; fieldName: 'covidStatus' &#125; &#125; &#125;, &#123; label: '新增死亡', fieldName: 'NewDeaths', type: 'number', sortable: \"true\", cellAttributes: &#123; class: &#123; fieldName: 'covidStatus' &#125; &#125; &#125;, &#123; label: '累积死亡', fieldName: 'TotalDeaths', type: 'number', sortable: \"true\", cellAttributes: &#123; class: &#123; fieldName: 'covidStatus' &#125; &#125; &#125;, &#123; label: '新增治愈', fieldName: 'NewRecovered', type: 'number', sortable: \"true\", cellAttributes: &#123; class: &#123; fieldName: 'covidStatus' &#125; &#125; &#125;, &#123; label: '累积治愈', fieldName: 'TotalRecovered', type: 'number', sortable: \"true\", cellAttributes: &#123; class: &#123; fieldName: 'covidStatus' &#125; &#125; &#125;];export default class Covid19TrackerCompt extends LightningElement &#123; // Expose the static resource URL for use in the template FooterLogoUrl = WechatPublicLogo_1; @track data = []; @track showSpinner = true; @track Initialized = false; @track columns = columns; @track sortDirection; @track sortBy; //connectedCallback() &#123; &#125; renderedCallback() &#123; console.log('enter renderedCallback'); getCovidData().then(data =&gt; &#123; if (this.Initialized) &#123; return; &#125; this.Initialized = true; console.log('***getCovidData1.0 **'); console.log(data.Global); this.data = []; for (let i = 0; i &lt; data.Countries.length; i++) &#123; let covidStatusVal = 'slds-text-color_success'; if (data.Countries[i].TotalDeaths &gt; 0) &#123; covidStatusVal = 'slds-text-color_error'; //error color code to display if total deaths &gt; 0 &#125; var row = &#123; id: data.Countries[i].Country, Country: data.Countries[i].Country, NewConfirmed: data.Countries[i].NewConfirmed, TotalConfirmed: data.Countries[i].TotalConfirmed, NewDeaths: data.Countries[i].NewDeaths, TotalDeaths: data.Countries[i].TotalDeaths, NewRecovered: data.Countries[i].NewRecovered, TotalRecovered: data.Countries[i].TotalRecovered, covidStatus: covidStatusVal &#125; //console.log(row); this.data.push(row); &#125; console.log('Done'); this.showSpinner = false; this.sortData('NewConfirmed', 'desc'); &#125;).catch(error =&gt; &#123; console.log(' ** error ** '); console.log(error); &#125;); &#125; //sorting methods handleSortdata(event) &#123; this.showSpinner = true; // field name this.sortBy = event.detail.fieldName; // sort direction this.sortDirection = event.detail.sortDirection; console.log('fieldName : '+event.detail.fieldName + ' sortDirection : ' + event.detail.sortDirection); // calling sortdata function to sort the data based on direction and selected field this.sortData(event.detail.fieldName, event.detail.sortDirection); &#125; sortData(fieldname, direction) &#123; // serialize the data before calling sort function let parseData = JSON.parse(JSON.stringify(this.data)); // Return the value stored in the field let keyValue = (a) =&gt; &#123; return a[fieldname]; &#125;; // cheking reverse direction let isReverse = direction === 'asc' ? 1 : -1; // sorting data parseData.sort((x, y) =&gt; &#123; x = keyValue(x) ? keyValue(x) : ''; // handling null values y = keyValue(y) ? keyValue(y) : ''; // sorting values based on direction return isReverse * ((x &gt; y) - (y &gt; x)); &#125;); // set the sorted data to data table data this.data = parseData; this.showSpinner = false; &#125;&#125; 最后，covid19TrackerCompt.js-meta.xml写为： 123456789101112&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;LightningComponentBundle xmlns=\"urn:metadata.tooling.soap.sforce.com\" fqn=\"covid19TrackerCompt\"&gt; &lt;apiVersion&gt;48.0&lt;/apiVersion&gt; &lt;isExposed&gt;true&lt;/isExposed&gt; &lt;targets&gt; &lt;target&gt;lightning__AppPage&lt;/target&gt; &lt;target&gt;lightning__RecordPage&lt;/target&gt; &lt;target&gt;lightning__HomePage&lt;/target&gt; &lt;target&gt;lightningCommunity__Page&lt;/target&gt; &lt;target&gt;lightningCommunity__Default&lt;/target&gt; &lt;/targets&gt;&lt;/LightningComponentBundle&gt; 怎么样，要不你也试试？","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"LWC","slug":"LWC","permalink":"http://tonyrenhk.github.io/tags/LWC/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"6招教你如何自定义Salesforce新版本移动应用程序！","slug":"2020-04-03-Salesforce-mobile","date":"2020-04-03T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2020/04/03/2020-04-03-Salesforce-mobile/","link":"","permalink":"http://tonyrenhk.github.io/2020/04/03/2020-04-03-Salesforce-mobile/","excerpt":"Salesforce Mobile学习 Study Resource","text":"Salesforce Mobile学习 Study Resource ​借助新版本的Salesforce移动应用程序，我们可以将Lightning的全部功能带入用户手机端。我们可以构建Salesforce桌面的所有这些自定义设置，而这些都将无缝地在移动应用程序中使用，包括Lightning导航和页面。无论使用哪种设备，Salesforce导航现在都相同了！ 这确实减少了培训和维护。如果您知道如何在电脑端用户是如何使用Salesforce，那么作为管理员就会自动知道手机上的内容。但是，如果您的用户有不同的工作流程怎么办？也许您的销售主管希望专注于高级仪表板，但是您的销售代表将所有时间都花在了“客户和机会”上。 使用Lightning应用程序，您可以根据用户角色创建不同的导航和工作流。如果您尚未为组织设置Lightning手机端应用程序，那么现在就该学习了！您将获得双倍的价值，因为现在有了新的Salesforce App Builder，Lightning应用程序也可以在移动设备上使用。 #01 为移动设备启用Lightning桌面自定义 如果您尚未激活Lightning应用程序和移动版页面，请先如下执行此操作！ 您可以从New Salesforce Mobile App Quickstart中一键激活所有应用程序和记录页面。路径为 Setup &gt; New Salesforce Mobile App Quickstart 或者，如果您希望采用更有效的方法，则可以一个接一个地浏览，然后选择要在移动设备上激活的应用程序和页面。无论哪种方式，它都非常容易实现，并为未来管理员的所有定制化奠定了基础。 在单独APP上面启动Lightning桌面自定义，路径为App Manager &gt; App Options 在Record Page 启动：App Builder &gt; Activation #02创造独特的移动体验 使用新的Salesforce移动应用程序，您自定义的Lightning记录页面将自动在您的手机上运行。每个组件都针对移动设备进行了优化，因此用户将获得在所有设备上都能正常使用的统一体验。 但是，您也可以创建特定于移动设备或台式机的自定义工作流程。如果您有某些Lightning组件在电话上没有意义怎么办？在移动设备上，少即是多；您想删除对用户来说有些混乱的东西。 或者，您可能已经建立了一个很棒的自定义组件，该组件使用手机的摄像头或位置。这仅适用于手机，因此您不希望它显示在桌面上。 使用Lightning App Builder，您现在可以根据用户的设备隐藏和显示组件。这适用于标准组件和自定义组件，并且非常容易实现。只需单击要隐藏在移动设备或台式机上的组件，然后根据设备设置可见性过滤器。（当您使用Lightning App Builder时，请不要忘记查看全新的“电话”预览模式！） 可以在App Builder上面设置在什么装置可见： 03发送自定义通知可以想象一下，您的老板想知道某人何时close won了一个Amount为2万的opportunity；或者您可能想基于自定义对象发送一些工作流程的通知。使用Notification Builder可以为任何操作创建自定义通知，并使每个人都在任何地方都能收到通知(前提你要可以上网)。 您可以轻松地将自定义通知添加到现有流程。在Notification Builder中创建新的通知，然后将其添加为Process Builder中的操作。您可以在其中填写所有详细信息，并在进行任何其他处理的同时触发通知。 当用户收到通知时，它将在所有设备上同步，显示在桌面上的通知面板中，并在手机上显示为推送通知。 #04创建针对移动设备优化的登入页面 在手机端上，有时很难在不同的列表和记录之间导航。有时候，我们可能希望销售代表打开应用程序，并查看包含其拥有的Accounts以及他们最近查看的其他记录的仪表板；或者，您可能希望您的高管立即查看该季度的销售数字报告。 那么，您可以使用Lightning应用程序页面轻松完成此操作，该页面可在电脑端和移动端上使用。创建一个自定义的页面，并将其添加为一个或多个Lightning应用程序中的导航项。然后，像记录页面一样，添加Lightning组件并设置组件可见性。为了获得让你的用户能够更加感受到你们的量身定制的体验，可以创建多个Lightning App Pages并开放给不同类型的用户。 05在Salesforce应用中显示Einstein Analytics仪表板 Einstein Analytics仪表板是可以查看有关业务的相关信息的好方法。如果您以前使用过Einstein Analytics，则可能会知道App Store中有一个单独的Einstein Analytics应用程序。但是，如果您希望用户在查看Salesforce中的其他项目时快速查看业务仪表板怎么办？在iOS上，用户现在可以从Salesforce APP应用程序中可以访问Einstein Analytics仪表板，以及其Salesforce记录和报告。 作为管理员，您甚至可以将Einstein Analytics仪表板嵌入到Lightning页面中，以便用户查看所有相关信息。用户可以点击仪表板以将其展开为完整视图。现在，商务智能(Business Intelligence )已融入其Salesforce 用户体验的每个部分。 同时，在Lightning App Builder也非常简单，只需将Einstein Analytics组件放入任何Lightning记录或应用程序页面就可以了。 06在移动设备上使用自动化业务流假设您希望销售代表每次与客户见面时都会问同样的问题，那么，我们将Flow组件添加到任何记录页面；或创建一个流(Flow)去执行任何Action。这样，销售就将能够轻按Flow并实时记录他们的答案，而无需离开记录页面。他们将通过移动端启动自动化流程，从而为销售们节省大量时间。 其他相关资讯，可以参考官方的release note： https://releasenotes.docs.salesforce.com/en-us/winter20/release-notes/rn_mobile_app_new_get_started.htm","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Salesforce Mobile","slug":"Salesforce-Mobile","permalink":"http://tonyrenhk.github.io/tags/Salesforce-Mobile/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"英语学习资源","slug":"2020-04-01-English-Study-Resource","date":"2020-04-01T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2020/04/01/2020-04-01-English-Study-Resource/","link":"","permalink":"http://tonyrenhk.github.io/2020/04/01/2020-04-01-English-Study-Resource/","excerpt":"英语学习 Study Resource","text":"英语学习 Study Resource News CNN International The New York Times ABC Home Page - ABC.com Reuters Financial Times Newsweek - News, Analysis, Politics, Business, Technology National Geographic The Economist Los Angeles Times CBC News HKUST Video Channel TV FOX: Stream Full Episodes of Your Favorite TV Shows Online Course国际名校公开课_网易公开课 Channel网易外语频道_网易教育_网易 Pronunciation英语朗读 - 英语在线发音 英语发音 entts.com 雅思无忧雅思网 英语电子邮件日常的50句用语工作中，少不了各种各样的工作邮件，特别是在外企更是日常必备了。商务邮件用英语书写已经很广分了，下面给大家介绍一些英文电邮里的高频句子，让你在职场中游刃有余。 I am writing to confirm&#x2F;enquire&#x2F;inform you… 我发邮件是想找你确认&#x2F;询问&#x2F;想通知你 有关… I am writing to follow up on our earlier decision on the marketing campaign in Q2. 我写邮件来是为了跟进我们之前对第二季度营销活动的决定。 With reference to our telephone conversation today… 关于我们今天在电话中的谈话… In my previous e-mail on October 5… 在之前10月5日所写的邮件中提到… As I mentioned earlier about… 在先前我所提到的关于… As indicated in my previous e-mail… 如我在之前邮件中所提到的… As we discussed on the phone… 如我们上次在电话中所说的… from our decision at the previous meeting… 如我们在上次会议中所决定的… as you requested… 根据贵方要求… In reply to your e-mail dated April 1，we decided… 回复贵方4月1日的邮件，我方决定… This is in response to your e-mail today. 这是对您今早发来的邮件的回复。 As mentioned before, we deem this product has strong unique selling points in china. 如先前所述，我们认为这个产品在中国有强有力且独一无二的销售点。 As a follow-up to our phone conversation yesterday, I wanted to get back to you about the pending issues of our agreement. 追踪我们昨天在电话中所谈，我想答复你我们合约的一些待解决的议题。 I received your voice message regarding the subject. I’m wondering if you can elaborate i.e. provide more details. 我收到了你关于这个主题的留言。我在想您你是否可以再详尽的说明一下，也就是再提供多一点相关细节。 Please be advised&#x2F;informed that… 请被告知…16. Please note that… 请注意… 17. We would like to inform you that… 我们想要通知你… 18. I am convinced that… 我确信… 19. We agree with you on… 我们同意你在…的看法。 20. With effect from 4 Oct., 2008… 从2008年10月4日开始生效… 21. We will have a meeting scheduled as noted below… 我们将举行一个会议，会议时间表如下。 22. Be assured that individual statistics are not disclosed and this is for internal use only. 请确保个人信息不会外泄且只供内部使用。 23. I am delighted to tell you that… 我很高兴地告诉你… 24. We are pleased to learn that… 我们很高兴得知… 25. We wish to notify you that… 我们希望通知你… 26. Congratulation on your… 恭喜您… 27. I am fine with the proposal. 我对这份提案没异议。 28. I am pleased to inform you that you have been accepted to join the workshop scheduled for 22-24 Nov,2008. 我十分高兴地通知你，我们已经同意您参加于2008年11月22-24日举行的研讨会。 29. We are sorry to inform you that… 我们很抱歉地通知您… 30. I’m afraid I have some bad news. 恐怕我今天要宣布一些坏消息。 31. There are a number of issues with our new system. 我们的新系统有些问题。 32. Due to circumstances beyond our control… 由于情况超出我们的控制… 33. I don’t feel too optimistic about… 我对…不太乐观 34. It would be difficult for us to accept… 我们很难接受… 35. Unfortunately I have to say that, since receiving your enquiries on the subject, our view has not changed. 我不得不这么说，自从收到你关于这个主题的询问，我们的看法都没有改变。 36. We would be grateful if you could… 如果你可以…我们会很感激的。 37. I could appreciate it if you could… 如果你可以…我会很感激。 38. Would you please send us…? 你能否寄给我们…? 39. We need your help. 我们需要你的帮助。 40. We seek your assistance to cascade&#x2F;reply this message to your staff. 我们希望您能将此信息传达给你们的员工，非常感谢。 41. We look forward to your clarification. 我们期待你的澄清。 42. Your prompt attention to this matter will be appreciated. 您若能立即关注此事，我们将非常感激。 43. I would really appreciate meeting up if you can spare the time. Please let me know what suits you best. 如果您能从百忙中抽出时间，我希望能与您见面，请让我知道您最适合的时间。 44. Please give us your preliminary thoughts about this. 请让我知道您对这件事情初步的想法。 45. Would you please reply to this e-mail if you plan to attend? 请您回信如果您计划参加? 46. Please advise if you agree with this approach. 请告知我们你是否同意这个方法。 47. Could you please let me know the status of this project? 请通知我这个计划的进度? 48. If possible, I hope to receive a copy of your proposal when it is finished. 如果可能，当你完成提案，我希望你能发一份复本给我。 49. I would appreciate it very much if you would send me your reply by next Monday. 如果能在下周一前收到您的答复，我将非常感激。 50. Hope this is OK with you. If not, let me know by e-mail ASAP. 希望您满意，如果不满意，请发邮件尽快通知我。 51. Could you please send me your replies to the above questions by the end of June? 请您在6月份前答复我上述问题好吗? 52. May I have your reply by April 1, if possible? 如果可能，我可否在4月1日前收到您的答复? 53. If you wish, we would be happy to… 如果你有需要，我们很乐意… 54. Please let me know if there’s anything I can do to help. 如果我有什么可以帮得上忙的, 请告诉我。 55.If there’s anything else I can do for you on&#x2F;regarding this matter, please feel free to contact me at any time. 对于这件事，如果还有什么我能帮得上忙的地方，请随时与我联络。 56.If you want additional recommendations on this, please let us know and we can try to see if this is possible. 如果关于此事你需要额外的建议，请让我们知道，我们会试着看看这是否可行。 57. I’m just writing to remind you of… 我只是写信来提醒您… 58. May we remind you that…? 我们想要提醒您… 59. I am enclosing… 我附上… 60. Please find enclosed… 请查阅附件… 61. Attached hereto… 附件是关于… 62. Attached please find the most up-to-date information on&#x2F;regarding&#x2F;concerning… 附上关于某某的最新资料… 63. Attached please find the draft product plan for your review and comment. 附上产品计划书的草稿，请审查及评价。 64. If you have any further questions, please feel free to contact me. 如果你有任何问题，请随时与我联系。 65. I hope my clarification has been helpful. 希望我的说明对你有所帮助。 66. Please feel free to call me at any time, I will continually provide full support. 请随时与我联系，我将持续地提供全程支持。 67. Please let me know if this is suitable. 请让我知道这是否恰当。 68. Looking forward to seeing you soon. 很期待能尽快见到你。 69. We look forward to hearing from you soon. 我们很期待能得到您的回复。 70. Hope this is clear and we are happy to discuss this further if necessary. 希望上述说明很清楚，如有必要，我们很乐意再进一步讨论。 71. I look forward to receiving your reply soon. 我期待很快能收到你的回复。 72. Looking forward to receiving your comments in due course. 期待在预期的时间收到你的反馈。 73. I’ll keep you posted. 我会与你保持联系。 74. Please keep me informed on the matter. 请随时让我知道这件事的发展。 75. For any comments&#x2F;suggestions, please contact Nadia at 2552-7482. 有任何评价或建议，请拨打2552-7482联络Nadia。 76. I would like to apologize for… 我想就…道歉… 77. I apologize for the delay in… 对于…的耽搁，我深感抱歉。 78. We are sorry for any inconvenience caused. 对于产生的任何不便，我们感到抱歉。 79. I am sorry for any inconvenience this has caused you. 对于造成的不便，我深感抱歉。 80. I’m sorry about last time. 上次的事我很抱歉。 81. We apologize for not replying you earlier. 对于未能早一点回信给你，我们感到抱歉。 82. I’m really sorry about this. 这件事，我真的很抱歉。 83. Sorry, I’m late in replying to your e-mail dated Monday, April 1. 抱歉，太迟回您在4月1日(星期一)发给我的邮件。 84. We apologize for the delay and hope that it doesn’t inconvenience you too much. 我们为耽搁道歉，希望这没有给您带来太多不便。 85.Hoping that this will not cause you too much trouble. 希望不会为您造成太多麻烦。 86.Sorry if my voice message is not clear enough. 如果我的电话留言不够清楚,我深感抱歉。 87. Thank you for your help. 谢谢你的帮助。 88. I appreciate very much that you… 我非常感激你… 89. I truly appreciate it. 我真的很感激。 90. Thank you for your participation. 谢谢你的参与。 91. Thank you so much for inviting me. 非常感谢您的邀请。 92. Congratulations to all of you and thanks for your efforts. 恭喜各位并十分感谢各位所做的努力。 93. Your understanding and cooperation is greatly&#x2F;highly appreciated. 很感激您的理解及合作。 94. Your prompt response will be most appreciated. 很感激您快速的答复。 95. Once again, thank you all for your commitment and support. 再一次感谢大家的承诺及支持。 96. Thanks for your input&#x2F;clarification&#x2F;message. 谢谢你的投入&#x2F;澄清&#x2F;信息。 97. Any comments will be much appreciated. 对于您提出的任何建议，我将深表感谢。 98. Thank you very much for everything you’ve done for me. 谢谢你为我所做的一切。 99. I would appreciate your kindest understanding with&#x2F;regarding this matter. 我很感激你对这件事情的理解。 100. Please convey my thanks to all the staff involved, they certainly did an excellent job. 请向有关的同仁传达我的谢意，他们真的干得很好。","categories":[{"name":"English","slug":"English","permalink":"http://tonyrenhk.github.io/categories/English/"}],"tags":[{"name":"Study","slug":"Study","permalink":"http://tonyrenhk.github.io/tags/Study/"},{"name":"英语学习","slug":"英语学习","permalink":"http://tonyrenhk.github.io/tags/%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/"}],"keywords":[{"name":"English","slug":"English","permalink":"http://tonyrenhk.github.io/categories/English/"}]},{"title":"SFDC Package XML Example","slug":"2020-03-15-SFDC-Metadata-Example","date":"2020-03-15T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2020/03/15/2020-03-15-SFDC-Metadata-Example/","link":"","permalink":"http://tonyrenhk.github.io/2020/03/15/2020-03-15-SFDC-Metadata-Example/","excerpt":"经常部署时候需要用到XML，这里列出了XML一个例子和全部items的full list。Metadata example","text":"经常部署时候需要用到XML，这里列出了XML一个例子和全部items的full list。Metadata example one XML example: 12345678&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;PermissionSet&lt;/name&gt; &lt;/types&gt; &lt;version&gt;46.0&lt;/version&gt;&lt;/Package&gt; Full example : 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485486487488489490491492493494495496497498499500501502503504505506507508509510511512513514515516517518519520521522523524525526527528529530531532533534535536537538539540541542543544545546547548549550551552553554555556557558559560561562563564565566567568569570571572573574575576577578579580581582583584585586587588589590591592593594595596597598599600601602603604605606607608609610611612613614615616617618619620621622623624625626627628629630631632633634635636637638639640641642643644645646647648649650651652653654655656657658659660661662663664665666667668669670671672673674675676677678679680681682683684685686687688689690691692693694695696697698699700701702703704705706707708709710711712713714715716717718719720721722723724725726727728729730731732733734735736737738739740741742743744745746747748749750751752753754755756757758759760761762763764765766767768769770771772773774775776777778779780781782783784785786787788789790791792793794795796797798799800801802803804805806807808809810811812813814815816817818819820821822823824825826827828829830831832833834835836837838839840841842843844845846847848849850851852&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ActionLinkGroupTemplate&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;AnalyticSnapshot&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ApexClass&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ApexComponent&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ApexPage&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ApexTestSuite&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ApexTrigger&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;AppMenu&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ApprovalProcess&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;AssignmentRules&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;AuraDefinitionBundle&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;AuthProvider&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;AutoResponseRules&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;BrandingSet&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;BusinessProcess&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CallCenter&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CampaignInfluenceModel&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CaseSubjectParticle&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Certificate&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ChannelLayout&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ChatterExtension&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CleanDataService&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Community&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CompactLayout&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ConnectedApp&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ContentAsset&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CorsWhitelistOrigin&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CspTrustedSite&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomApplication&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomApplicationComponent&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomFeedFilter&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomField&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomLabels&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomMetadata&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;members&gt;AcceptedEventRelation&lt;/members&gt; &lt;members&gt;Account&lt;/members&gt; &lt;members&gt;AccountContactRelation&lt;/members&gt; &lt;members&gt;AccountContactRole&lt;/members&gt; &lt;members&gt;AccountFeed&lt;/members&gt; &lt;members&gt;AccountHistory&lt;/members&gt; &lt;members&gt;AccountPartner&lt;/members&gt; &lt;members&gt;AccountShare&lt;/members&gt; &lt;members&gt;AccountTeamMember&lt;/members&gt; &lt;members&gt;ActionLinkGroupTemplate&lt;/members&gt; &lt;members&gt;ActionLinkTemplate&lt;/members&gt; &lt;members&gt;Activity&lt;/members&gt; &lt;members&gt;ActivityHistory&lt;/members&gt; &lt;members&gt;AdditionalNumber&lt;/members&gt; &lt;members&gt;AggregateResult&lt;/members&gt; &lt;members&gt;Announcement&lt;/members&gt; &lt;members&gt;ApexClass&lt;/members&gt; &lt;members&gt;ApexComponent&lt;/members&gt; &lt;members&gt;ApexEmailNotification&lt;/members&gt; &lt;members&gt;ApexLog&lt;/members&gt; &lt;members&gt;ApexPage&lt;/members&gt; &lt;members&gt;ApexPageInfo&lt;/members&gt; &lt;members&gt;ApexTestQueueItem&lt;/members&gt; &lt;members&gt;ApexTestResult&lt;/members&gt; &lt;members&gt;ApexTestResultLimits&lt;/members&gt; &lt;members&gt;ApexTestRunResult&lt;/members&gt; &lt;members&gt;ApexTestSuite&lt;/members&gt; &lt;members&gt;ApexTrigger&lt;/members&gt; &lt;members&gt;AppDefinition&lt;/members&gt; &lt;members&gt;AppMenuItem&lt;/members&gt; &lt;members&gt;AppTabMember&lt;/members&gt; &lt;members&gt;Approval&lt;/members&gt; &lt;members&gt;Asset&lt;/members&gt; &lt;members&gt;AssetFeed&lt;/members&gt; &lt;members&gt;AssetHistory&lt;/members&gt; &lt;members&gt;AssetRelationship&lt;/members&gt; &lt;members&gt;AssetRelationshipFeed&lt;/members&gt; &lt;members&gt;AssetRelationshipHistory&lt;/members&gt; &lt;members&gt;AssetShare&lt;/members&gt; &lt;members&gt;AssetTokenEvent&lt;/members&gt; &lt;members&gt;AssignmentRule&lt;/members&gt; &lt;members&gt;AsyncApexJob&lt;/members&gt; &lt;members&gt;AttachedContentDocument&lt;/members&gt; &lt;members&gt;AttachedContentNote&lt;/members&gt; &lt;members&gt;Attachment&lt;/members&gt; &lt;members&gt;AuraDefinition&lt;/members&gt; &lt;members&gt;AuraDefinitionBundle&lt;/members&gt; &lt;members&gt;AuraDefinitionBundleInfo&lt;/members&gt; &lt;members&gt;AuraDefinitionInfo&lt;/members&gt; &lt;members&gt;AuthConfig&lt;/members&gt; &lt;members&gt;AuthConfigProviders&lt;/members&gt; &lt;members&gt;AuthProvider&lt;/members&gt; &lt;members&gt;AuthSession&lt;/members&gt; &lt;members&gt;BackgroundOperation&lt;/members&gt; &lt;members&gt;BatchApexErrorEvent&lt;/members&gt; &lt;members&gt;BrandingSet&lt;/members&gt; &lt;members&gt;BrandingSetProperty&lt;/members&gt; &lt;members&gt;BusinessHours&lt;/members&gt; &lt;members&gt;BusinessProcess&lt;/members&gt; &lt;members&gt;CallCenter&lt;/members&gt; &lt;members&gt;Campaign&lt;/members&gt; &lt;members&gt;CampaignFeed&lt;/members&gt; &lt;members&gt;CampaignHistory&lt;/members&gt; &lt;members&gt;CampaignInfluenceModel&lt;/members&gt; &lt;members&gt;CampaignMember&lt;/members&gt; &lt;members&gt;CampaignMemberStatus&lt;/members&gt; &lt;members&gt;CampaignShare&lt;/members&gt; &lt;members&gt;Case&lt;/members&gt; &lt;members&gt;CaseComment&lt;/members&gt; &lt;members&gt;CaseContactRole&lt;/members&gt; &lt;members&gt;CaseFeed&lt;/members&gt; &lt;members&gt;CaseHistory&lt;/members&gt; &lt;members&gt;CaseShare&lt;/members&gt; &lt;members&gt;CaseSolution&lt;/members&gt; &lt;members&gt;CaseStatus&lt;/members&gt; &lt;members&gt;CaseTeamMember&lt;/members&gt; &lt;members&gt;CaseTeamRole&lt;/members&gt; &lt;members&gt;CaseTeamTemplate&lt;/members&gt; &lt;members&gt;CaseTeamTemplateMember&lt;/members&gt; &lt;members&gt;CaseTeamTemplateRecord&lt;/members&gt; &lt;members&gt;CategoryData&lt;/members&gt; &lt;members&gt;CategoryNode&lt;/members&gt; &lt;members&gt;ChatterActivity&lt;/members&gt; &lt;members&gt;ChatterExtension&lt;/members&gt; &lt;members&gt;ChatterExtensionConfig&lt;/members&gt; &lt;members&gt;ClientBrowser&lt;/members&gt; &lt;members&gt;CollaborationGroup&lt;/members&gt; &lt;members&gt;CollaborationGroupFeed&lt;/members&gt; &lt;members&gt;CollaborationGroupMember&lt;/members&gt; &lt;members&gt;CollaborationGroupMemberRequest&lt;/members&gt; &lt;members&gt;CollaborationGroupRecord&lt;/members&gt; &lt;members&gt;CollaborationInvitation&lt;/members&gt; &lt;members&gt;ColorDefinition&lt;/members&gt; &lt;members&gt;CombinedAttachment&lt;/members&gt; &lt;members&gt;Community&lt;/members&gt; &lt;members&gt;ConnectedApplication&lt;/members&gt; &lt;members&gt;Contact&lt;/members&gt; &lt;members&gt;ContactFeed&lt;/members&gt; &lt;members&gt;ContactHistory&lt;/members&gt; &lt;members&gt;ContactShare&lt;/members&gt; &lt;members&gt;ContentAsset&lt;/members&gt; &lt;members&gt;ContentBody&lt;/members&gt; &lt;members&gt;ContentDistribution&lt;/members&gt; &lt;members&gt;ContentDistributionView&lt;/members&gt; &lt;members&gt;ContentDocument&lt;/members&gt; &lt;members&gt;ContentDocumentFeed&lt;/members&gt; &lt;members&gt;ContentDocumentHistory&lt;/members&gt; &lt;members&gt;ContentDocumentLink&lt;/members&gt; &lt;members&gt;ContentDocumentSubscription&lt;/members&gt; &lt;members&gt;ContentFolder&lt;/members&gt; &lt;members&gt;ContentFolderItem&lt;/members&gt; &lt;members&gt;ContentFolderLink&lt;/members&gt; &lt;members&gt;ContentFolderMember&lt;/members&gt; &lt;members&gt;ContentNote&lt;/members&gt; &lt;members&gt;ContentNotification&lt;/members&gt; &lt;members&gt;ContentTagSubscription&lt;/members&gt; &lt;members&gt;ContentUserSubscription&lt;/members&gt; &lt;members&gt;ContentVersion&lt;/members&gt; &lt;members&gt;ContentVersionComment&lt;/members&gt; &lt;members&gt;ContentVersionHistory&lt;/members&gt; &lt;members&gt;ContentVersionRating&lt;/members&gt; &lt;members&gt;ContentWorkspace&lt;/members&gt; &lt;members&gt;ContentWorkspaceDoc&lt;/members&gt; &lt;members&gt;ContentWorkspaceMember&lt;/members&gt; &lt;members&gt;ContentWorkspacePermission&lt;/members&gt; &lt;members&gt;ContentWorkspaceSubscription&lt;/members&gt; &lt;members&gt;Contract&lt;/members&gt; &lt;members&gt;ContractContactRole&lt;/members&gt; &lt;members&gt;ContractFeed&lt;/members&gt; &lt;members&gt;ContractHistory&lt;/members&gt; &lt;members&gt;ContractStatus&lt;/members&gt; &lt;members&gt;CorsWhitelistEntry&lt;/members&gt; &lt;members&gt;CronJobDetail&lt;/members&gt; &lt;members&gt;CronTrigger&lt;/members&gt; &lt;members&gt;CspTrustedSite&lt;/members&gt; &lt;members&gt;CurrencyType&lt;/members&gt; &lt;members&gt;CustomBrand&lt;/members&gt; &lt;members&gt;CustomBrandAsset&lt;/members&gt; &lt;members&gt;CustomHttpHeader&lt;/members&gt; &lt;members&gt;CustomObjectUserLicenseMetrics&lt;/members&gt; &lt;members&gt;CustomPermission&lt;/members&gt; &lt;members&gt;CustomPermissionDependency&lt;/members&gt; &lt;members&gt;Dashboard&lt;/members&gt; &lt;members&gt;DashboardComponent&lt;/members&gt; &lt;members&gt;DashboardComponentFeed&lt;/members&gt; &lt;members&gt;DashboardFeed&lt;/members&gt; &lt;members&gt;DataAssessmentFieldMetric&lt;/members&gt; &lt;members&gt;DataAssessmentMetric&lt;/members&gt; &lt;members&gt;DataAssessmentValueMetric&lt;/members&gt; &lt;members&gt;DataIntegrationRecordPurchasePermission&lt;/members&gt; &lt;members&gt;DataStatistics&lt;/members&gt; &lt;members&gt;DataType&lt;/members&gt; &lt;members&gt;DatacloudAddress&lt;/members&gt; &lt;members&gt;DatedConversionRate&lt;/members&gt; &lt;members&gt;DeclinedEventRelation&lt;/members&gt; &lt;members&gt;Document&lt;/members&gt; &lt;members&gt;DocumentAttachmentMap&lt;/members&gt; &lt;members&gt;Domain&lt;/members&gt; &lt;members&gt;DomainSite&lt;/members&gt; &lt;members&gt;DuplicateRecordItem&lt;/members&gt; &lt;members&gt;DuplicateRecordSet&lt;/members&gt; &lt;members&gt;DuplicateRule&lt;/members&gt; &lt;members&gt;EmailCapture&lt;/members&gt; &lt;members&gt;EmailDomainKey&lt;/members&gt; &lt;members&gt;EmailMessage&lt;/members&gt; &lt;members&gt;EmailMessageRelation&lt;/members&gt; &lt;members&gt;EmailServicesAddress&lt;/members&gt; &lt;members&gt;EmailServicesFunction&lt;/members&gt; &lt;members&gt;EmailStatus&lt;/members&gt; &lt;members&gt;EmailTemplate&lt;/members&gt; &lt;members&gt;EmbeddedServiceDetail&lt;/members&gt; &lt;members&gt;EmbeddedServiceLabel&lt;/members&gt; &lt;members&gt;EntityDefinition&lt;/members&gt; &lt;members&gt;EntityParticle&lt;/members&gt; &lt;members&gt;EntitySubscription&lt;/members&gt; &lt;members&gt;Event&lt;/members&gt; &lt;members&gt;EventBusSubscriber&lt;/members&gt; &lt;members&gt;EventFeed&lt;/members&gt; &lt;members&gt;EventLogFile&lt;/members&gt; &lt;members&gt;EventRelation&lt;/members&gt; &lt;members&gt;EventWhoRelation&lt;/members&gt; &lt;members&gt;ExternalDataSource&lt;/members&gt; &lt;members&gt;ExternalDataUserAuth&lt;/members&gt; &lt;members&gt;FeedAttachment&lt;/members&gt; &lt;members&gt;FeedComment&lt;/members&gt; &lt;members&gt;FeedItem&lt;/members&gt; &lt;members&gt;FeedLike&lt;/members&gt; &lt;members&gt;FeedPollChoice&lt;/members&gt; &lt;members&gt;FeedPollVote&lt;/members&gt; &lt;members&gt;FeedRevision&lt;/members&gt; &lt;members&gt;FeedSignal&lt;/members&gt; &lt;members&gt;FeedTrackedChange&lt;/members&gt; &lt;members&gt;FieldDefinition&lt;/members&gt; &lt;members&gt;FieldPermissions&lt;/members&gt; &lt;members&gt;FileSearchActivity&lt;/members&gt; &lt;members&gt;FiscalYearSettings&lt;/members&gt; &lt;members&gt;FlexQueueItem&lt;/members&gt; &lt;members&gt;FlowInterview&lt;/members&gt; &lt;members&gt;FlowInterviewShare&lt;/members&gt; &lt;members&gt;FlowRecordRelation&lt;/members&gt; &lt;members&gt;FlowStageRelation&lt;/members&gt; &lt;members&gt;Folder&lt;/members&gt; &lt;members&gt;FolderedContentDocument&lt;/members&gt; &lt;members&gt;ForecastShare&lt;/members&gt; &lt;members&gt;ForecastingAdjustment&lt;/members&gt; &lt;members&gt;ForecastingCategoryMapping&lt;/members&gt; &lt;members&gt;ForecastingDisplayedFamily&lt;/members&gt; &lt;members&gt;ForecastingFact&lt;/members&gt; &lt;members&gt;ForecastingItem&lt;/members&gt; &lt;members&gt;ForecastingOwnerAdjustment&lt;/members&gt; &lt;members&gt;ForecastingQuota&lt;/members&gt; &lt;members&gt;ForecastingShare&lt;/members&gt; &lt;members&gt;ForecastingType&lt;/members&gt; &lt;members&gt;ForecastingTypeToCategory&lt;/members&gt; &lt;members&gt;ForecastingUserPreference&lt;/members&gt; &lt;members&gt;GrantedByLicense&lt;/members&gt; &lt;members&gt;Group&lt;/members&gt; &lt;members&gt;GroupMember&lt;/members&gt; &lt;members&gt;Holiday&lt;/members&gt; &lt;members&gt;IconDefinition&lt;/members&gt; &lt;members&gt;Idea&lt;/members&gt; &lt;members&gt;IdeaComment&lt;/members&gt; &lt;members&gt;IdpEventLog&lt;/members&gt; &lt;members&gt;InstalledMobileApp&lt;/members&gt; &lt;members&gt;KnowledgeableUser&lt;/members&gt; &lt;members&gt;Lead&lt;/members&gt; &lt;members&gt;LeadFeed&lt;/members&gt; &lt;members&gt;LeadHistory&lt;/members&gt; &lt;members&gt;LeadShare&lt;/members&gt; &lt;members&gt;LeadStatus&lt;/members&gt; &lt;members&gt;LightningComponentBundle&lt;/members&gt; &lt;members&gt;LightningComponentResource&lt;/members&gt; &lt;members&gt;LightningComponentTag&lt;/members&gt; &lt;members&gt;LightningExperienceTheme&lt;/members&gt; &lt;members&gt;ListEmail&lt;/members&gt; &lt;members&gt;ListEmailIndividualRecipient&lt;/members&gt; &lt;members&gt;ListEmailRecipientSource&lt;/members&gt; &lt;members&gt;ListEmailShare&lt;/members&gt; &lt;members&gt;ListView&lt;/members&gt; &lt;members&gt;ListViewChart&lt;/members&gt; &lt;members&gt;ListViewChartInstance&lt;/members&gt; &lt;members&gt;LoginGeo&lt;/members&gt; &lt;members&gt;LoginHistory&lt;/members&gt; &lt;members&gt;LoginIp&lt;/members&gt; &lt;members&gt;LookedUpFromActivity&lt;/members&gt; &lt;members&gt;Macro&lt;/members&gt; &lt;members&gt;MacroHistory&lt;/members&gt; &lt;members&gt;MacroInstruction&lt;/members&gt; &lt;members&gt;MacroShare&lt;/members&gt; &lt;members&gt;MailmergeTemplate&lt;/members&gt; &lt;members&gt;MatchingRule&lt;/members&gt; &lt;members&gt;MatchingRuleItem&lt;/members&gt; &lt;members&gt;Name&lt;/members&gt; &lt;members&gt;NamedCredential&lt;/members&gt; &lt;members&gt;Note&lt;/members&gt; &lt;members&gt;NoteAndAttachment&lt;/members&gt; &lt;members&gt;OauthToken&lt;/members&gt; &lt;members&gt;ObjectPermissions&lt;/members&gt; &lt;members&gt;OnboardingMetrics&lt;/members&gt; &lt;members&gt;OpenActivity&lt;/members&gt; &lt;members&gt;Opportunity&lt;/members&gt; &lt;members&gt;OpportunityCompetitor&lt;/members&gt; &lt;members&gt;OpportunityContactRole&lt;/members&gt; &lt;members&gt;OpportunityFeed&lt;/members&gt; &lt;members&gt;OpportunityFieldHistory&lt;/members&gt; &lt;members&gt;OpportunityHistory&lt;/members&gt; &lt;members&gt;OpportunityLineItem&lt;/members&gt; &lt;members&gt;OpportunityPartner&lt;/members&gt; &lt;members&gt;OpportunityShare&lt;/members&gt; &lt;members&gt;OpportunityStage&lt;/members&gt; &lt;members&gt;OpportunityTeamMember&lt;/members&gt; &lt;members&gt;Order&lt;/members&gt; &lt;members&gt;OrderFeed&lt;/members&gt; &lt;members&gt;OrderHistory&lt;/members&gt; &lt;members&gt;OrderItem&lt;/members&gt; &lt;members&gt;OrderItemFeed&lt;/members&gt; &lt;members&gt;OrderItemHistory&lt;/members&gt; &lt;members&gt;OrderShare&lt;/members&gt; &lt;members&gt;OrgLifecycleNotification&lt;/members&gt; &lt;members&gt;OrgWideEmailAddress&lt;/members&gt; &lt;members&gt;Organization&lt;/members&gt; &lt;members&gt;OutgoingEmail&lt;/members&gt; &lt;members&gt;OutgoingEmailRelation&lt;/members&gt; &lt;members&gt;OwnedContentDocument&lt;/members&gt; &lt;members&gt;OwnerChangeOptionInfo&lt;/members&gt; &lt;members&gt;PackageLicense&lt;/members&gt; &lt;members&gt;Partner&lt;/members&gt; &lt;members&gt;PartnerRole&lt;/members&gt; &lt;members&gt;Period&lt;/members&gt; &lt;members&gt;PermissionSet&lt;/members&gt; &lt;members&gt;PermissionSetAssignment&lt;/members&gt; &lt;members&gt;PermissionSetLicense&lt;/members&gt; &lt;members&gt;PermissionSetLicenseAssign&lt;/members&gt; &lt;members&gt;PicklistValueInfo&lt;/members&gt; &lt;members&gt;PlatformAction&lt;/members&gt; &lt;members&gt;PlatformCachePartition&lt;/members&gt; &lt;members&gt;PlatformCachePartitionType&lt;/members&gt; &lt;members&gt;Pricebook2&lt;/members&gt; &lt;members&gt;Pricebook2History&lt;/members&gt; &lt;members&gt;PricebookEntry&lt;/members&gt; &lt;members&gt;ProcessDefinition&lt;/members&gt; &lt;members&gt;ProcessInstance&lt;/members&gt; &lt;members&gt;ProcessInstanceHistory&lt;/members&gt; &lt;members&gt;ProcessInstanceNode&lt;/members&gt; &lt;members&gt;ProcessInstanceStep&lt;/members&gt; &lt;members&gt;ProcessInstanceWorkitem&lt;/members&gt; &lt;members&gt;ProcessNode&lt;/members&gt; &lt;members&gt;Product2&lt;/members&gt; &lt;members&gt;Product2Feed&lt;/members&gt; &lt;members&gt;Product2History&lt;/members&gt; &lt;members&gt;Profile&lt;/members&gt; &lt;members&gt;ProfileSkill&lt;/members&gt; &lt;members&gt;ProfileSkillEndorsement&lt;/members&gt; &lt;members&gt;ProfileSkillEndorsementFeed&lt;/members&gt; &lt;members&gt;ProfileSkillEndorsementHistory&lt;/members&gt; &lt;members&gt;ProfileSkillFeed&lt;/members&gt; &lt;members&gt;ProfileSkillHistory&lt;/members&gt; &lt;members&gt;ProfileSkillShare&lt;/members&gt; &lt;members&gt;ProfileSkillUser&lt;/members&gt; &lt;members&gt;ProfileSkillUserFeed&lt;/members&gt; &lt;members&gt;ProfileSkillUserHistory&lt;/members&gt; &lt;members&gt;Publisher&lt;/members&gt; &lt;members&gt;PushTopic&lt;/members&gt; &lt;members&gt;QueueSobject&lt;/members&gt; &lt;members&gt;QuickText&lt;/members&gt; &lt;members&gt;QuickTextHistory&lt;/members&gt; &lt;members&gt;QuickTextShare&lt;/members&gt; &lt;members&gt;Quote&lt;/members&gt; &lt;members&gt;QuoteDocument&lt;/members&gt; &lt;members&gt;QuoteFeed&lt;/members&gt; &lt;members&gt;QuoteLineItem&lt;/members&gt; &lt;members&gt;QuoteShare&lt;/members&gt; &lt;members&gt;QuoteTemplateRichTextData&lt;/members&gt; &lt;members&gt;RecentlyViewed&lt;/members&gt; &lt;members&gt;RecordAction&lt;/members&gt; &lt;members&gt;RecordActionHistory&lt;/members&gt; &lt;members&gt;RecordType&lt;/members&gt; &lt;members&gt;RelationshipDomain&lt;/members&gt; &lt;members&gt;RelationshipInfo&lt;/members&gt; &lt;members&gt;Report&lt;/members&gt; &lt;members&gt;ReportFeed&lt;/members&gt; &lt;members&gt;SamlSsoConfig&lt;/members&gt; &lt;members&gt;Scontrol&lt;/members&gt; &lt;members&gt;SearchActivity&lt;/members&gt; &lt;members&gt;SearchLayout&lt;/members&gt; &lt;members&gt;SecureAgentsCluster&lt;/members&gt; &lt;members&gt;SecurityCustomBaseline&lt;/members&gt; &lt;members&gt;SessionPermSetActivation&lt;/members&gt; &lt;members&gt;SetupAuditTrail&lt;/members&gt; &lt;members&gt;SetupEntityAccess&lt;/members&gt; &lt;members&gt;Site&lt;/members&gt; &lt;members&gt;SiteFeed&lt;/members&gt; &lt;members&gt;SiteHistory&lt;/members&gt; &lt;members&gt;SiteIframeWhiteListUrl&lt;/members&gt; &lt;members&gt;Solution&lt;/members&gt; &lt;members&gt;SolutionFeed&lt;/members&gt; &lt;members&gt;SolutionHistory&lt;/members&gt; &lt;members&gt;SolutionStatus&lt;/members&gt; &lt;members&gt;Stamp&lt;/members&gt; &lt;members&gt;StampAssignment&lt;/members&gt; &lt;members&gt;StaticResource&lt;/members&gt; &lt;members&gt;StreamingChannel&lt;/members&gt; &lt;members&gt;StreamingChannelShare&lt;/members&gt; &lt;members&gt;TabDefinition&lt;/members&gt; &lt;members&gt;Task&lt;/members&gt; &lt;members&gt;TaskFeed&lt;/members&gt; &lt;members&gt;TaskPriority&lt;/members&gt; &lt;members&gt;TaskRelation&lt;/members&gt; &lt;members&gt;TaskStatus&lt;/members&gt; &lt;members&gt;TaskWhoRelation&lt;/members&gt; &lt;members&gt;TenantUsageEntitlement&lt;/members&gt; &lt;members&gt;TestSuiteMembership&lt;/members&gt; &lt;members&gt;ThirdPartyAccountLink&lt;/members&gt; &lt;members&gt;TodayGoal&lt;/members&gt; &lt;members&gt;TodayGoalShare&lt;/members&gt; &lt;members&gt;Topic&lt;/members&gt; &lt;members&gt;TopicAssignment&lt;/members&gt; &lt;members&gt;TopicFeed&lt;/members&gt; &lt;members&gt;TopicUserEvent&lt;/members&gt; &lt;members&gt;UndecidedEventRelation&lt;/members&gt; &lt;members&gt;User&lt;/members&gt; &lt;members&gt;UserAccountTeamMember&lt;/members&gt; &lt;members&gt;UserAppInfo&lt;/members&gt; &lt;members&gt;UserAppMenuCustomization&lt;/members&gt; &lt;members&gt;UserAppMenuCustomizationShare&lt;/members&gt; &lt;members&gt;UserAppMenuItem&lt;/members&gt; &lt;members&gt;UserEmailPreferredPerson&lt;/members&gt; &lt;members&gt;UserEmailPreferredPersonShare&lt;/members&gt; &lt;members&gt;UserEntityAccess&lt;/members&gt; &lt;members&gt;UserFeed&lt;/members&gt; &lt;members&gt;UserFieldAccess&lt;/members&gt; &lt;members&gt;UserLicense&lt;/members&gt; &lt;members&gt;UserListView&lt;/members&gt; &lt;members&gt;UserListViewCriterion&lt;/members&gt; &lt;members&gt;UserLogin&lt;/members&gt; &lt;members&gt;UserPackageLicense&lt;/members&gt; &lt;members&gt;UserPermissionAccess&lt;/members&gt; &lt;members&gt;UserPreference&lt;/members&gt; &lt;members&gt;UserProvAccount&lt;/members&gt; &lt;members&gt;UserProvAccountStaging&lt;/members&gt; &lt;members&gt;UserProvMockTarget&lt;/members&gt; &lt;members&gt;UserProvisioningConfig&lt;/members&gt; &lt;members&gt;UserProvisioningLog&lt;/members&gt; &lt;members&gt;UserProvisioningRequest&lt;/members&gt; &lt;members&gt;UserProvisioningRequestShare&lt;/members&gt; &lt;members&gt;UserRecordAccess&lt;/members&gt; &lt;members&gt;UserRole&lt;/members&gt; &lt;members&gt;UserShare&lt;/members&gt; &lt;members&gt;UserTeamMember&lt;/members&gt; &lt;members&gt;VerificationHistory&lt;/members&gt; &lt;members&gt;VisualforceAccessMetrics&lt;/members&gt; &lt;members&gt;Vote&lt;/members&gt; &lt;members&gt;WebLink&lt;/members&gt; &lt;members&gt;WorkAccess&lt;/members&gt; &lt;members&gt;WorkAccessShare&lt;/members&gt; &lt;members&gt;WorkBadge&lt;/members&gt; &lt;members&gt;WorkBadgeDefinition&lt;/members&gt; &lt;members&gt;WorkBadgeDefinitionFeed&lt;/members&gt; &lt;members&gt;WorkBadgeDefinitionHistory&lt;/members&gt; &lt;members&gt;WorkBadgeDefinitionShare&lt;/members&gt; &lt;members&gt;WorkThanks&lt;/members&gt; &lt;members&gt;WorkThanksShare&lt;/members&gt; &lt;name&gt;CustomObject&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomObjectTranslation&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomPageWebLink&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomPermission&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomSite&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;CustomTab&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;name&gt;Dashboard&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;DataCategoryGroup&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;DelegateGroup&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Document&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;DuplicateRule&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;EclairGeoData&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;EmailServicesFunction&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;EmailTemplate&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;EmbeddedServiceBranding&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;EmbeddedServiceConfig&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;EscalationRules&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;EventDelivery&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;EventSubscription&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ExternalDataSource&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ExternalServiceRegistration&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;FlexiPage&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Flow&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;FlowCategory&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;FlowDefinition&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;GlobalValueSet&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;GlobalValueSetTranslation&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Group&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;HomePageComponent&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;HomePageLayout&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;InstalledPackage&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Layout&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;LeadConvertSettings&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Letterhead&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;LightningBolt&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;LightningComponentBundle&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;LightningExperienceTheme&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ListView&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;MatchingRules&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;NamedCredential&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;NetworkBranding&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;PathAssistant&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;PermissionSet&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;PlatformCachePartition&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;PostTemplate&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Profile&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ProfilePasswordPolicy&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ProfileSessionSetting&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Queue&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;QuickAction&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;RemoteSiteSetting&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;name&gt;Report&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ReportType&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Role&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;SamlSsoConfig&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Scontrol&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;SharingCriteriaRule&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;SharingOwnerRule&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;SharingRules&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;SiteDotCom&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;StandardValueSet&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;StandardValueSetTranslation&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;StaticResource&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;SynonymDictionary&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;TopicsForObjects&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;ValidationRule&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;WebLink&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Workflow&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;WorkflowAlert&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;WorkflowFieldUpdate&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;WorkflowRule&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;Settings&lt;/name&gt; &lt;/types&gt; &lt;types&gt; &lt;members&gt;*&lt;/members&gt; &lt;name&gt;LightningComponentBundle&lt;/name&gt; &lt;/types&gt; &lt;version&gt;47.0&lt;/version&gt;&lt;/Package&gt; reference:https://developer.salesforce.com/docs/atlas.en-us.api_meta.meta/api_meta/meta_types_list.htm","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"LWC","slug":"LWC","permalink":"http://tonyrenhk.github.io/tags/LWC/"},{"name":"SFDX","slug":"SFDX","permalink":"http://tonyrenhk.github.io/tags/SFDX/"},{"name":"Lightning Web Components","slug":"Lightning-Web-Components","permalink":"http://tonyrenhk.github.io/tags/Lightning-Web-Components/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Salesforce Sandbox设计最佳实践","slug":"2020-02-20-Salesforce-Sandbox-design","date":"2020-02-20T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2020/02/20/2020-02-20-Salesforce-Sandbox-design/","link":"","permalink":"http://tonyrenhk.github.io/2020/02/20/2020-02-20-Salesforce-Sandbox-design/","excerpt":"Salesforce Sandbox思考","text":"Salesforce Sandbox思考 笔者之前和一个朋友聊到Salesforce Sandbox，对方使用Unlimited 的版本，但是只有使用一个Developer Sandbox，而所有的代码开发就在这个Sandbox上进行，其他的操作就直接在生产环境上做，如新建Field，Sharing Rule。笔者非常诧异对方有Full Sandbox不用，而且缺乏有效的Sandbox策略。所以，决定今天写写文章和大家聊聊Sandbox。 什么是Sandbox？ 首先要知道什么是Sandbox，根据字面理解，sand是沙子，box是盒子，如果直译的话，就是一个地方，有沙子，同时有一些一个大的盒子将其包围起来，因此通常国内翻译成为沙盒环境。如下图，Atro可以在Sandboxdbox里面搭建自己的城堡，而每一个Sandbox都不相互影响。Sandbox在Salesforce官方的定义如下： Sandboxes are special organizations that are used to test changes or new apps without risking damage to your production data or configuration 而Sandbox的有效设计往往是实施流程&#x2F;部署成功的关键。可以想象一下，一个凌乱的Sandbox，都同时部署于你的Salesforce生产环境会有什么样的重大影响。 Sandbox的类型 那么Sandbox有几种类型的呢？主要分为如下几种。 Developer Sandbox：可以做开发和unit test，也就是小的测试。同时这里可以做一些POC和一些简单的QA。 Developer Pro Sandbox：做开发大量的测试。这里有1G的存储空间。 Partial Copy： 主要用于内部培训和大规模数据测试。有时候，一些QA也会在这里进行。 Full Copy：无size限制，主要用于作为Staging环境。那么Staging又是做什么的呢？Stage中文翻译是阶段或者是筹划，有准备之意，也就是说，有新的功能准备发布或者Bbug Fix 要部署于生产环境，就要在这里进行准备。比方说，你的老板想看看新的功能，但是又不可以在Salesforce生产环境直接看，那么Staging是一个不错的选择。有时候Full Copy会用来做大规模的数据测试，由于其最接近生产环境，如果在生产环境出现了问题，也会最容易在重现出来。 几种sandbox的用途在这里罗列如下。 一般Salesforce会把不同公司的license分配不同的sandbox，如果是unlimited的类型，就会分配到一个full sandbox。 如果您需要额外的Sandbox，您需要找Salesforce额外购买。 Sandbox Template 一般在复制Sandbox时候，Metadata ，custom setting与其对应的data还有License Rype 会被复制到新的sandbox。有时候，我们需要复制一些数据，这时候就需要用到Sandbox Templat， 可以选择需要的对象 复制到你的sandbox 敏捷开发 接下来聊聊Salesforce的敏捷开发周期，请看下图。 项目可能开始始于一个想法(idea)，有可能是用户feedback或者需求。无论是bug还是美好的愿景，就会形成一个user story，这里我们叫BackLog。而这一些BackLog，会给开发团队进行开发和分析，有些地方把开发团队称之为delivery team，也就是交付团队。 在开发团队内的开发周期里，有可以简单分为开发和测试两个环节。通过不断地开发和测试，然后交付，形成整个开发流程。 接下来，基于不同的Sandbox的功能，我们来看看Salesforce的部署流程。假设您有不同的几个Sandbox，各个Developer Sandbox开发着不同的应用或者功能，需要有一个代码管理的机制去控制各个Sandbox之间的代码冲突。然后您可以在Developer Pro 和Partial Copy的 Sandbox里面进行Intergration Testing。 Sandbox 设计策略？ 那么是不是每个Salesforce项目都得像上面那样有一个Full Copy Sandbox 作为一个Staging，多个Sandbox 进行测试呢？不是，这里有几个建议给到大家。 对于小型的项目实施团队，可以简单通过如下图实现。通过简单的开发–&gt;部署至Staging，然后部署至生产环境实现整个实施流程。同时，这里保留有一个Developer Pro的Sandbox ，进行生产环境的支持。很多时候，生产环境出现问题，为了不影响用户的业务流程，需要在数个小时内解决，那么保留一个专门用于生产环境的support的Sandbox 是非常有必要的。在这里是强烈反对在生产环境进行有关support debug，而是应该在这个生产环境的support Sandbox进行。 对于中型或者大型的实施的项目，可能有多个团队进行不同模块的开发。可以参考下图的Sandbox实施策略。图中显示了，开发人员在Sratch Org上面开发然后代码同步到代码版本控制系统(version control system，业内简称VCS)，这里可以是Github，GitLab，bitbucket，然后再自动部署于developer Sandbox。但是，需要指出的是，Sratch Org在这里不是必须的，如果您的功能完全不需要通过代码实现，可以需要建立Sratch Org来实现。在开发完成之后，部署于Partial Copy进行有关测试。 对于超大型的实施的项目。可以参考如下的Sandbox设计策略。这里分为大型的实施流程和小型实施流程。对于大型的实施流程，这里需要有一个集成的Org将各个Developer Sandbox的功能集成于一处，然后再部署于Intergration Plus进行有关的测试。而对于小型的实施开放，可以直接部署于Intergration Plus Sandbox。 如上的一些建议希望可以帮到一些Salesforce Org的设计者进行有效的Sandbox设计，同时制定出符合自己公司的实施流程。有什么想法或者有补充的地方可以在下方留言给小编。","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Sandbox","slug":"Sandbox","permalink":"http://tonyrenhk.github.io/tags/Sandbox/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Salesforce的CDC是做什么的？","slug":"2020-02-02-SFDC-CDC","date":"2020-02-02T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2020/02/02/2020-02-02-SFDC-CDC/","link":"","permalink":"http://tonyrenhk.github.io/2020/02/02/2020-02-02-SFDC-CDC/","excerpt":"Change Data Capture 介绍","text":"Change Data Capture 介绍 Salesforce早于DF17的时候，就发布了Change Data Capture，业内简称CDC。 01CDC是做什么的？Change Data Capture是Lightning Platform上的流产品(streaming product)，使您可以有效地将Salesforce数据与外部系统集成。简单来说，CDC 能够其主要功能是追溯和捕捉数据库级别的数据变化。 借助CDC，您可以实时接收Salesforce记录的更改，并同步外部数据存储中的相应记录。CDC能够捕获数据库级的新建，更新，删除和取消删除操作，然后发布对应的事件。简单来说，如果你只知道Trigger能够捕捉insert，update的操作，你就Out了下面这张图很形象地描述了Salesforce 的CDC是做什么的？ 那么再具体来说，CDC是怎么实现数据的同步呢？ 可以看看下面的例子，当有一个对象进行更新操作时候，会更新Salesforce的数据，然后通过Change Event 发布相关事件，而同时外部服务监听此事件，从而实现外部数据库和Salesforce数据库的同步。 #实例 # 那么如何通过Apex Trigger监听数据Change Event呢？可以参考下面的例子。 假设有一个Object为Employee__c,希望在每一次新增修改时候，都能新建一个Task。传统的做法是可以通过在对象下写一个after insert 的trigger，这里我们通过CDC来实现。 首先需要在Setup里面选择所需要使用Change Data Capture的对象。 由于CDC可以捕捉数据变化，可以通过在Employee__ChangeEvent里面写一个EmployeeChangeTrigger 的Trigger。值得注意的是，可以通过changetype来识别数据是Insert还是update。而通过event.Field Name， 可以轻松获得该数据的现在值。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748trigger EmployeeChangeTrigger on Employee__ChangeEvent (after insert) &#123; List&lt;Task&gt; tasks = new List&lt;Task&gt;(); // Iterate through each event message. for (Employee__ChangeEvent event : Trigger.New) &#123; // Get some event header fields EventBus.ChangeEventHeader header = event.ChangeEventHeader; System.debug('Received change event for ' + header.entityName + ' for the ' + header.changeType + ' operation.'); // For update operations, we can get a list of changed fields if (header.changetype == 'UPDATE') &#123; System.debug('List of all changed fields:'); for (String field : header.changedFields) &#123; if (null == event.get(field)) &#123; System.debug('Deleted field value (set to null): ' + field); &#125; else &#123; System.debug('Changed field value: ' + field + '. New Value: ' + event.get(field)); &#125; &#125; &#125; // Get record fields and display only if not null. System.debug('Some Employee record field values from the change event:'); if (event.First_Name__c != null) &#123; System.debug('First Name: ' + event.First_Name__c); &#125; if (event.Last_Name__c != null) &#123; System.debug('Last Name: ' + event.Last_Name__c); &#125; if (event.Name != null) &#123; System.debug('Name: ' + event.Name); &#125; if (event.Tenure__c != null) &#123; System.debug('Tenure: ' + event.Tenure__c); &#125; // Create a followup task Task tk = new Task(); tk.Subject = 'Follow up on employee record(s): ' + header.recordIds; tk.OwnerId = header.CommitUser; tasks.add(tk); &#125; // Insert all tasks in bulk. if (tasks.size() &gt; 0) &#123; insert tasks; &#125;&#125; 其他那么什么时候可以用CDC？这里列了一些常见的例子: 如果Salesforce记录的更改需要同步外部数据存储中的相应记录。 接收Salesforce记录更改的通知，包括创建，更新，删除 捕获所有记录的字段更改。 取消删除操作（undelete operations）。 监听大量更改 最后，这里附上CDC和Platform Event之间的不同。有时候面试会遇到这些问题。 也可以参考Trailhead里面CDC的模块，链接如下： https://trailhead.salesforce.com/en/content/learn/modules/change-data-capture 参考文献：Change Data Capture Developer Guide ： https://developer.salesforce.com/docs/atlas.en-us.change_data_capture.meta/change_data_capture/cdc_intro.htm https://developer.salesforce.com/blogs/2018/08/what-is-change-data-capture.html https://trailhead.salesforce.com/en/content/learn/modules/change-data-capture/understand-change-data-capture https://developer.salesforce.com/docs/atlas.en-us.change_data_capture.meta/change_data_capture/cdc_intro.htm","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"SFDX","slug":"SFDX","permalink":"http://tonyrenhk.github.io/tags/SFDX/"},{"name":"CDC","slug":"CDC","permalink":"http://tonyrenhk.github.io/tags/CDC/"},{"name":"Change Data Capture","slug":"Change-Data-Capture","permalink":"http://tonyrenhk.github.io/tags/Change-Data-Capture/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"如何利用流(flow)新建一个累计汇总(Roll-Up Summary)字段？","slug":"2020-01-15-Salesforce-flow-Roll-Up-Summary","date":"2020-01-15T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2020/01/15/2020-01-15-Salesforce-flow-Roll-Up-Summary/","link":"","permalink":"http://tonyrenhk.github.io/2020/01/15/2020-01-15-Salesforce-flow-Roll-Up-Summary/","excerpt":"Salesforce flow study","text":"Salesforce flow study ​累计汇总(Roll-Up Summary)字段广泛应用于Salesforce中，但是其限制是只能适用于Master-Detail关系，而普通的查找关系(Lookup Relationship)是不能新建**累计汇总(Roll-Up Summary)**字段。如果有该需求，常用做法是新建一个字段，通过系统的触发器进行计算。 今天带大家来探讨一下，如何利用流(flow)和进程生成器(Process builder)在查找关系(Lookup Relationship)中新建一个累计汇总(Roll-Up Summary)字段？ 假设现在我们有如下案例： 我们新建一个对象名字为Project ，同时与Account建立查找关系(Lookup Relationship)，并且建立如下字段： 现在需要做的是每一次添加一个Project，都会计算该Project对应的Account一共拥有多少个Project，由于Account和Project不是Master-Detail 关系，我们无法新建累计汇总(Roll-Up Summary)字段。因此，可以在Account对象下，新建一个Number字段，名字为Project Count Total。 接下来需要做的是：每一次Project数据变动，通过进程生成器(Process builder)调用流(flow)统计Project的Account下面的所有Project数量，并且更新回Account的字段：Project Count Total。 现在我们先新建一个Flow。 Flow的步骤如下： 通过外部传入Project对象的Account的Id, 利用这个Account的Id获得有关的Project 创建循环，遍历这个Account下面的Project数据 在每一次循环时候，累加总数。 将该总数更新回Account字段中。 现在我们先实现第一步，利用一个外部参数：Account的Id，查询到所有有关的Project数据。现在，新建一个Get Records： 这里对象选择的是Project，因为我们需要统计的是Project一共有多少数据。在Account等于某一个Value处，我们需要新建一个value，选择新建一个resource，选择variable，这里命名为curAccountID。我们会在之后其他地方传入这个ID，同时，我们会在之后基于这个变量更新Account的相关字段。 新建完输入变量之后，在store Project Records处，新建另外一个variable，设定输出变量。 这里命名store的Records为curAccountProjects，同时选择Allow multiple values， 因为可能查询多于一个Project的记录。这个在Apex中就是List的变量。 最后整个Get Records页面如下，并点击Done。该步骤返回的是一组Project数据。 接下来，我们写上面步骤的第二步：设计循环。这里新建一个Loop，Collection Variable选择Get Records 里面定义的curAccountProjects。 在select Loop Variable里面，需要新建一个变量Variable，也就是每一次遍历时候的Project这个变量。 然后，在Select Loop Variable中选择 Loop Variable 为{!Project}，如下： 建完循环之后，需要新建一个Assignment，也就是基于上面的循环Loop，统计有多少记录数目。 在Set Variable Values处，新建一个Variable,命名其为TotalProjectCount 然后，在Set Variable Values，选择Equals Count 之前Loop的变量值curAccountProjects，也就是不断累加，最后Assignment如下。 最后，把countProjects(Loop)和Total Project Count(Assignment)连起来，选择每一个item都执行累加计算。然后，再把Total Project Count(Assignment)和countProjects(Loop)连一次，形成一个循环。 截止目前的整个Flow如下，已经实现了统计循环里面的数据数目的功能： 计算了总共的Project数目之后，需要把总数更新回Account中，这里我们新建一个Update Records 元素： 这里选择Specify conditions to identify records, and set fields individually，并且选择更新的是Account对象： 选择Account数据的条件为设定Account的ID为之前定义的会有外部传入的curAccountID。也就是说，之后会传入一个Account ID经过一系列计算，把总值更新回Account对象里面。然后更新的字段为我们新建的Account roll up summary的number field。注意这里是一个普通数字的字段。并且把Total Project Count(Assignment)里面的变量TotalProjectCount传入Account的字段中。 最后的flow样式如下： 最后保存Flow： 至此，整个Flow已经完成了。 现在可以测试你的flow，点击flow的右上角的debug，输入Account Id。 这里拿了两条数据的Account进行测试 可以看到debug的结果是计算出有两条Project 数据，并且更新了现在的Account。 测试完成之后，返回Flow，激活你的flow。 然后需要新建一个进程生成器(Process builder)触发这个Flow。 选择每次新建或者编辑Project数据时候都执行这个进程生成器(Process builder)： 然后选择无条件进入Flow： 进入Flow需要传入变量，把Project对象上的Account字段传进去： 这里value 处选择[Project__c].Account__c，传入Account Id。 然后点保存并且激活Process builder。至此整个功能已经完成了。整个过程没有用代码实现。 后记： 由于process builder我们设定只能是数据更新和建立才能被触发，如果数据被删除是不能被触发的。目前Workflow, Visual Workflow, Process Builder都无法在数据被删除时候被触发，有关idea可以参考如下链接： https://success.salesforce.com/ideaView?id=08730000000DlPBAA0 参考链接： 【1】https://admin.salesforce.com/use-flow-builder-to-create-a-roll-up-summary-field 【2】https://youtu.be/EDD_7wDmPGY","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"flow","slug":"flow","permalink":"http://tonyrenhk.github.io/tags/flow/"},{"name":"Roll-Up Summary","slug":"Roll-Up-Summary","permalink":"http://tonyrenhk.github.io/tags/Roll-Up-Summary/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Salesforce Public Site 学习","slug":"2020-01-06-SFDC-Public-Site","date":"2020-01-06T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2020/01/06/2020-01-06-SFDC-Public-Site/","link":"","permalink":"http://tonyrenhk.github.io/2020/01/06/2020-01-06-SFDC-Public-Site/","excerpt":"Salesforce Public Site 如何调用 Flow？","text":"Salesforce Public Site 如何调用 Flow？ Salesforce Public Site 如何调用 Flow？这里注意inputVariables 是固定格式。 12345var inputVariables = [ &#123; name : 'RecordId', type : 'String', value :customerId &#125; VF Page输入RecordId。在VF Page 传入参数。 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;apex:page sidebar=\"false\" showHeader=\"false\" &gt; &lt;html&gt; &lt;head&gt; &lt;apex:includeLightning /&gt; &lt;/head&gt; &lt;body class=\"slds-scope\"&gt; &lt;div id=\"flowContainer\" /&gt; &lt;script&gt; // get url id parameter var queryString = window.location.search; var urlParams = new URLSearchParams(queryString); var RecordId =urlParams.get('Id'); var inputVariables = [ &#123; name : 'RecordId', type : 'String', value :RecordId &#125; ]; $Lightning.use(\"c:InputApp\", function() &#123; $Lightning.createComponent(\"lightning:flow\", &#123; &#125;, \"flowContainer\", function(cmp) &#123; console.log(\"Component was created\"); cmp.startFlow(\"ScreenFlow\",inputVariables); console.log(\"Flow was created\"); // do some stuff &#125; ); &#125;); &lt;/script&gt; &lt;/body&gt; &lt;/html&gt; &lt;/apex:page&gt; InputApp 为Aura App 123&lt;aura:application extends=\"ltng:outApp\" access=\"global\" implements=\"ltng:allowGuestAccess\" &gt; &lt;aura:dependency resource=\"lightning:flow\"/&gt;&lt;/aura:application&gt; 写一个File Upload Aura Component， 并且适用于Screen FlowAura传入myRecordId。 123456&lt;aura:component controller=\"FileController\" implements=\"lightning:availableForFlowScreens\" access=\"global\" &gt; &lt;aura:attribute name=\"myRecordId\" type=\"String\" description=\"Record to which the files should be attached\" /&gt; &lt;div&gt; &lt;input type=\"file\" class=\"file\" aura:id=\"file\" onchange=\"&#123;!c.FileOnchange&#125;\" /&gt; &lt;/div&gt;&lt;/aura:component&gt; Controller.js 123456789101112131415161718(&#123; FileOnchange: function(component, event, helper) &#123; console.log('File changed!'); helper.save(component); &#125;, waiting: function(component, event, helper) &#123; $A.util.addClass(component.find(\"uploading\").getElement(), \"uploading\"); $A.util.removeClass(component.find(\"uploading\").getElement(), \"notUploading\"); &#125;, doneWaiting: function(component, event, helper) &#123; $A.util.removeClass(component.find(\"uploading\").getElement(), \"uploading\"); $A.util.addClass(component.find(\"uploading\").getElement(), \"notUploading\"); &#125; &#125;) helper.js 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647(&#123; save : function(component) &#123; var fileInput = component.find(\"file\").getElement(); var file = fileInput.files[0]; if (file.size &gt; 750000) &#123; alert('File size cannot exceed 750000 bytes.\\n' + 'Selected file size: ' + file.size); return; &#125; var fr = new FileReader(); console.log('v14'); var self = this; fr.onload = function() &#123; var fileContents = fr.result; var base64Mark = 'base64,'; var dataStart = fileContents.indexOf(base64Mark) + base64Mark.length; fileContents = fileContents.substring(dataStart); console.log('upload'); self.upload(component, file, fileContents); &#125;; fr.readAsDataURL(file); &#125;, upload: function(component, file, fileContents) &#123; console.log('enter upload function '); var action = component.get(\"c.saveTheFile\"); action.setParams(&#123; parentId: component.get(\"v.myRecordId\"), fileName: file.name, base64Data: encodeURIComponent(fileContents), contentType: file.type &#125;); action.setCallback(this, function(a) &#123; var attachId = a.getReturnValue(); &#125;); $A.enqueueAction(action); &#125; &#125;) 这里需要design , flow 可以传入参数。 1234567&lt;design:component&gt; &lt;design:attribute name=\"myRecordId\" label=\"Related Record ID\" required=\"true\"/&gt; &lt;/design:component&gt; FileController class 1234567891011121314151617global class FileController &#123; @AuraEnabled global static Id saveTheFile(Id parentId, String fileName, String base64Data, String contentType) &#123; base64Data = EncodingUtil.urlDecode(base64Data, 'UTF-8'); Attachment a = new Attachment(); a.parentId = parentId; a.Body = EncodingUtil.base64Decode(base64Data); a.Name = fileName; a.ContentType = contentType; insert a; return a.Id; &#125;&#125;","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Site","slug":"Site","permalink":"http://tonyrenhk.github.io/tags/Site/"},{"name":"Flow","slug":"Flow","permalink":"http://tonyrenhk.github.io/tags/Flow/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"【收藏贴】Salesforce各种免费学习Org申请链接大全","slug":"2019-12-21-Salesforce-free-org","date":"2019-12-21T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2019/12/21/2019-12-21-Salesforce-free-org/","link":"","permalink":"http://tonyrenhk.github.io/2019/12/21/2019-12-21-Salesforce-free-org/","excerpt":"Salesforce study org link","text":"Salesforce study org link 下面列举了各种Salesforce学习资源链接，欢迎学习者私信我们补充。 Developer Edition Org注册链接：https://developer.salesforce.com/signup Community Cloud Developer Edition注册链接：https://developer.salesforce.com/promotions/orgs/academy-signup 爱因斯坦分析 Developer Org注册链接： https://developer.salesforce.com/promotions/orgs/analytics-de CPQ Developer Org注册链接： https://developer.salesforce.com/promotions/orgs/cpqtrails Nonprofit Success Pack (NPSP) Org注册链接： https://www.salesforce.org/trial/npsp/ Health Cloud 30天试用 https://www.salesforce.com/form/signup/health-cloud-trial/ Sales Cloud 30天试用 https://www.salesforce.com/form/signup/freetrial-sales/ Sales Cloud 的 Enterprise edition30天试用 https://www.salesforce.com/ca/form/signup/freetrial-sales-ee/ Sales Cloud 的 Performance edition30天试用 https://www.salesforce.com/form/signup/freetrial-sales-pxe.jsp Sales Cloud Lightning Professional Edition30天试用 https://www.salesforce.com/form/signup/freetrial-sales-pe/ Sales Essentials版本14天试用 https://www.salesforce.com/form/signup/freetrial-sales-essentials/ Service Cloud 30天试用 https://www.salesforce.com/form/signup/freetrial-service/ Financial Services Cloud Trial Org注册链接： https://www.salesforce.com/form/signup/financial-services-cloud-trial.jsp Education Data Architecture (EDA) Trial Org 30天试用 https://www.salesforce.org/trial/heda/ K-12 Education Trial Org 30天试用 这个是特别对于K12学校的Education Cloud Trial Org，主要还是集成了Lightning Enterprise Edition + EDAhttps://www.salesforce.org/trial/k12/ Mulesoft Anypoint： https://anypoint.mulesoft.com/login/signup Tableau: https://id.tableau.com/register","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Org","slug":"Org","permalink":"http://tonyrenhk.github.io/tags/Org/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"JSforce-metadata-tools 使用refresh Token登入Salesforce","slug":"2019-09-12-JsforceMetadata","date":"2019-09-12T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2019/09/12/2019-09-12-JsforceMetadata/","link":"","permalink":"http://tonyrenhk.github.io/2019/09/12/2019-09-12-JsforceMetadata/","excerpt":"jsforce-metadata-tools","text":"jsforce-metadata-tools jsforce-metadata-tools 目前不支持传入refresh token作为参数，有时候需要输入账号和密码，而输入账号和密码，往往因为服务器IP地址问题，会出现如下error 12Error: LOGIN_MUST_USE_SECURITY_TOKEN: Invalid username, password, security token; or user locked out. Are you at a new location? When accessing Salesforce--either via a desktop client or the API--from outside of your company’s trusted networks, you must add a security token to your password to log in. To get your new security token, log in to Salesforce. From your personal settings, enter Reset My Security Token in the Quick Find box, then select Reset My Security Token. 而如果我们通过refresh token进行登入Salesforce，是不需要输入账号和密码的。 作者源码在这里： https://github.com/jsforce/jsforce-metadata-tools 首先需要在cli.js里面加入如下三个option 123.option('-i, --client_id [client_id]', 'Salesforce client_id').option('-s, --client_secret [client_secret]', 'Salesforce client_secret').option('-r, --refresh_token [refresh_token]', 'Salesforce refresh_token') 在这里，我们输入三个参数client_id，client_secret，refresh_token。同时，在readOptions的function下，将string变成’username,password,connection,loginUrl,pollInterval,pollTimeout,refresh_token,client_id,client_secret’，也就是说会读取client id，client secret，refresh token。 最后，在connect.js下面修改成动态可以以refresh token进行登入Salesforce。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105'use strict';var jsforce = require('jsforce');var Promise = jsforce.Promise;var request = require('request');var CONNECTION_CONFIG_PROPS = 'loginUrl,accessToken,instanceUrl,refreshToken,clientId,clientSecret,redirectUri,logLevel,version'.split( ',');/** * */function connect(options) &#123; var conn; return Promise.resolve() .then(function() &#123; if (options.connection) &#123; console.log(' ** connection ** '); conn = jsforce.registry.getConnection(options.connection); if (!conn) &#123; throw new Error('No connection named \"' + options.connection + '\" in registry'); &#125; return null; &#125; else if (options.refresh_token) &#123; return LoginUsingRT( options.refresh_token, options.client_id, options.client_secret, options.loginUrl ); &#125; else if (options.username &amp;&amp; options.password) &#123; var config = &#123;&#125;; CONNECTION_CONFIG_PROPS.forEach(function(prop) &#123; if (options[prop]) &#123; config[prop] = options[prop]; &#125; &#125;); conn = new jsforce.Connection(config); return conn.login(options.username, options.password); &#125; else &#123; return conn.identity().catch(function(err) &#123; throw new Error( 'Credential to salesforce server is not found in options.\\n' + 'Specify \"username\" and \"password\" in options, or give any other credentials.' ); &#125;); &#125; &#125;) .then(function(result) &#123; if (result != null) &#123; if (options.refresh_token) &#123; conn = new jsforce.Connection(&#123; loginUrl: options.loginUrl, instanceUrl: result.instance_url, accessToken: result.access_token, version: '45.0' &#125;); return conn; &#125; &#125; &#125;) .then(function() &#123; if (options.logger) &#123; var logger = options.logger; return conn.identity().then(function(identity) &#123; logger.log('Logged in as: ' + identity.username); return conn; &#125;); &#125; return conn; &#125;);&#125;function LoginUsingRT(refresh_token, client_id, client_secret,loginUrl) &#123; var SFoptions = &#123; method: 'POST', url: loginUrl+'/services/oauth2/token', qs: &#123; grant_type: 'refresh_token', refresh_token: refresh_token, client_id: client_id, client_secret: client_secret &#125;, headers: &#123; 'cache-control': 'no-cache' &#125; &#125;; return new Promise(function(resolve, reject) &#123; request(SFoptions, function(error, response, body) &#123; if (error) &#123; reject(error); &#125; else &#123; resolve(JSON.parse(body)); &#125; &#125;); &#125;);&#125;/** * */module.exports = connect; 例子如下： 123456cd binnode jsforce-retrieve -l https:&#x2F;&#x2F;test.salesforce.com -D .&#x2F;SCMP-QA1-r 你的refresh Token -i 你的client id -s 你的client_secret 很多时候我们使用JSforce多于JSforce metadata tools，下面的例子展示了如何基于JSForce使用refresh token登入Salesforce。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263// node jsforce.jsvar request = require(\"request\");var jsforce = require('jsforce');var conn;main();function main() &#123; var access_token, instance_url; initializeSF().then(function(result) &#123;//console.log(result); access_token = result.access_token; instance_url = result.instance_url; return GetConnection(access_token, instance_url); &#125;).then(function(result) &#123; return conn.identity(); &#125;).then(function(result) &#123; console.log('Logged in as: ' + result.username); &#125;).catch(function(err) &#123; console.log(err); &#125;);&#125;function initializeSF() &#123; var SFoptions = &#123; method: 'POST', url: 'https://test.salesforce.com/services/oauth2/token', qs: &#123; grant_type: 'refresh_token', refresh_token: '你的refresh_token', client_id: '你的client_id', client_secret: '你的client_secret' &#125;, headers: &#123; 'cache-control': 'no-cache' &#125; &#125;; return new Promise(function(resolve, reject) &#123; request(SFoptions, function(error, response, body) &#123; if (error) &#123; reject(error); &#125; else &#123; resolve(JSON.parse(body)); &#125; &#125;) &#125;)&#125;function GetConnection(access_token, instance_url) &#123; conn = new jsforce.Connection(&#123; loginUrl: 'https://test.salesforce.com', instanceUrl: instance_url, accessToken: access_token, version: '44.0' &#125;); return conn;&#125;","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Jsforce","slug":"Jsforce","permalink":"http://tonyrenhk.github.io/tags/Jsforce/"},{"name":"metadata","slug":"metadata","permalink":"http://tonyrenhk.github.io/tags/metadata/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Trailhead 相关资料和答案","slug":"2019-09-01-Trailhead","date":"2019-09-01T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2019/09/01/2019-09-01-Trailhead/","link":"","permalink":"http://tonyrenhk.github.io/2019/09/01/2019-09-01-Trailhead/","excerpt":"【Trailhead】App Customization Lite答案【Trailhead】Account Data Strategies答案【Trailhead】Artificial Intelligence Basics 答案【Trailhead】API Basics答案","text":"【Trailhead】App Customization Lite答案【Trailhead】Account Data Strategies答案【Trailhead】Artificial Intelligence Basics 答案【Trailhead】API Basics答案 【Trailhead】App Customization Lite答案https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization Customize the User Interfacehttps://trailhead.salesforce.com/content/learn/modules/lex_migration_customization&#x2F;lex_migration_customization_layouts_ui https://trailhead.salesforce.com/content/learn/modules/lex_migration_customization/lex_migration_customization_actions Understand How Actions Work in Lightning Experiencehttps://trailhead.salesforce.com/content/learn/modules/lex_migration_customization&#x2F;lex_migration_customization_actions 【Trailhead】Account Data Strategies答案Account Data Strategieshttps://trailhead.salesforce.com/content/learn/modules/account-data-strategies Use Data to Get a 360-Degree View of Your Customershttps://trailhead.salesforce.com/content/learn/modules/account-data-strategies/use-data-to-get-a-360-degree-view-of-your-customers Develop a Data-Backed Account Management Strategyhttps://trailhead.salesforce.com/content/learn/modules/account-data-strategies/develop-a-data-backed-account-management-strategy #【Trailhead】Artificial Intelligence Basics 答案 Artificial Intelligence Basicshttps://trailhead.salesforce.com/content/learn/modules/ai_basics Learn AI Fundamentalshttps://trailhead.salesforce.com/content/learn/modules/ai_basics/ai_basics_getstarted Discover the Science Behind AIhttps://trailhead.salesforce.com/content/learn/modules/ai_basics/ai_basics_discover 【Trailhead】API Basics答案API Basics今天入门学习API Basics，相关链接如下： https://trailhead.salesforce.com/content/learn/modules/pw-api-basics Make APIs for You and Mehttps://trailhead.salesforce.com/content/learn/modules/pw-api-basics/make-apis-for-you-and-me Learn the Benefits of APIshttps://trailhead.salesforce.com/content/learn/modules/pw-api-basics/learn-the-benefits-of-apis Put the Web in Web APIhttps://trailhead.salesforce.com/content/learn/modules/pw-api-basics/put-the-web-in-web-api","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Trailhead","slug":"Trailhead","permalink":"http://tonyrenhk.github.io/tags/Trailhead/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Library NPM 软件安装包","slug":"2019-04-02-LibraryNPM","date":"2019-04-02T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2019/04/02/2019-04-02-LibraryNPM/","link":"","permalink":"http://tonyrenhk.github.io/2019/04/02/2019-04-02-LibraryNPM/","excerpt":"软件安装包","text":"软件安装包 hexoReference: https://hexo.io/ https://xaoxuu.com/wiki/material-x/ https://github.com/xaoxuu/hexo-theme-material-x 123456789101112131415 npm install hexo-cli -g npm install hexo --save npm install hexo-deployer-git --save npm install hexo-deployer-heroku --savenpm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content hexo-recommended-postsnpm audit fix --forcenpm installgit clone https:&#x2F;&#x2F;tonyrenhk:password@github.com&#x2F;TonyRenHK&#x2F;hexo-theme-material-x.git themes&#x2F;material-x jSForce deployment1npm install jsforce-metadata-tools -g HerokuReference:https://devcenter.heroku.com/articles/git#http-git-authentication https://devcenter.heroku.com/articles/heroku-cli 12345678npm install -g herokuheroku login -iheroku: Enter your login credentialsEmail: me@example.comPassword: ***************Two-factor code: ********Logged in as me@heroku.com","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://tonyrenhk.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://tonyrenhk.github.io/tags/JavaScript/"}],"keywords":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://tonyrenhk.github.io/categories/JavaScript/"}]},{"title":"Community Cloud相关资料","slug":"2019-03-13-Community-Cloud","date":"2019-03-13T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2019/03/13/2019-03-13-Community-Cloud/","link":"","permalink":"http://tonyrenhk.github.io/2019/03/13/2019-03-13-Community-Cloud/","excerpt":"Community Cloud相关资料","text":"Community Cloud相关资料 Community Cloud Cert Fast PathRecordings and slide decks :ACCESS CODE for the videos : CCFastPath February 2019 Kick off + Communities basics (11&#x2F;02&#x2F;2019) : recording &#x2F; slide deck Community builder (12&#x2F;02&#x2F;2019) : recording &#x2F; slide deck Sharing and visibility (13&#x2F;02&#x2F;2019) : recording &#x2F; slide deck Licenses and user provisioning (14&#x2F;02&#x2F;2019) : recording &#x2F; slide deck Lightning Bolts and Content (15&#x2F;02&#x2F;2019) : recording &#x2F; slide deck March 2019 Kick off + Communities basics (06&#x2F;03&#x2F;2019) : recording &#x2F; slide deck Community builder (07&#x2F;03&#x2F;2019) : recording &#x2F; slide deck Sharing and visibility (19&#x2F;03&#x2F;2019) : recording &#x2F; slide deck Licenses and user provisioning (20&#x2F;03&#x2F;2019) : recording &#x2F; slide deck Lightning Bolts and Content (22&#x2F;03&#x2F;2019) : recording &#x2F; slide deck Trailheadhttps://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_intro_to_community_cloud 【Trailhead】Community Cloud 答案Community Cloud Basics(https://trailhead.salesforce.com/content/learn/modules/community_cloud_basics) Get Started with Community Cloudhttps://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_intro_to_community_cloud Engage with Your Customershttps://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_setting_goals_for_community Engage with Your Partnershttps://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_partner_community Engage with Your Employeeshttps://trailhead.salesforce.com/content/learn/modules/community_cloud_basics/communities_employee_community 其他资源：Setup Salesforce Community (Part 1) - YouTube : https://www.youtube.com/watch?v=bowKDMQOzHs An Introduction to Lightning Communities &amp; Community Builder - YouTube : https://www.youtube.com/watch?v=mwdgueihnXA","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Community Cloud","slug":"Community-Cloud","permalink":"http://tonyrenhk.github.io/tags/Community-Cloud/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"利用LWC新建一个Bear-Tracking App","slug":"2019-03-12-BuildABear-Tracking-App-withLWC","date":"2019-03-12T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2019/03/12/2019-03-12-BuildABear-Tracking-App-withLWC/","link":"","permalink":"http://tonyrenhk.github.io/2019/03/12/2019-03-12-BuildABear-Tracking-App-withLWC/","excerpt":"Build a Bear-Tracking App with Lightning Web Components","text":"Build a Bear-Tracking App with Lightning Web Components 项目为Build a Bear-Tracking App with Lightning Web Components，相关链接为： https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps Create a Hello World Lightning Web Component Work with a Single Record相关链接为：https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/single-record Work with Lists of Records相关链接为：https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/record-list Create a Child Component and Interact with It相关链接为：https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/composition code:https://gitlab.com/renchk/create-a-child-component-and-interact-with-it2 Communicate with Components Across an App相关链接为：https://trailhead.salesforce.com/content/learn/projects/lwc-build-flexible-apps/inter-comp-events 全剧终：","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"LWC","slug":"LWC","permalink":"http://tonyrenhk.github.io/tags/LWC/"},{"name":"Lightning Web Components","slug":"Lightning-Web-Components","permalink":"http://tonyrenhk.github.io/tags/Lightning-Web-Components/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Salesforce入门资源","slug":"2019-03-07-Get_Start_SFDC","date":"2019-03-07T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2019/03/07/2019-03-07-Get_Start_SFDC/","link":"","permalink":"http://tonyrenhk.github.io/2019/03/07/2019-03-07-Get_Start_SFDC/","excerpt":"Hands-on introduction to Salesforce","text":"Hands-on introduction to Salesforce For those who is interested in Salesforce development, or who needs to take part. There are quite a lots of online self-learning resources provided by SFDC, they are available at https://trailhead.salesforce.comI pick some “must have” modules that you can start with and shouldn’t miss them. Learn Salesforce with TrailheadRegister a “trailhead” playground for tutorials(You can use your personal email address to register, as you can complete every tutorial and badge yourself)https://trailhead.salesforce.com/trails/learn_salesforce_with_trailhead Sell Lightning Fast with Sales CloudIntroduce SFDC “Sales Cloud” on business user perspective, that helps you to understand what and why and how we are going to do.https://trailhead.salesforce.com/trails/lex_end_user Admin BeginnerSystem administration perspective on configurationhttps://trailhead.salesforce.com/trails/force_com_admin_beginner Developer BeginnerSystem administration &#x2F; Developer perspective on customizationhttps://trailhead.salesforce.com/trails/force_com_dev_beginner Lightning DevelopmentDeveloper perspective on customization, specifically on LEX developmenthttps://trailhead.salesforce.com/trails/force_com_dev_intermediate/modules/lex_dev_lc_basics Best practicesApex Coding Best Practices (Must Read)https://developer.salesforce.com/page/Apex_Code_Best_Practices Apex Trigger Best Practiceshttps://developer.salesforce.com/page/Trigger_Frameworks_and_Apex_Trigger_Best_Practices Useful Tools, Tricks &amp; ReferenceTrailhead | The fun way to learn Salesforcehttps://trailhead.salesforce.com/ Workbench is a powerful, web-based suite of tools designed for administrators and developers to interact with Salesforce.com organizations via the Force.com APIshttps://workbench.developerforce.com More Salesforce Toolshttps://developer.salesforce.com/page/Tools AppExchange is the Salesforce store. Our ready-to-install enterprise solutions let you extend Salesforce with business apps and components for every department and industry, including sales, marketing, customer service, and more.https://appexchange.salesforce.com Lightning Pre-fill formhttp://www.salesforceben.com/migrate-your-salesforce-url-hacks-to-actions/ Salesforce Lightning for Gmail - Chrome Web Storehttps://chrome.google.com/webstore/detail/salesforce-lightning-for/jjghhkepijgakdammjldcbnjehfkfmha A hands-on blog for SFDChttp://www.salesforceben.com/ Extension to add a metadata layout on top of the standard Salesforce UI to improve the productivity and joy of Salesforce configuration, development, and integration work (MUST HAVE)https://chrome.google.com/webstore/detail/salesforce-inspector/aodjmnfhjibkcdimpodiifdjnnncaafh?hl=en","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"入门","slug":"入门","permalink":"http://tonyrenhk.github.io/tags/%E5%85%A5%E9%97%A8/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Lightning 的数据服务基础篇","slug":"2019-02-21-Lightning-Data-Service-Basics","date":"2019-02-21T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2019/02/21/2019-02-21-Lightning-Data-Service-Basics/","link":"","permalink":"http://tonyrenhk.github.io/2019/02/21/2019-02-21-Lightning-Data-Service-Basics/","excerpt":"Lightning Data Service Basics","text":"Lightning Data Service Basics 解锁Lightning Component Framework Specialist Superbadge，总框架如下 :https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_lcf Lightning Data Service Basics,相关链接：https://trailhead.salesforce.com/en/content/learn/modules/lightning_data_service Get Started with Lightning Data Service相关链接：https://trailhead.salesforce.com/content/learn/modules/lightning_data_service/lightning_data_service_get_started Manipulate Records with force:recordData相关链接：https://trailhead.salesforce.com/content/learn/modules/lightning_data_service/lightning_data_service_manipulate_records Handle Record Changes and Errors相关链接：https://trailhead.salesforce.com/content/learn/modules/lightning_data_service/lightning_data_service_handle_notifications","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Trailhead","slug":"Trailhead","permalink":"http://tonyrenhk.github.io/tags/Trailhead/"},{"name":"开发者II考试","slug":"开发者II考试","permalink":"http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"},{"name":"Lightning Components","slug":"Lightning-Components","permalink":"http://tonyrenhk.github.io/tags/Lightning-Components/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Lightning Web Components入门(二)","slug":"2019-02-17-Lightning-Web-Components-Basics","date":"2019-02-17T00:00:00.000Z","updated":"2025-05-06T03:51:48.339Z","comments":true,"path":"2019/02/17/2019-02-17-Lightning-Web-Components-Basics/","link":"","permalink":"http://tonyrenhk.github.io/2019/02/17/2019-02-17-Lightning-Web-Components-Basics/","excerpt":"Lightning Web Components Basics：LWC的入门基础篇","text":"Lightning Web Components Basics：LWC的入门基础篇 今天学习Lightning Web Components Basics的入门，相关链接为 https://trailhead.salesforce.com/en/content/learn/modules/lightning-web-components-basics Discover Lightning Web Components：LWC到底是什么？ 下面这个简单的例子当初告诉你答案。LWC分为三个部分组成，HTML,JS,CSS。 HTML样式如下： 123&lt;template&gt; &lt;input value=&#123;message&#125;&gt;&lt;/input&gt;&lt;/template&gt; 上面是基本的HTML组件，并且由HTML封装。 JavaScript样式如下： 1234import &#123; LightningElement &#125; from 'lwc';export default class App extends LightningElement &#123; message = 'Hello World';&#125; 通过JS控制相关的变量CSS样式如下 123input &#123; color: blue;&#125; 如果有HTML基础的同学，对于LWC上手应该不难。 推荐Trailhead学习链接为:https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/discover-lightning-web-components 下面是相关习题： 答案:注意CSS不是LWC的必须选项，所以答案是B 答案:官方推荐的playground:&#x2F;&#x2F;developer.salesforce.com&#x2F;docs&#x2F;component-library&#x2F;tools&#x2F;playground，答案是A Create Lightning Web Components相关链接为:https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/create-lightning-web-components D B Push Lightning Web Component Files相关链接为:https://trailhead.salesforce.com/en/content/learn/modules/lightning-web-components-basics/push-lightning-web-component-files 挑战： 首先新建项目： 12$ sfdx force:project:create --projectname bikeproject$ cd bikeproject 新建一个LWC 1$ sfdx force:lightning:component:create --type lwc -n bikeCard -d force-app/main/default/lwc 复制文中代码到你的LWC。 将本地连入你的developer org： 1sfdx force:auth:web:login -d -a myhuborg 然后部署过去： 1sfdx force:source:deploy -p force-app -u &lt;username&gt; 参考链接如下： https://developer.salesforce.com/docs/component-library/documentation/lwc/lwc.get_started_sfdx_deploy Handle Events in Lightning Web Components相关链接：https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/handle-events-in-lightning-web-components A C Add Styles and Data to a Lightning Web Component相关链接：https://trailhead.salesforce.com/content/learn/modules/lightning-web-components-basics/add-styles-and-data-to-a-lightning-web-component 如何使得LWC能够在Lightning Page 里面使用？首先需要使得isExposed 等于true，targets处设置LWC可以出现的地方 12345678910&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;LightningComponentBundle xmlns=\"urn:metadata.tooling.soap.sforce.com\" fqn=\"helloWorld1\"&gt; &lt;apiVersion&gt;46.0&lt;/apiVersion&gt; &lt;isExposed&gt;true&lt;/isExposed&gt; &lt;targets&gt; &lt;target&gt;lightning__AppPage&lt;/target&gt; &lt;target&gt;lightning__RecordPage&lt;/target&gt; &lt;target&gt;lightning__HomePage&lt;/target&gt; &lt;/targets&gt;&lt;/LightningComponentBundle&gt;","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"LWC","slug":"LWC","permalink":"http://tonyrenhk.github.io/tags/LWC/"},{"name":"SFDX","slug":"SFDX","permalink":"http://tonyrenhk.github.io/tags/SFDX/"},{"name":"Lightning Web Components","slug":"Lightning-Web-Components","permalink":"http://tonyrenhk.github.io/tags/Lightning-Web-Components/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"常用快捷键shortcut收录","slug":"2019-01-11-shortcut","date":"2019-01-11T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2019/01/11/2019-01-11-shortcut/","link":"","permalink":"http://tonyrenhk.github.io/2019/01/11/2019-01-11-shortcut/","excerpt":"常用快捷键shortcut收录.","text":"常用快捷键shortcut收录. VS Code Command Palette : Ctrl+Shift+P Open terminal: Ctrl+J Open a new window: Ctrl + Shift + N Code Formatting Shortcut: VSCode on Windows - Shift + Alt + F VSCode on MacOS - Shift + Option + F VSCode on Ubuntu - Ctrl + Shift + I Sublime 查询文件： Goto Anything feature (Ctrl+P on Windows and Linux, Cmd+P on macOS) or Ctrl+R,Cmd+R on macOS) Package Manager: Ctrl+Shift+P or Cmd+Shift+P in Linux&#x2F;Windows&#x2F;OS X Goto Anything feature Ctrl +&#96;P Sublime-HTMLPrettify victorporof&#x2F;Sublime-HTMLPrettify: https://github.com/victorporof/Sublime-HTMLPrettify Ctrl+Shift+H (or Cmd+Shift+H if you’re on a Mac). Atom Beautify 【Keyboard Shortcut】 You can also type Ctrl+Alt+B as a shortcut or click Packages &gt; Beautify in the menu. SSH shell You can type exit and hit Enter, or use Ctrl+D","categories":[{"name":"Tools","slug":"Tools","permalink":"http://tonyrenhk.github.io/categories/Tools/"}],"tags":[{"name":"Tools","slug":"Tools","permalink":"http://tonyrenhk.github.io/tags/Tools/"},{"name":"shortcut","slug":"shortcut","permalink":"http://tonyrenhk.github.io/tags/shortcut/"}],"keywords":[{"name":"Tools","slug":"Tools","permalink":"http://tonyrenhk.github.io/categories/Tools/"}]},{"title":"Lightning Web Components学习入门(一)","slug":"2019-01-06-Lightning-Web-Components","date":"2019-01-06T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2019/01/06/2019-01-06-Lightning-Web-Components/","link":"","permalink":"http://tonyrenhk.github.io/2019/01/06/2019-01-06-Lightning-Web-Components/","excerpt":"学习Lightning Web Components(LWC) ，其中需要使用到SFDX。","text":"学习Lightning Web Components(LWC) ，其中需要使用到SFDX。 现在可以用Lightning Web Components(业内简称LWC)和 Aura Components开发相关的Lightning components。两者都可以相互存在同一个页面下面。LWC是基于传统的HTML和现代的JavaScript进行开发，其主要内核是基于w3c的webcomponents相关开源源码：https://github.com/w3c/webcomponents/ 所以，大部分的代码是基于标准的HTML和JS。同时，支持使用 JavaScript Jest测试(https://jestjs.io/) 设置开发环境安装Salesforce CLI安装CLI如果你的电脑里已经安装了nodejs，可以直接通过npm进行安装 1npm install sfdx-cli --global 或者参考官方安装方法：https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli.htm 查看CLI版本1$ sfdx plugins --core 由于使用LWC需要sfdx 45以上的版本，所以我们需要对sfdx版本进行更新。 更新至最新的版本在2019年3月以前需要安装pre-release版本 1sfdx plugins:install salesforcedx@pre-release 在2019年3月之后可以直接卸载pre-release版本，并且输入：sfdx update进行安装。 12sfdx plugins:uninstall salesforcedxsfdx update IDE由于LWC无法在Developer Console打开，所以需要使用外部IDE进行开发。 官方的playground:为了方便测试，官方给出了在线版的playground，如下：https://developer.salesforce.com/docs/component-library/tools/playground Visual Studio Code (VS Code)：https://code.visualstudio.com/ VS Code的Salesforce 开发插件 Salesforce Extension Pack for Visual Studio Code，https://marketplace.visualstudio.com/items?itemName=salesforce.salesforcedx-vscode Ligthning Web Components for Visual Studio Code，这个是基于VS Code的LWC开发插件，比较实用，而且具有自动填补功能，建议开发人员下载使用。 安装下载地址：https://marketplace.visualstudio.com/items?itemName=salesforce.salesforcedx-vscode-lwc 源码下载地址：https://github.com/forcedotcom/salesforcedx-vscode ESLint Extension for VS Code，这个插件能够在未编译前，发现你在开发过程中的错误，https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint SalesforceXyTools：此IDE也支持LWC独立开发 安装使用教程如下：http://salesforcexytools.com/Salesforce/SalesforceXyTools-For-Sublime.html 源码如下：https://github.com/exiahuang/SalesforceXyTools 申请免费的试用Spring ’19 组织如果你是Salesforce的客户，你可以使用如下链接进行注册：https://www.salesforce.com/form/signup/prerelease-spring19.jsp如果你是Salesforce的Partner，你可以使用如下链接进行注册：https://www.salesforce.com/form/signup/prerelease-spring19-partner.jsp 兼容性问题根据官方的说法： Aura components can contain Lightning web components. However, the opposite doesn’t apply. Lightning web components can’t contain Aura components. Aura组件可以使用LWC作为一个组件，反过来，LWC里面不能包含Aura组件。但是JavaScript Code，可以在两边相互共享使用。 开发流程目前有两种开发流程，一种是在IDE上直接开发，然后部署至沙盒环境。另外一种是使用Scratch Orgs，具体流程可以如下 用SFDX 连入你的生产环境组织 新建一个Scratch Orgs 利用VS Code在本地开发LWC 将LWC推送至新建的Scratch Orgs进行查看，预览和测试 用SFDX 连入你的沙盒环境 将本地的LWC转成元数据 部署元数据至你的沙盒环境进行查看，预览和测试 实例使用 Dev Hub在设置(Setup),搜索’Dev Hub’,并且点Enable。只有打开Dev Hub才可以新建和使用Scratch Org。 新建DX项目首先需要新建一个 Salesforce DX 项目，下面例子中的mywork可以换成你的项目名字如‘HelloWorld’ 1sfdx force:project:create --projectname mywork 登入Salesforce 组织首先需要登入你的 1sfdx force:auth:web:login -d -a DevHub 授权登入沙盒环境: 1sfdx force:auth:web:login -r https://test.salesforce.com 或者可以添加新的Sandbox Login 1$ sfdx force:auth:web:login -r https://test.salesforce.com -d -a DevHub 登入之后，会跳转到Salesforce授权页面，开发者需要在浏览器页面授权 查看你所拥有的Org123456789101112sfdx force:org:list=== Orgs ALIAS USERNAME ORG ID CONNECTED STATUS ----------- -------------------- -------- ---------------- DD-ORG jdoe@dd-204.com 00D...OEA Connected(D) devhuborg jdoe@mydevhub.com 00D...MAC Connected ALIAS SCRATCH ORG NAME USERNAME ORG ID EXPIRATION DATE ---------- ------------ -------------------------- --------- ---------- my-scratch Your Company test-wvkm5z113@example.com 00D...UAI 2017-06-13(U) scratch208 Your Company test-wvkm5z113@example.com 00D...UAY 2017-06-13 这里顺便教几个小技巧，如果需要删除non-active 的Scratch Org，可以输入如下命令行 1sfdx force:org:list --clean 设置默认的 Dev Hub，可以输入如下命令行，新建新的Scratch Org需要生产环境，所以需要把默认的 Dev Hub设置为你的生产环境 1sfdx force:config:set defaultdevhubusername=org@username.com --global 新建一个Scratch Org开发者需要利用项目文件夹中的配置文件新建一个Scratch Org 123sfdx force:org:create -s -f config/project-scratch-def.json -a dreamhouse-orgorsfdx force:org:create -f config/project-scratch-def.json 如新建成功，会有如下成功的结果并给出用户名: 1Successfully created scratch org: 00XXX0000009PENEA2, username: test-XXXX@example.com 开发者利用用户名可以登入这个Scratch Org，如果需要删除一个某一个Scratch Org，可以输入如下命令行： 1$ sfdx force:org:delete -u test-XXXX@example.com 设置默认的用户名开发者需要设置默认的用户名defaultusername，这里设置之后，在下面打开Scratch Org时候可以不需要输入。 12345$ sfdx force:config:set defaultusername=test-XXXX@example.com=== Set ConfigNAME VALUE─────────────── ─────────────────────────────defaultusername test-XXXX@example.com 打开Scratch Org当开发者建立好了Scratch Org，可以利用默认的用户名打开Scratch Org， 12$ sfdx force:org:openAccess org 00D0l00ddd as user test-XXXX@example.com with the following URL: https://force-data-1039-dev-ed.cs58.my.sxxxx.com alesforce.com//secur/frontdoor.jsp?sid=00D0l0000009PEN!ARoAQCCFPl.pwPYTXXNszi9rR0Q6CMrJc77771yynXH.jbnJbweH5b19bc_6KXo9BkMtMY1PLz_nY BO9SSEOyQnPnCWAU3gP 如果没有设置默认的用户名，可以在命令行中指定某一个用户名： 1sfdx force:org:open -u test-phvqjvms7dsj@example.com 新建 Lightning Web Component(LWC)首先需要新建LWC在如下路径force-app&#x2F;main&#x2F;default&#x2F;lwc，同时文件夹是以lwc为命名. 然后创建LWC 12cd force-app/main/default/lwcsfdx force:lightning:component:create --type lwc -n helloWorld -d force-app/main/default/lwc 在LWC文件夹下会见到一个名字为helloWorld的文件夹，里面有三个文件helloWorld.html，helloWorld.js，helloWorld.js-meta.xml 其中helloWorld.html是我们熟悉的HTML文件，设置一个input，然后当有输入时候，调用JS函数。 12345678&lt;template&gt; &lt;lightning-card title=\"HelloWorld\" icon-name=\"custom:custom14\"&gt; &lt;div class=\"slds-m-around_medium\"&gt; &lt;p&gt;Hello, &#123;greeting&#125;!&lt;/p&gt; &lt;lightning-input label=\"Name\" value=&#123;greeting&#125; onchange=&#123;changeHandler&#125;&gt;&lt;/lightning-input&gt; &lt;/div&gt; &lt;/lightning-card&gt;&lt;/template&gt; 在helloWorld.js文件中是JavaScript代码。设置greeting的默认值为’World’，当有输入值修改时，将修改值赋予greeting。 1234567import &#123; LightningElement, track &#125; from 'lwc';export default class HelloWorld extends LightningElement &#123; @track greeting = 'World'; changeHandler(event) &#123; this.greeting = event.target.value; &#125;&#125; 最后是XML文件helloWorld.js-meta.xml，这里定义API版本和是否需要在其他LWC显示出来，同时，开发人员可以设置LWC应用于lightning App Page，lightning Record Page，lightning Home Page。 12345678910&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;LightningComponentBundle xmlns=\"http://soap.sforce.com/2006/04/metadata\" fqn=\"helloWorld\"&gt; &lt;apiVersion&gt;45.0&lt;/apiVersion&gt; &lt;isExposed&gt;true&lt;/isExposed&gt; &lt;targets&gt; &lt;target&gt;lightning__AppPage&lt;/target&gt; &lt;target&gt;lightning__RecordPage&lt;/target&gt; &lt;target&gt;lightning__HomePage&lt;/target&gt; &lt;/targets&gt;&lt;/LightningComponentBundle&gt; 推送本地修改至Scratch Org当开发者在本地修改或者新建LWC完毕之后，需要推送有关代码到Scratch Org 1sfdx force:source:push 在lightning Home Page使用LWC 打开Scratch Org，选择Sales App或者选择‘Home’ Tab。 选择‘Edit Page’ ，编辑当前lightning主页。 在右边的custom 栏目中拖曳helloWorld LWC 到中间的 组件位置。 保存并查看。 新建元数据package首先可以新建文件夹mdapi_output_dir： 1$ mkdir mdapi_output_dir 其次，创建package，这个package之后会在部署时候运用到： 12$ sfdx force:source:convert -d mdapi_output_dir/ --packagename package_nameSource was successfully converted to Metadata API format and written to the location: C:\\Users\\Administrator\\my_sfdx_project\\dreamhouse-sfdx\\mdapi_output_dir 这里附上一些小技巧，如下命令行可以查看有什么改变： 1$ ls -lR mdapi_output_dir/ 部署最后我们需要将上面生成的含有package的文件夹部署至指定目录，可以部署目录至沙盒环境或者生产环境，同时开发者可以定义需要跑的测试类 ： 1sfdx force:mdapi:deploy -d mdapioutput_dir&#x2F; -u &quot;sandbox_username&quot; -l RunSpecifiedTests -r test1,test2,test3,test4 或者利用 sfdx force:mdapi:deploy -d &lt;same directory as step 1&gt; -u 直接部署 123 sfdx force:mdapi:deploy --deploydir mdapi_output_dir --targetusername username@email.com495048 bytes written to C:\\Users\\youname~1\\AppData\\Local\\Temp\\2\\mdapi_output_dir.zip using 1693.299msDeploying C:\\Users\\youname~1\\AppData\\Local\\Temp\\2\\mdapi_output_dir.zip... 之后会出现状态信息： 123456&#x3D;&#x3D;&#x3D; StatusStatus: Queuedjobid: 0AfXX00000wgOnhSAEThe deploy request did not complete within the specified wait time [0 minutes].To check the status of this deployment, run &quot;sfdx force:mdapi:deploy:report&quot; 推送默认至org里面： 1sfdx force:source:deploy -p force-app&#x2F;main&#x2F;default 如下命令行可以查看部署结果： 1sfdx force:mdapi:deploy:report 资源 【Trailhead 资源】Quick Start: Lightning Web Components，这是官方的Trailhead 教程，建议初学者可以试试做一遍就知道整个开发流程了： https://trailhead.salesforce.com/content/learn/projects/quick-start-lightning-web-components 【Trailhead 资源】这也是官方的Trailhead 教程，教开发者使用SFDX，Get Started with Salesforce DX: https://trailhead.salesforce.com/content/learn/trails/sfdx_get_started 【源码】Sample Gallery: https://trailhead.salesforce.com/sample-gallery 【开发者文档】Lightning Web Components Documentation - Salesforce Lightning Component Library: https://developer.salesforce.com/docs/component-library/documentation/lwc 【开发者文档】Salesforce DX Developer Guide | Salesforce Developers: https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_intro.htm 【源码】这里提供一些Github源码学习：https://github.com/trailheadapps Introduction to Lightning Web Components (LWC) – Apex Hours Introducing DreamHouse, DreamInvest, Pure Aloe and Easy Spaces Sample Apps for Lightning Web Components | Developer Force Blog","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"LWC","slug":"LWC","permalink":"http://tonyrenhk.github.io/tags/LWC/"},{"name":"SFDX","slug":"SFDX","permalink":"http://tonyrenhk.github.io/tags/SFDX/"},{"name":"Lightning Web Components","slug":"Lightning-Web-Components","permalink":"http://tonyrenhk.github.io/tags/Lightning-Web-Components/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"对Campaign Member Status设置默认值","slug":"2019-01-03-Campaign-Member-Status","date":"2019-01-03T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2019/01/03/2019-01-03-Campaign-Member-Status/","link":"","permalink":"http://tonyrenhk.github.io/2019/01/03/2019-01-03-Campaign-Member-Status/","excerpt":"对Campaign Member Status设置默认值","text":"对Campaign Member Status设置默认值 由于Campaign Member Status在每一次由于Campaign新建的时候的默认值只能是Responded，Sent，而每一次新建一个新的Campaign，都必须添加对应的status，特别麻烦。 我们可以在Campaign的after insert 下面传入新的triggerNew，然后删除系统默认的CampaignMemberStatus，并且添加新的默认值。在这里，我添加四个状态Attended,,Invited,To be Invited。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849public without Sharing class CampaignTriggerClass &#123; public Static void routineAfterInsert(List&lt;Campaign&gt; triggerNew )&#123; List &lt;CampaignMemberStatus&gt; CMSDeleteList = new List&lt;CampaignMemberStatus&gt;(); for (CampaignMemberStatus cms: [SELECT id, CampaignID, HasResponded, IsDefault, Label, SortOrder FROM CampaignMemberStatus WHERE CampaignID in :triggerNew])&#123; CMSDeleteList.add(cms); &#125; List &lt;CampaignMemberStatus&gt; CMSList = new List&lt;CampaignMemberStatus&gt;(); for (Campaign c :triggerNew)&#123; CMSList.addAll(GenMemberStatusList(c.id)); &#125; insert CMSList; delete CMSDeleteList; &#125; public static List &lt;CampaignMemberStatus&gt; GenMemberStatusList(string cid)&#123; List &lt;CampaignMemberStatus&gt; NewStatuses = new List&lt;CampaignMemberStatus&gt;(); CampaignMemberStatus c1 = new CampaignMemberStatus(CampaignID = cid, Label = 'To be Invited', IsDefault = true, HasResponded = true, SortOrder = 3); CampaignMemberStatus c2 = new CampaignMemberStatus(CampaignID = cid, Label = 'Invited', IsDefault = false, HasResponded = false, SortOrder = 4); CampaignMemberStatus c3 = new CampaignMemberStatus(CampaignID = cid, Label = 'Confirmed', IsDefault = false, HasResponded = false, SortOrder = 5); CampaignMemberStatus c4 = new CampaignMemberStatus(CampaignID = cid, Label = 'Attended', IsDefault = false, HasResponded = false, SortOrder = 6); NewStatuses.add(c1); NewStatuses.add(c2); NewStatuses.add(c3); NewStatuses.add(c4); return NewStatuses; &#125; &#125;","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"对Campaign","slug":"对Campaign","permalink":"http://tonyrenhk.github.io/tags/%E5%AF%B9Campaign/"},{"name":"Apex","slug":"Apex","permalink":"http://tonyrenhk.github.io/tags/Apex/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"SFDX 常用命令以及相关资料","slug":"2019-01-02-SFDX","date":"2019-01-02T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2019/01/02/2019-01-02-SFDX/","link":"","permalink":"http://tonyrenhk.github.io/2019/01/02/2019-01-02-SFDX/","excerpt":"这里会学习到SFDX 常用命令，同时需要具备Git的相关知识。","text":"这里会学习到SFDX 常用命令，同时需要具备Git的相关知识。 SFDX安装1$ npm install sfdx-cli --global 更新： sfdx update 登入Salesforce Org1sfdx force:auth:web:login -d -a DevHub 登入 Sandbox: 1sfdx force:auth:web:login -r https://test.salesforce.com or添加新的Sandbox Login 1$ sfdx force:auth:web:login -r https://test.salesforce.com -d -a DevHub 新建DX项目Create a Salesforce DX Project 1sfdx force:project:create --projectname mywork 查看你所拥有的Org123456789101112sfdx force:org:list=== Orgs ALIAS USERNAME ORG ID CONNECTED STATUS ----------- -------------------- -------- ---------------- DD-ORG jdoe@dd-204.com 00D...OEA Connected(D) devhuborg jdoe@mydevhub.com 00D...MAC Connected ALIAS SCRATCH ORG NAME USERNAME ORG ID EXPIRATION DATE ---------- ------------ -------------------------- --------- ---------- my-scratch Your Company test-wvkm5z113@example.com 00D...UAI 2017-06-13(U) scratch208 Your Company test-wvkm5z113@example.com 00D...UAY 2017-06-13 删除non-active 的Scratch Org： 1sfdx force:org:list --clean 设置默认的 Dev Hub 1sfdx force:config:set defaultdevhubusername=org@username.com --global 新建一个Scratch Org123sfdx force:org:create -s -f config/project-scratch-def.json -a dreamhouse-orgorsfdx force:org:create -f config/project-scratch-def.json 成功的结果: 1Successfully created scratch org: 00D0l0000009PENEA2, username: test-im44gkueld8k@example.com 删除一个Scratch Org 1$ sfdx force:org:delete -u test-s6r2le1cgpnd@example.com 设置defaultusername12345$ sfdx force:config:set defaultusername=test-phvqjvms7dsj@example.com=== Set ConfigNAME VALUE─────────────── ─────────────────────────────defaultusername test-phvqjvms7dsj@example.com 打开Scratch Org12$ sfdx force:org:openAccess org 00D0l0000009PENEA2 as user test-im44gkueld8k@example.com with the following URL: https://force-data-1839-dev-ed.cs58.my.sxxxx.com alesforce.com//secur/frontdoor.jsp?sid=00D0l0000009PEN!ARoAQCCFPl.pwPYTXXNszi9rR0Q6CMrJc77771yynXH.jbnJbweH5b19bc_6KXo9BkMtMY1PLz_nY BO9SSEOyQnPnCWAU3gP 用username打开Scratch Org 1sfdx force:org:open -u test-phvqjvms7dsj@example.com 推送本地修改至Scratch Org1sfdx force:source:push 拉取所有metadata from Scratch Org1sfdx force:source:pull 添加Permission12345$ sfdx force:user:permset:assign -n Dreamhouse=== Permsets AssignedUSERNAME PERMISSION SET ASSIGNMENT───────────────────────────── ─────────────────────────test-im44gkueld8k@example.com Dreamhouse 导入数据12Administrator@EC2AMAZ-IOQ3I22 MINGW64 ~/my_sfdx_project/dreamhouse-sfdx (my_branch)$ sfdx force:data:tree:import --plan data/sample-data-plan.json 其中，数据格式如下： sample-data-plan.json： 12345678910111213141516[ &#123; \"sobject\": \"Broker__c\", \"saveRefs\": true, \"files\": [ \"brokers-data.json\" ] &#125;, &#123; \"sobject\": \"Property__c\", \"resolveRefs\": true, \"files\": [ \"properties-data.json\" ] &#125;] 有两个文件，一个是properties-data.json 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879&#123; \"records\": [ &#123; \"attributes\": &#123; \"type\": \"Property__c\", \"referenceId\": \"18HenryStRef\" &#125;, \"Name\": \"Stunning Victorian\", \"Address__c\": \"18 Henry St\", \"City__c\": \"Cambridge\", \"State__c\": \"MA\", \"Zip__c\": \"01742\", \"Price__c\": 975000, \"Title__c\": \"Stunning Victorian\", \"Beds__c\": 4, \"Baths__c\": 3, \"Location__Longitude__s\": -71.11095, \"Location__Latitude__s\": 42.35663, \"Picture__c\": \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house01.jpg\", \"Thumbnail__c\": \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house01sq.jpg\", \"Description__c\": \"Lorem ipsum dolor sit amet\", \"Broker__c\": \"@CarolineBrookerRef\" &#125;, &#123; \"attributes\": &#123; \"type\": \"Property__c\", \"referenceId\": \"24PearlStRef\" &#125;, \"Name\": \"Ultimate Sophistication\", \"Address__c\": \"24 Pearl St\", \"City__c\": \"Cambridge\", \"State__c\": \"MA\", \"Zip__c\": \"02420\", \"Price__c\": 1200000, \"Title__c\": \"Ultimate Sophistication\", \"Beds__c\": 5, \"Baths__c\": 4, \"Location__Longitude__s\": -71.10869, \"Location__Latitude__s\": 42.359103, \"Picture__c\": \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house02.jpg\", \"Thumbnail__c\": \"https://s3-us-west-1.amazonaws.com/sfdc-demo/realty/house02sq.jpg\", \"Description__c\": \"Lorem ipsum dolor sit amet\", \"Broker__c\": \"@MichaelJonesRef\" &#125; ]&#125;``` 另外一个brokers-data.json，格式如下：```json&#123; \"records\": [ &#123; \"attributes\": &#123; \"type\": \"Broker__c\", \"referenceId\": \"CarolineBrookerRef\" &#125;, \"name\": \"Caroline Kingsley\", \"Title__c\": \"Senior Broker\", \"Phone__c\": \"617-244-3672\", \"Mobile_Phone__c\": \"617-244-3672\", \"Email__c\": \"caroline@dreamhouse.demo\", \"Picture__c\": \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/caroline_kingsley.jpg\" &#125;, &#123; \"attributes\": &#123; \"type\": \"Broker__c\", \"referenceId\": \"MichaelJonesRef\" &#125;, \"name\": \"Michael Jones\", \"Title__c\": \"Senior Broker\", \"Phone__c\": \"617-244-3672\", \"Mobile_Phone__c\": \"617-244-3672\", \"Email__c\": \"michael@dreamhouse.demo\", \"Picture__c\": \"https://s3-us-west-1.amazonaws.com/sfdc-demo/people/michael_jones.jpg\" &#125; ]&#125; 新建metadata package首先新建文件夹mdapi_output_dir： 1$ mkdir mdapi_output_dir 创建package 12$ sfdx force:source:convert -d mdapi_output_dir/ --packagename package_nameSource was successfully converted to Metadata API format and written to the location: C:\\Users\\Administrator\\my_sfdx_project\\dreamhouse-sfdx\\mdapi_output_dir 查看改变 1$ ls -lR mdapi_output_dir/ 部署部署目录至沙盒环境可以定义需要跑的测试类 1sfdx force:mdapi:deploy -d mdapioutput_dir&#x2F; -u &quot;sandbox_username&quot; -l RunSpecifiedTests -r test1,test2,test3,test4 或者利用 sfdx force:mdapi:deploy -d &lt;same directory as step 1&gt; -u 直接部署 12345678910 sfdx force:mdapi:deploy --deploydir mdapi_output_dir --targetusername username@email.com495048 bytes written to C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\2\\mdapi_output_dir.zip using 1693.299msDeploying C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\2\\mdapi_output_dir.zip...&#x3D;&#x3D;&#x3D; StatusStatus: Queuedjobid: 0Af6F00000wgOnhSAEThe deploy request did not complete within the specified wait time [0 minutes].To check the status of this deployment, run &quot;sfdx force:mdapi:deploy:report&quot; 如下代码查看部署结果 1sfdx force:mdapi:deploy:report 转换mdapi:convert Converts metadata retrieved via Metadata API into the source format used in Salesforce DX projects.转换由package.ml拉取的Metadata到DX项目文件的格式： 1sfdx force:mdapi:convert -r mdapipackage&#x2F; 获取沙盒的metadata1sfdx force:mdapi:retrieve --retrievetargetdir force-app -k package.xml 或者如下代码，将生成的metadata放在force-app下面： 1sfdx force:mdapi:retrieve --retrievetargetdir force-app -k package.xml --targetusername tony.ren@scmp.com.itdev 参考： salesforcedx - Retrieve all metadata from an existing sandbox (for Salesforce DX conversion) - Salesforce Stack Exchange: https://salesforce.stackexchange.com/questions/197186/retrieve-all-metadata-from-an-existing-sandbox-for-salesforce-dx-conversion","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Git","slug":"Git","permalink":"http://tonyrenhk.github.io/tags/Git/"},{"name":"LWC","slug":"LWC","permalink":"http://tonyrenhk.github.io/tags/LWC/"},{"name":"SFDX","slug":"SFDX","permalink":"http://tonyrenhk.github.io/tags/SFDX/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Trailhead学习:Lightning Components Basics","slug":"2018-12-22-Lightning-Components-Basics","date":"2018-12-22T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/12/22/2018-12-22-Lightning-Components-Basics/","link":"","permalink":"http://tonyrenhk.github.io/2018/12/22/2018-12-22-Lightning-Components-Basics/","excerpt":"【Trailhead学习】开发者2考试解锁之路：”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)之Lightning Components Basics 。","text":"【Trailhead学习】开发者2考试解锁之路：”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)之Lightning Components Basics 。 该模块为 Aura模块基础(Aura Components Basics)https://trailhead.salesforce.com/en/content/learn/modules/lex_dev_lc_basics 分为如下几个单元： Before You Start Get Started with Lightning Components Create and Edit Lightning Components Attributes and Expressions Handle Actions with Controllers Input Data Using Forms Connect to Salesforce with Server-Side Controllers Connect Components with Events Discover Next Steps 该模块是解锁Lightning Component Framework Specialist Superbadge的第二个Module。其中Lightning Component Framework Specialist Superbadge的链接如下： https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_lcf 本模块的主要学习目的是：利用Lightning Components中的可重用的组件构建网页版apps。 在开始前(Before You Start)相关学习链接如下：https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_prereqs学习开发Lightning components 需要学习JavaScript，对于初学者，可以参考如下链接：JS: The Right Way: http://jstherightway.org/ 题目 Setting Up Your OrgAs part of our challenges for this module, you’ll build a camping list application. You need to do a few more tasks before passing this challenge and continuing. Create an Expense custom object to work with the examples. You probably already have done this. Create a Camping Item custom object to hold the items you need to go camping with the following fields: Name (use the standard name field) Quantity: Number(18, 0) - Required Price: Currency(16, 2) - Required Packed: Checkbox(default: unchecked) 解析题目要求新建一个对象(Object)名字为：Expense，相关信息需要设置如下： Label：Expense Plural Label：Expenses Starts with vowel sound：checked API Name：Expense__c 同时新建四个字段在Expense对象上： Amount (API Name:Amount__c),字段类型：Number(16,2) Client (API Name:Client__c),字段类型：Text(50) Date (API Name:Date__c),字段类型：Date Reimbursed (API Name:Reimbursed__c),字段类型：Checkbox 之后需要新建另外一个对象名字为Camping Item,这里API名字可以为Camping_Item__c。同时，新建三个field:Quantity,Price,Packed。 搞定！ Get Started with Lightning Components相关链接：https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_intro 如下是Lightning Components框架，其设计师为了连接Salesforce与lightning平台。 题目一：Which of the following descriptions about the Lightning Component framework is true?A) It’s a UI framework for developing web apps for mobile and desktop devices.B) It uses JavaScript on the client side and Apex on the server side.C) It’s a modern framework for building single-page applications.D) All of the above 解析： Lightning Component适用于移动端和PC端，同时前端是JS，后端是APEX。所以答案是D 题目二：What can you build with the Lightning Component framework?A) Standalone appB) Components to use inside Visualforce pagesC) Drag-and-drop components for Lightning App BuilderD) All of the above 解析：本题考查Lightning Component适合应用的场景。D。 题目三：How is Lightning Components different from other web app frameworks? A) Lightning Components is optimized for both mobile and desktop experiences and proves it with Salesforce1 and Lightning Experience.B) Lightning Components connects natively with services provided by the Salesforce platform.C) Lightning Components has specific opinions about how data access is performed and has specific security requirements.D) All of the above 解析：Lightning Components 和其他框架的不同点。Lightning Components 其设计主要是为了Salesforce服务，也即连接Lightning平台和Salesforce。所以答案是D Create and Edit Aura Components相关链接：https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_create 题目： Create a Simple Camping List Lightning Component Create a ‘camping’ component that displays a list of camping supplies that you’ll need for your trip. Compose this component by using other components to increase reusability. Create a campingList component that contains an ordered list of camping supplies that include Bug Spray, Bear Repellant, and Goat Food. Create a campingHeader component that displays Camping List wrapped in an H1 tag with a font size of 18. 要新建三个Lightning Component，分别为’camping’,’campingList’,’campingHeader’ 其中’campingList’，需要列出三个列表Bug Spray, Bear Repellant, 和 Goat Food。 1234567&lt;aura:component &gt; &lt;ol&gt; &lt;li&gt;Bug Spray&lt;/li&gt; &lt;li&gt;Bear Repellant&lt;/li&gt; &lt;li&gt;Goat Food&lt;/li&gt; &lt;/ol&gt;&lt;/aura:component&gt; 同时新建一个’campingHeader’ 123&lt;aura:component &gt; &lt;h1&gt;Camping List&lt;/h1&gt;&lt;/aura:component&gt; 12345.THIS &#123;&#125;h1.THIS &#123;font-size: 18px;&#125; ‘camping’代码如下： 1234&lt;aura:component &gt; &lt;c:campingHeader/&gt; &lt;c:campingList/&gt;&lt;/aura:component&gt; Attributes and Expressions相关链接：https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_attributes_expressions本章主要讲述的是相关属性以及表达式。接下来是下一个题目：Create a Packing List Item Component Create a Lightning Component to display a single item for your packing list. Create a component called campingListItem. Add an attribute named item of type Camping_Item__c that is required. Display Name, Price, Quantity, Packed using an expression. Display Price and Quantity using the appropriate formatted number fields. Display Packed status using a toggle. 题目要求添加一个Camping_Item__c类型，同时定义Price和Quantity为数字字段。这里我们把Price定义为currency字段： 1234567&lt;aura:component &gt; &lt;aura:attribute name=\"item\" type=\"Camping_Item__c\" required=\"true\"/&gt; &lt;ui:outputText value=\"&#123;!v.item.Name&#125;\"/&gt; &lt;lightning:formattedNumber value=\"&#123;!v.item.Price__c&#125;\" style=\"currency\"/&gt; &lt;lightning:formattedNumber value=\"&#123;!v.item.Quantity__c&#125;\" style=\"Number\"/&gt; &lt;lightning:input type=\"toggle\" label=\"Packed\" name=\"togglevalue\" checked=\"&#123;!v.item.Packed__c&#125;\" /&gt; &lt;/aura:component&gt; Handle Actions with Controllers相关链接为：https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_controllers 此文主要学习如何使用Controllers 例子下面我们来根据例子实际学习一下如何使用控制器，这里新建一个Lightning Component 命名为helloMessageInteractive： 12345678910&lt;aura:component&gt; &lt;aura:attribute name=\"message\" type=\"String\"/&gt; &lt;p&gt;Message of the day: &#123;!v.message&#125;&lt;/p&gt; &lt;div&gt; &lt;lightning:button label=\"You look nice today.\" onclick=\"&#123;!c.handleClick&#125;\"/&gt; &lt;lightning:button label=\"Today is going to be a great day!\" onclick=\"&#123;!c.handleClick&#125;\"/&gt; &lt;/div&gt;&lt;/aura:component&gt; 其中’c’是控制客户端的操作。通过onclick调用客户端handleClick的函数实行控制。 接下来是controller来控制按钮： 1234567(&#123; handleClick: function(component, event, helper) &#123; var btnClicked = event.getSource(); // the button var btnMessage = btnClicked.get(\"v.label\"); // the button's label component.set(\"v.message\", btnMessage); // update our message &#125;&#125;) ‘event.getSource()’指向的是用户所点击的按钮属性。之后通过component.set设置客户端的变量”v.message”。 最后还需要新建一个Lightning Application去预览这个组件： 123&lt;aura:application extends=\"force:slds\" &gt; &lt;c:helloMessageInteractive&gt;&lt;/c:helloMessageInteractive&gt;&lt;/aura:application&gt; 题目接下来直接进入题目环节： Mark Item as Packed Add a button to the campingListItem component that when clicked, marks the item as packed. Add a button labeled Packed! that calls the packItem controller function when clicked. The controller function should do the following: Mark the item attribute as packed using a value of true Disable the button by marking the disabled attribute using a value of true 题目要求新建一个按钮，当按钮按下之后，设置Packed为真。 1234567891011121314151617&lt;aura:component implements=\"force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId\" access=\"global\" &gt; &lt;!-- item attribute is an instance of Camping_Item__c--&gt; &lt;aura:attribute name=\"item\" type=\"Camping_Item__c\" description=\"instance of Camping_Item__c object\" required=\"true\" default=\"&#123;Packed__c : false&#125;\" access=\"global\"/&gt; &lt;p&gt; Name: &#123;!v.item.Name&#125; &lt;/p&gt; &lt;p&gt;Price: &lt;lightning:formattedNumber value=\"&#123;!v.item.Price__c&#125;\" style=\"currency\"/&gt; &lt;/p&gt; &lt;p&gt;Quantity: &lt;lightning:formattedNumber value=\"&#123;!v.item.Quantity__c&#125;\"/&gt; &lt;/p&gt; &lt;p&gt; &lt;lightning:input type=\"toggle\" label=\"Packed ?\" name=\"Packed\" checked=\"&#123;!v.item.Packed__c&#125;\" /&gt; &lt;/p&gt; &lt;lightning:button label=\"Packed!\" onclick=\"&#123;!c.packItem&#125;\"/&gt;&lt;/aura:component&gt; 同时记得Disable这个按钮。 12345678(&#123; packItem : function(component, event, helper) &#123; //set the Packed__c property of the item (instance of Camping_Item__c) attribute component.set(\"v.item.Packed__c\",true); //set the disabled attribute to true event.getSource().set(\"v.disabled\",true); &#125;&#125;) 最后在Lightning Application去预览这个组件： 123&lt;aura:application extends=\"force:slds\"&gt; &lt;c:campingListItem item=\"&#123;Price__c: 100, Packed__c: false, Quantity__c: 10, Name:'Test'&#125;\" /&gt;&lt;/aura:application&gt; 最后效果图如下： 搞定！ 最后，关于Lightning组件的其他库函数可以参考如下官方链接：Components - Salesforce Lightning Component Library: https://developer.salesforce.com/docs/component-library/overview/components Input Data Using Forms链接如下： https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_forms 本节讲述的是如何利用Lightning组建构建表单，同时表单的样式使用Salesforce Lightning Design System，简称SLDS。 这里，我们再application里面加入 extends&#x3D;”force:slds”的属性，就可以使用简称SLDS的库。 我们可以现建立一个如下的 lightning component： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364&lt;aura:component&gt; &lt;!-- PAGE HEADER --&gt; &lt;lightning:layout class=\"slds-page-header slds-page-header--object-home\"&gt; &lt;lightning:layoutItem&gt; &lt;lightning:icon iconName=\"standard:scan_card\" alternativeText=\"My Expenses\"/&gt; &lt;/lightning:layoutItem&gt; &lt;lightning:layoutItem padding=\"horizontal-small\"&gt; &lt;div class=\"page-section page-header\"&gt; &lt;h1 class=\"slds-text-heading--label\"&gt;Expenses&lt;/h1&gt; &lt;h2 class=\"slds-text-heading--medium\"&gt;My Expenses&lt;/h2&gt; &lt;/div&gt; &lt;/lightning:layoutItem&gt; &lt;/lightning:layout&gt; &lt;!-- / PAGE HEADER --&gt; &lt;!-- NEW EXPENSE FORM --&gt; &lt;lightning:layout&gt; &lt;lightning:layoutItem padding=\"around-small\" size=\"6\"&gt; &lt;!-- CREATE NEW EXPENSE --&gt; &lt;div aria-labelledby=\"newexpenseform\"&gt; &lt;!-- BOXED AREA --&gt; &lt;fieldset class=\"slds-box slds-theme--default slds-container--small\"&gt; &lt;legend id=\"newexpenseform\" class=\"slds-text-heading--small slds-p-vertical--medium\"&gt; Add Expense &lt;/legend&gt; &lt;!-- CREATE NEW EXPENSE FORM --&gt; &lt;form class=\"slds-form--stacked\"&gt; &lt;lightning:input aura:id=\"expenseform\" label=\"Expense Name\" name=\"expensename\" value=\"&#123;!v.newExpense.Name&#125;\" required=\"true\"/&gt; &lt;lightning:input type=\"number\" aura:id=\"expenseform\" label=\"Amount\" name=\"expenseamount\" min=\"0.1\" formatter=\"currency\" step=\"0.01\" value=\"&#123;!v.newExpense.Amount__c&#125;\" messageWhenRangeUnderflow=\"Enter an amount that's at least $0.10.\"/&gt; &lt;lightning:input aura:id=\"expenseform\" label=\"Client\" name=\"expenseclient\" value=\"&#123;!v.newExpense.Client__c&#125;\" placeholder=\"ABC Co.\"/&gt; &lt;lightning:input type=\"date\" aura:id=\"expenseform\" label=\"Expense Date\" name=\"expensedate\" value=\"&#123;!v.newExpense.Date__c&#125;\"/&gt; &lt;lightning:input type=\"checkbox\" aura:id=\"expenseform\" label=\"Reimbursed?\" name=\"expreimbursed\" checked=\"&#123;!v.newExpense.Reimbursed__c&#125;\"/&gt; &lt;lightning:button label=\"Create Expense\" class=\"slds-m-top--medium\" variant=\"brand\" onclick=\"&#123;!c.clickCreate&#125;\"/&gt; &lt;/form&gt; &lt;!-- / CREATE NEW EXPENSE FORM --&gt; &lt;/fieldset&gt; &lt;!-- / BOXED AREA --&gt; &lt;/div&gt; &lt;!-- / CREATE NEW EXPENSE --&gt; &lt;/lightning:layoutItem&gt; &lt;/lightning:layout&gt; &lt;!-- / NEW EXPENSE FORM --&gt;&lt;/aura:component&gt; 这里的lightning component用到了lightning:layout，同时设置了size&#x3D;”6” ，那么对应道HTML里面的div会占用页面宽度的 50%，总数为12。lightning:input是输入框里面的相关属性和HTML类似，如min是最小值。这里出现一个aura:id是在每一个tag里面的唯一的id同时，新建一个application： 12345&lt;aura:application extends=\"force:slds\"&gt; &lt;!-- This component is the real \"app\" --&gt; &lt;c:expenses/&gt;&lt;/aura:application&gt; 效果图如下： 下面进入题目环节： Create a Form to Enter New Items In this challenge you’ll create a form to enter new items, a list to display the items entered, and add SLDS styling. First, to make our camping list look more appealing, change the campingHeader component to use lightning:layout and SLDS. Similar to the unit, style the Camping List H1 inside the slds-page-header. Add the action:goal SLDS icon using lightning:icon. Next, modify the campingList component to contain a new item input form and an iteration of campingListItem components for displaying the items entered. Here are additional details for the modifications to the campingList component. Add an attribute named items with the type of an array of camping item custom objects. Add an attribute named newItem of type Camping_Item__c with default quantity and price values of 0. The component displays the Name, Quantity, Price, and Packed form fields with the appropriate input component types and values from the newItem attribute. The Quantity field accepts a number that’s at least 1. Submitting the form executes the action clickCreateItem in the JavaScript controller. If the form is valid, the JavaScript controller pushes the newItem onto the array of existing items, triggers the notification that the items value provider has changed, and resets the newItem value provider with a blank sObjectType of Camping_Item__c. For this challenge, place the code in your component’s controller, not the helper. 题目需要开发者写一个输入的表单，同时展示所有输入的记录。这里我们可以使用SLDS样式，如lightning:icon。 现在开始先写campingList 组件，也是主体部分。需要设置Camping_Item__c的quantity和price的默认值都为0。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869&lt;aura:component &gt; &lt;aura:attribute name=\"items\" type=\"Camping_Item__c[]\"/&gt; &lt;aura:attribute name=\"newItem\" type=\"Camping_Item__c\" default=\"&#123;'Name':'', 'Quantity__c':0, 'Price__c':0, 'Packed__c':false, 'sobjectType':'Camping_Item__c'&#125;\"/&gt; &lt;!-- NEW Campaing FORM --&gt; &lt;div class=\"slds-col slds-col--padded slds-p-top--large\"&gt; &lt;c:campingHeader/&gt; &lt;div aria-labelledby=\"newCampaingForm\"&gt; &lt;!-- BOXED AREA --&gt; &lt;fieldset class=\"slds-box slds-theme--default slds-container--small\"&gt; &lt;legend id=\"newCampaingForm\" class=\"slds-text-heading--small slds-p-vertical--medium\"&gt; Add Expense &lt;/legend&gt; &lt;!-- CREATE NEW Campaing FORM --&gt; &lt;form class=\"slds-form--stacked\"&gt; &lt;!-- For Name Field --&gt; &lt;lightning:input aura:id=\"expenseform\" label=\"Camping Name\" name=\"expensename\" value=\"&#123;!v.newItem.Name&#125;\" required=\"true\"/&gt; &lt;!-- For Quantity Field --&gt; &lt;lightning:input type=\"number\" aura:id=\"campingform\" label=\"Quantity\" name=\"expenseamount\" min=\"1\" value=\"&#123;!v.newItem.Quantity__c&#125;\" messageWhenRangeUnderflow=\"Enter minimum 1 Quantity\"/&gt; &lt;!-- For Price Field --&gt; &lt;lightning:input aura:id=\"campingform\" label=\"Price\" formatter=\"currency\" name=\"expenseclient\" value=\"&#123;!v.newItem.Price__c&#125;\" /&gt; &lt;!-- For Check Box --&gt; &lt;lightning:input type=\"checkbox\" aura:id=\"campingform\" label=\"Packed\" name=\"expreimbursed\" checked=\"&#123;!v.newItem.Packed__c&#125;\"/&gt; &lt;lightning:button label=\"Create Camping\" class=\"slds-m-top--medium\" variant=\"brand\" onclick=\"&#123;!c.clickCreateItem&#125;\"/&gt; &lt;/form&gt; &lt;!-- / CREATE NEW EXPENSE FORM --&gt;&lt;/fieldset&gt; &lt;!-- / BOXED AREA --&gt; &lt;/div&gt; &lt;!-- / CREATE NEW EXPENSE --&gt; &lt;/div&gt; &lt;!-- ITERATIING ITEM LISTS --&gt; &lt;div class=\"slds-card slds-p-top--medium\"&gt; &lt;c:campingHeader/&gt; &lt;section class=\"slds-card__body\"&gt; &lt;div id=\"list\" class=\"row\"&gt; &lt;aura:iteration items=\"&#123;!v.items&#125;\" var=\"item\"&gt; &lt;c:campingListItem item=\"&#123;!item&#125;\"/&gt; &lt;/aura:iteration&gt; &lt;/div&gt; &lt;/section&gt; &lt;/div&gt; &lt;!-- / ITERATIING ITEM LISTS --&gt;&lt;/aura:component&gt; 接下来需要写一个clickCreateItem函数处理当提交上来的数据，将数据传入newItem中。同时将原来的Camping_Item__c里面的值清空。这里只需要写controller就够了，helper文件就不需要了。 12345678910111213141516171819202122(&#123; clickCreateItem : function(component, event, helper) &#123; var validCamping = component.find('campingform').reduce(function (validSoFar, inputCmp) &#123; // Displays error messages for invalid fields inputCmp.showHelpMessageIfInvalid(); return validSoFar &amp;&amp; inputCmp.get('v.validity').valid; &#125;, true); if(validCamping)&#123; var newCampingItem = component.get(\"v.newItem\"); //helper.createCamping(component,newCampingItem); var campings = component.get(\"v.items\"); var item = JSON.parse(JSON.stringify(newCampingItem)); campings.push(item); component.set(\"v.items\",campings); component.set(\"v.newItem\",&#123; 'sobjectType': 'Camping_Item__c','Name': '','Quantity__c': 0, 'Price__c': 0,'Packed__c': false &#125;); &#125; &#125;&#125;) 接下来需要写campingHeader函数，展示camping的头信息。 12345678910111213&lt;aura:component &gt; &lt;lightning:layout class=\"slds-page-header slds-page-header--object-home\"&gt; &lt;lightning:layoutItem &gt; &lt;lightning:icon iconName=\"action:goal\" alternativeText=\"My Camping\"/&gt; &lt;/lightning:layoutItem&gt; &lt;lightning:layoutItem padding=\"horizontal-small\"&gt; &lt;div class=\"page-section page-header\"&gt; &lt;h1 class=\"slds-text-heading--label\"&gt;Camping&lt;/h1&gt; &lt;h2 class=\"slds-text-heading--medium\"&gt;My Camping&lt;/h2&gt; &lt;/div&gt; &lt;/lightning:layoutItem&gt; &lt;/lightning:layout&gt;&lt;/aura:component&gt; 最后的campingListItem 组件可以沿用上一章节‘Handle Actions with Controllers’里面的代码。 最后新建一个Camping.app， 123&lt;aura:application extends=\"force:slds\" &gt;&lt;c:campingList /&gt;&lt;/aura:application&gt; 打开Camping.app，效果如下： 就这样，又拿了500分！ Connect to Salesforce with Server-Side Controllers相关链接如下：https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_server 使用服务器端控制器连接到Salesforce我们可以参考如下图，在前端，通过View展示给用户，并且通过JS的Controller实现与Salesforce的服务器端控制器进行连接。 在上一章节中，我们提及了利用Lightning组建构建表单，相关架构图如下， 整个组建由Create按钮开始，该按钮连接到clickCreate动作处理程序。当操作处理程序运行时，它从表单字段（2）中获取值，然后将新expense添加到expense数组（3）。 当通过set更新array时，它会触发组建自动重新列出expense清单（4）。 从Salesforce查询数据接着上面的框架图，如何实现在应用启动时加载现有数据列表(如expense)？可以参考如下代码： 123456789public with sharing class ExpensesController &#123; // STERN LECTURE ABOUT WHAT'S MISSING HERE COMING SOON @AuraEnabled public static List&lt;Expense__c&gt; getExpenses() &#123; return [SELECT Id, Name, Amount__c, Client__c, Date__c, Reimbursed__c, CreatedDate FROM Expense__c]; &#125;&#125; 一种更为常见的调用方法可以如下。直接通过soql传入查询语句如select id from Account实现动态查询。 123456@AuraEnabledpublic static List&lt;sObject&gt; QueryRecord(String soql)&#123; List&lt;sObject&gt; sobjs = new List&lt;sObject&gt;(); sobjs= Database.query(soql); return sobjs;&#125; “Aura”是Lightning Components核心的开源框架的名称。同时，该 static的关键词。所有@AuraEnabled 控制器方法必须是static方法，并且要么适用 public 要么 global范围。值得注意的另一件事是，该方法对Lightning组件的数据打包没有任何特殊作用，它只是直接返回SOQL查询结果。 从Salesforce加载数据那么我们怎么通过Aura Components 加载相关的数据呢？首先，我们需要在aura:component中写入相关的class，如下： 1&lt;aura:component controller=\"ExpensesController\"&gt; 其实，指向Apex控制器实际上并不加载任何数据，也不会调用远程方法。根据上面图示，我们还需要在js调用相关的controller方法(method)。 首先，我们需要在View层定义一开始js跑的函数。如下图所示，我们调用了js端的doInit函数。 1&lt;aura:handler name=\"init\" action=\"&#123;!c.doInit&#125;\" value=\"&#123;!this&#125;\"/&gt; 调用服务器端控制器方法接下来我看看如何通过js调用服务器端控制器，可以通过component.get(“c.getExpenses”)定义所需要调用的方法。其中，C代表着客户端控制器。 1234567891011121314151617// Load expenses from SalesforcedoInit: function(component, event, helper) &#123; // Create the action var action = component.get(\"c.getExpenses\"); // Add callback behavior for when response is received action.setCallback(this, function(response) &#123; var state = response.getState(); if (state === \"SUCCESS\") &#123; component.set(\"v.expenses\", response.getReturnValue()); &#125; else &#123; console.log(\"Failed with state: \" + state); &#125; &#125;); // Send action off to be executed $A.enqueueAction(action);&#125; 值得注意的是，如果是component.get(“v.something”)，代表着在js在前端View层拿数据。action.setCallback（…）的代码块，它将在远程方法调用返回数据时运行。最后，通过$A.enqueueAction(action);实现完整的调用。通过确定state为SUCCESS之后，将返回的结果由response.getReturnValue()取出。之后赋值给v.expenses。 学了了Aura基本框架之后，我们来看看如下挑战： 使用服务器端控制器保存和加载记录 使用服务器端控制器将记录保留到数据库。该campingList部件载荷现有的记录，当它启动和提交表单时保存记录到数据库中。 使用getItems方法和saveItem方法创建一个CampingListController Apex类。 添加一个doInit初始化处理程序，在组件启动时从数据库加载现有记录。 修改JavaScript控制器以使用帮助程序中的createItem方法从有效的表单提交中将记录保存到数据库。新项目将添加到控制器的项目值提供程序中。 首先根据需要，先需要创建一个CampingListController.cls ，同时需要写两个方法：getItems方法和saveItem方法。可以参考如下代码： 或者如下链接：https://gitlab.com/snippets/1807867 getItems方法是获取数据，saveItem方法是保存数据。 campingList.cmp 可以参考如下代码： 或者如下链接：https://gitlab.com/snippets/1807867 CampingListController.js然后在前端加载一个doInit初始化处理程序：可以参考如下代码： 或者如下链接：https://gitlab.com/snippets/1807868在组件启动时从数据库调用getItems获得现有记录 同时需要写保存数据的方法，可以参考CampingListHelper.js可以参考如下代码： 或者如下链接：https://gitlab.com/snippets/1807869 Connect Components with Events相关链接如下：https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_events 接下来我们学习如何在component中使用event。下面这个例子展示了如何通过component发送event： 12345678&lt;lightning:input type=\"toggle\" label=\"Reimbursed?\" name=\"reimbursed\" class=\"slds-p-around--small\" checked=\"&#123;!v.expense.Reimbursed__c&#125;\" messageToggleActive=\"Yes\" messageToggleInactive=\"No\" onchange=\"&#123;!c.clickReimbursed&#125;\"/&gt; 这里使用了lightning:input这个标签，同时定义了类型为type&#x3D;”toggle”，也就是开关类型。当用户点击了这个开关，会触发clickReimbursed事件，下面是clickReimbursed事件，会新建一个event名字为updateExpense。同时传入expense 参数。 12345678(&#123; clickReimbursed: function(component, event, helper) &#123; var expense = component.get(\"v.expense\"); var updateEvent = component.getEvent(\"updateExpense\"); updateEvent.setParams(&#123; \"expense\": expense &#125;); updateEvent.fire(); &#125;&#125;) 接下来定义一个event，其中event有两种类型，组件和应用程序类型。这里我们使用的是组件事件，名字为expensesItemUpdate。 123&lt;aura:event type=\"COMPONENT\"&gt; &lt;aura:attribute name=\"expense\" type=\"Expense__c\"/&gt;&lt;/aura:event&gt; 那么如何发送一个event呢？这里我们需要注册一个event，加上如下代码在expenseItem 组件中。如下代码的意思是埋在本组件里面会触发一个event，名字是updateExpense，其类型为c:expensesItemUpdate。 1&lt;aura:registerEvent name=\"updateExpense\" type=\"c:expensesItemUpdate\"/&gt; 发送了event之后，该如何在主component里面处理呢？ 如下代码展示了在主组件expenses中，添加一个aura:handler，接收来自expensesItemUpdate的event，同时会触发一个新的函数handleUpdateExpense。 12&lt;aura:handler name=\"updateExpense\" event=\"c:expensesItemUpdate\" action=\"&#123;!c.handleUpdateExpense&#125;\"/&gt; 接下来我们看看handleUpdateExpense如何拿到相关event传过来的参数，直接使用event.getParam(“expense”)获取参数，传给helper函数进行相关处理。 1234handleUpdateExpense: function(component, event, helper) &#123; var updatedExp = event.getParam(\"expense\"); helper.updateExpense(component, updatedExp);&#125; 最后，updateExpense 的方法可以如下。 12345678910111213updateExpense: function(component, expense) &#123; var action = component.get(\"c.saveExpense\"); action.setParams(&#123; \"expense\": expense &#125;); action.setCallback(this, function(response)&#123; var state = response.getState(); if (state === \"SUCCESS\") &#123; // do nothing! &#125; &#125;); $A.enqueueAction(action);&#125; 学习了event如何操作之后，我们来查看相关挑战： Refactor Components and Communicate with EventsRefactor the input form for camping list items into its own component and communicate with component events. Replace the HTML form in the campingList component with a new campingListForm component that calls the clickCreateItem JavaScript controller action when clicked. The campingList component listens for a c:addItemEvent event and executes the action handleAddItem in the JavaScript controller. The handleAdditem method saves the record to the database and adds the record to the items value provider. The addItemEvent event is of type component and has a Camping_Item__c type attribute named item. The campingListForm registers an addItem event of type c:addItemEvent. The campingListFormController JavaScript controller calls the helper’s createItem method if the form is valid. The campingListFormHelper JavaScript helper creates an addItem event with the item to be added and then fires the event. It then resets the newItem value provider with a blank sObjectType of type Camping_Item__c. 使用新的campingListForm组件替换campingList组件中的HTML表单，该组件在单击时调用clickCreateItem JavaScript控制器操作。 campingList组件侦听c：addItemEvent事件并在JavaScript控制器中执行操作handleAddItem。该handleAdditem方法保存记录到数据库中并添加记录到的物品价值提供商。 该addItemEvent事件类型的成分和有一个名为Camping_Item__c类型属性的项目。 campingListForm注册了一个类型为c的addItem事件：addItemEvent。 如果表单有效，campingListFormController JavaScript控制器将调用帮助程序的createItem方法。 campingListFormHelper JavaScript帮助程序使用要添加的项创建addItem事件，然后触发事件。然后，它使用类型为Camping_Item__c的空白sObjectType 重置newItem值提供程序。 相关代码如下： addItemEvent.evt 123&lt;aura:event type=\"APPLICATION\" description=\"Event template\" &gt; &lt;aura:attribute name=\"item\" type=\"Camping_Item__c\"/&gt;&lt;/aura:event&gt; 在主组件里面campingList.cmp，这里需要引用&lt;c:campingListForm &#x2F;&gt;,同时添加aura:handler接收来自campingListForm的event，同时触发handleAddItem函数处理。 123456789101112131415161718192021222324252627282930313233343536&lt;aura:component controller=\"CampingListController\" implements=\"force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId,force:lightningQuickAction\" access=\"global\" &gt; &lt;aura:handler name=\"init\" action=\"&#123;!c.doInit&#125;\" value=\"&#123;!this&#125;\"/&gt; &lt;aura:handler name=\"addItem\" event=\"c:addItemEvent\" action=\"&#123;!c.handleAddItem &#125;\"/&gt; &lt;aura:attribute name=\"items\" type=\"Camping_Item__c[]\"/&gt; &lt;ol&gt; &lt;li&gt;Bug Spray&lt;/li&gt; &lt;li&gt;Bear Repellant&lt;/li&gt; &lt;li&gt;Goat Food&lt;/li&gt; &lt;/ol&gt; &lt;!-- PAGE HEADER --&gt; &lt;c:campingHeader /&gt; &lt;lightning:layout &gt; &lt;lightning:layoutItem padding=\"around-small\" size=\"6\"&gt; &lt;c:campingListForm /&gt; &lt;/lightning:layoutItem&gt; &lt;/lightning:layout&gt; &lt;c:campingHeader /&gt; &lt;div class=\"slds-card slds-p-top--medium\"&gt; &lt;header class=\"slds-card__header\"&gt; &lt;h3 class=\"slds-text-heading--small\"&gt;Items&lt;/h3&gt; &lt;/header&gt; &lt;section class=\"slds-card__body\"&gt; &lt;div id=\"list\" class=\"row\"&gt; &lt;aura:iteration items=\"&#123;!v.items&#125;\" var=\"items\"&gt; &lt;c:campingListItem item=\"&#123;!item&#125;\"/&gt; &lt;/aura:iteration&gt; &lt;/div&gt; &lt;/section&gt; &lt;/div&gt; &lt;/aura:component&gt; 这里附上campingListController.js代码： 1234567891011121314151617181920212223242526272829303132333435363738(&#123; // Load expenses from Salesforce doInit: function(component, event, helper) &#123; // Create the action var action = component.get(\"c.getItems\"); // Add callback behavior for when response is received action.setCallback(this, function(response) &#123; var state = response.getState(); if (state === \"SUCCESS\") &#123; component.set(\"v.items\", response.getReturnValue()); &#125; else &#123; console.log(\"Failed with state: \" + state); &#125; &#125;); // Send action off to be executed $A.enqueueAction(action); &#125;, handleAddItem: function(component, event, helper) &#123; var newItem = event.getParam(\"item\"); var action = component.get(\"c.saveItem\"); action.setParams(&#123;\"item\": newItem&#125;); action.setCallback(this, function(response)&#123; var state = response.getState(); if (component.isValid() &amp;&amp; state === \"SUCCESS\") &#123; var items = component.get(\"v.items\"); items.push(item); component.set(\"v.items\",items); &#125; &#125;); $A.enqueueAction(action); &#125; &#125;) 在campingListForm.cmp中，我们注册一个Event，名字为addItem 123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;aura:component implements=\"force:appHostable,flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId\" access=\"global\" &gt; &lt;aura:attribute name=\"newItem\" type=\"Camping_Item__c\" default=\"&#123; 'sobjectType': 'Camping_Item__c', 'Name': '', 'Quantity__c': 0, 'Price__c': 0, 'Packed__c': false &#125;\"/&gt; &lt;aura:registerEvent name=\"addItem\" type=\"c:addItemEvent\"/&gt; &lt;lightning:layout &gt; &lt;lightning:layoutItem padding=\"around-small\" size=\"6\"&gt; &lt;div aria-labelledby=\"newcampaignform\"&gt; &lt;fieldset class=\"slds-box slds-theme--default slds-container--small\"&gt; &lt;legend id=\"newcampaignform\" class=\"slds-text-heading--small slds-p-vertical--medium\"&gt; Add Campaign List &lt;/legend&gt; &lt;form class=\"slds-form--stacked\"&gt; &lt;lightning:input aura:id=\"campaignform\" label=\"Campaign Item Name\" name=\"campaignitemname\" value=\"&#123;!v.newItem.Name&#125;\" required=\"true\"/&gt; &lt;lightning:input type=\"number\" aura:id=\"expenseform\" label=\"Quantity\" name=\"campaignitemprice\" min=\"1\" formatter=\"number\" step=\"0.1\" value=\"&#123;!v.newItem.Quantity__c&#125;\" messageWhenRangeUnderflow=\"Enter quantity that's at least 1.\"/&gt; &lt;lightning:input type=\"number\" aura:id=\"expenseform\" label=\"Price\" name=\"campaignitemprice\" min=\"0.1\" formatter=\"currency\" step=\"0.01\" value=\"&#123;!v.newItem.Price__c&#125;\" messageWhenRangeUnderflow=\"Enter an amount that's at least $0.10.\"/&gt; &lt;lightning:input type=\"checkbox\" aura:id=\"expenseform\" label=\"Packed?\" name=\"expreimbursed\" checked=\"&#123;!v.newItem.Packed__c&#125;\"/&gt; &lt;lightning:button label=\"Create Camping\" class=\"slds-m-top--medium\" variant=\"brand\" onclick=\"&#123;!c.clickCreateItem&#125;\"/&gt; &lt;/form&gt; &lt;/fieldset&gt; &lt;/div&gt; &lt;/lightning:layoutItem&gt; &lt;/lightning:layout&gt;&lt;/aura:component&gt; 当按钮lightning:button按下时候，触发clickCreateItem函数，在campingListFormController.js里面，同时会调用helper.createItem。 12345678910111213(&#123; clickCreateItem: function(component, event, helper) &#123; var validCamping = component.find('campingform').reduce(function (validSoFar, inputCmp) &#123; // Displays error messages for invalid fields inputCmp.showHelpMessageIfInvalid(); return validSoFar &amp;&amp; inputCmp.get('v.validity').valid; &#125;, true); if(validCamping)&#123; var addItm = event.getParam(\"v.newItem\"); helper.createItem(component, addItm); &#125; &#125;&#125;) 当campingListFormHelper.js中，触发event时候，会调用名字为addItem的注册event。 123456789101112(&#123; addItem : function(component, campaign) &#123; var createEvent = component.getEvent(\"addItem\"); createEvent.setParams(&#123; \"item\": campaign &#125;); createEvent.fire(); component.set(\"v.newItem\",&#123; 'sobjectType': 'Camping_Item__c', 'Name': '', 'Quantity__c': 0, 'Price__c': 0, 'Packed__c': false &#125;); &#125;&#125;) Discover Next Steps相关链接如下：https://trailhead.salesforce.com/content/learn/modules/lex_dev_lc_basics/lex_dev_lc_basics_next_steps 相关题目： What does SLDS stand for? A) Salesforce Leadership Does Surf B) System Limits Detection System C) Salesforce Lightning Design System D) sObject Loading Data System 答案：去官网看看https://www.lightningdesignsystem.com/，所以答案是B What are Lightning Events used for? A) Salesforce mini developer conferences B) Communicating between loosely coupled components C) Logging critical details during app runtime D) Scheduling sales calls in Lightning Experience 答案：Lightning Events主要用于连接component。所以答案是B 相关参考文献： Events | Lightning Aura Components Developer Guide | Salesforce Developers: https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/intro_events.htm What is the name of the open-source framework that Lightning Components is based on? A) AuraB) AngularC) jQueryD) WebObjects 答案：本文所有内容都是围绕Aura而展开的。所以答案是A。 In which language do you write Lightning Components action handlers? A) JavaB) VisualforceC) JavaScriptD) Objective-C 答案：Lightning Components action 主要是用JavaScript写的，所以答案是C。 就这样我们成功拿下Lightning Components Basics整个模块： 参考文献: Lightning Apps Developer Center: https://developer.salesforce.com/developer-centers/lightning-apps/","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Trailhead","slug":"Trailhead","permalink":"http://tonyrenhk.github.io/tags/Trailhead/"},{"name":"开发者II考试","slug":"开发者II考试","permalink":"http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Trailhead学习:解锁Lightning Experience Development","slug":"2018-12-21-Lightning-Experience-Development","date":"2018-12-21T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/12/21/2018-12-21-Lightning-Experience-Development/","link":"","permalink":"http://tonyrenhk.github.io/2018/12/21/2018-12-21-Lightning-Experience-Development/","excerpt":"【Trailhead学习】开发者2考试解锁之路：”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)之Lightning Experience Development 。","text":"【Trailhead学习】开发者2考试解锁之路：”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)之Lightning Experience Development 。 在之前的学习中，我们相继解锁了 Apex Specialist, Data Integration Specialist，现在开始解锁”Lightning组件框架专家”(Lightning Component Framework Specialist Superbadge)， 相关链接如下：https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_lcf 同时，这里，附上开发者2考试路线图，链接如下：https://trailhead.salesforce.com/content/learn/superbadges/superbadge_aap 下面我们讲述新的模块，Lightning Experience Development，这里会学习到新的UX对于Apex，Visualforce，API等的影响。相关链接如下https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview User Interface Development Considerations这一节 (User Interface Development Considerations)，章节链接如下https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_future 题目1. Which of the following statements is true about creating apps with Visualforce: A)Visualforce is designed primarily for page-centric web apps. B)Visualforce renders the page on the server. C)Visualforce will be fully supported by Salesforce for years to come. D)All of the above. 解析： Visualforce 至今都被Salesforce广泛支持。所以选择D。 题目2 Which of the following statements is NOT true about creating apps with Lightning components: A) Lightning components are designed primarily for app-centric web apps. B) Lightning components can be used everywhere Visualforce can be used. C) Lightning components render the page on the client. D) All of the above. 解析：关于利用Lightning components新建app不正确的是B，任何地方使用Lightning components，都可以用Visualforce，显然不对。 题目3 Which of the following is a poor use of Lightning Components: A) Developing an app for Salesforce1. B) Developing a highly interactive app with an innovative user interface. C) Developing widgets for use in Lightning App Builder. D) None of the above. All of these are good use cases for Lightning Components. 解析：哪一些是使用Lightning Components不好的例子，答案是D，没有不好的例子。如开发Salesforce1，或Lightning App Builder里面的widgets，都需要用到Lightning Components。 搞定！ Use Visualforce in Lightning Experience下面一节讲的是在Lightning中使用Visualforce(Use Visualforce in Lightning Experience），相关链接如下：https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_visualforce 就两道题目，很简单 题目一：Which of the following features of Visualforce do NOT work in Lightning Experience: A) Creating custom apps and tabs. B) Overriding standard actions with Visualforce pages. C) Using window.location in JavaScript code. D) Remote Objects. 解析：Lightning Experience 是一个全新的世界，由于无法直接访问’window ‘全局对象，所以答案是C。例如，Visualforce 覆盖标准操作在 Lightning Experience 和Salesforce Classic会有点不同，同时开发人员可以在Salesforce Classic、Lightning Experience 和移动设置不同的覆盖行为。具体而言，开发人员可以为Salesforce Classic中的大多数标准和所有自定义对象覆盖如下六种标准操作： 对象选项卡(Object tab） 对象列表(Object list) 数据视图Record view) 数据编辑(Record edit) 新建数据(Record create) 删除数据(Record delete) 在Lightning Experience中，前面两项被合并到一个页面：object home。 题目二 ：Which of the following is NOT true about the user interface and visual design in Lightning Experience: A) PDFs render with the Lightning Experience visual design. B) You can’t hide the Lightning Experience main navigation header or sidebar. C) The &lt; apex:inputField &gt; tag renders with the Salesforce Classic appearance. D) The standard Visualforce header and sidebar are hidden. 解析： 我们可以在Salesforce Classic，通过Visualforce pages生成PDF，根据官方说法，截止发稿时，还无法利用 Lightning Experience设计渲染PDF页面，所以答案是A。 成功拿到100分。 Use Lightning Components in Lightning Experience相关链接：https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_lightning_components 题目一：Which of the following statements about Lightning Components and Lightning Experience is true? A) Lightning Experience is something you use directly, Lightning Components are something you build apps with. B) Lightning Experience is (mostly) built with Lightning Components. C) Lightning Experience uses an app-centric development model using Lightning Components. D) All of the above. 解析：答案是D，Lightning Components 很多时候是用于Lightning Experience。 题目二：Which of the following is true of Lightning Components: A) Lightning Components can only be used in the Lightning Experience and not the Salesforce1 mobile app. B) Lightning Components can be used in Visualforce pages. C) Lightning Components are only optimized for the desktop experience. D)All of the above. 解析： Lightning Components 可以用于Visualforce pages,通过’$Lightning.use’可以实现。所以答案是B。 Salesforce Partners, Packaging, and AppExchange下一章讲到Salesforce Partners, Packaging, and AppExchange，相关链接为：https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_isv 题目一：Which of the following ISV features are available in Lightning Experience? A) Channel Order App. B) Trialforce. C) Usage Metrics Visualization app. D) Package creation. E) None of the above are available. 解析：package manager是可以在Lightning Experience里面使用的 D。这里值得注意的是，对于ISV，如下模块是支持Classic和Lightning Experience。 Environment Hub License Management App (LMA) Checkout Management App (CMA)然而如下模块就不支持，仅仅支持Classic： Trialforce Channel Order App (COA) Usage Metrics Visualization App 題目二：As an ISV, which of the following is true about AppExchange: A) Your apps undergo a review for Lightning Experience readiness. B) Your apps are available to all customers, whether they have enabled Lightning Experience or not. C) The ‘Lightning Ready’ certification lets AppExchange visitors know your app is verified for Lightning Experience. D) All of the above. 解析：作为ISV，你的APP是对所有用户，无论对方是不是使用Lightning，所以答案是D，以上所有。 在这里附上ISVforce Guide：https://developer.salesforce.com/docs/atlas.en-us.216.0.packagingGuide.meta/packagingGuide/packaging_intro.htm 搞定! Understand Changes to Other Development Tools下面一节讲述Understand Changes to Other Development Tools，相关链接为：https://trailhead.salesforce.com/content/learn/modules/lex_dev_overview/lex_dev_overview_other 题目一：Which of the following is true of Apex in the new Lightning Experience: A) You have to update the API version for all your Apex classes in order for them to work in Lightning Experience. B) Apex is not supported in the new Lightning Experience. C) Your Apex code and queries continue to function as before. D) All of the above 解析：Apex是支持Lightning Experience，而Lightning Experience是不需要更新所有Apex 类的版本。所以本题答案为C。 题目二：What should you look for when reviewing your installed packages before using them with Lightning Experience? A) A ‘Lightning Ready’ sash for the package on AppExchange. B) An error message saying the package isn’t ‘Lightning Ready’. C) A ‘Lightning Ready’ check mark on the Installed Packages page. D) Errors in the JavaScript console when using the package. 解析：如果你的组织是使用Lightning Experience。而当管理员在选择安装app时候，需要看这个app在AppExchange里面是否被标注为’Lightning Ready’ sash，所以本题答案为A。 就这样，整个’Lightning Experience Development’模块被我们解锁了~","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Lightning","slug":"Lightning","permalink":"http://tonyrenhk.github.io/tags/Lightning/"},{"name":"Trailhead","slug":"Trailhead","permalink":"http://tonyrenhk.github.io/tags/Trailhead/"},{"name":"开发者II考试","slug":"开发者II考试","permalink":"http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"Trailhead学习:Data Integration Specialist Superbadge","slug":"2018-12-05-Data-Integration-Specialist-Superbadge","date":"2018-12-05T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/12/05/2018-12-05-Data-Integration-Specialist-Superbadge/","link":"","permalink":"http://tonyrenhk.github.io/2018/12/05/2018-12-05-Data-Integration-Specialist-Superbadge/","excerpt":"Trailhead学习：Data Integration Specialist Superbadge","text":"Trailhead学习：Data Integration Specialist Superbadge 欲破解该Superbadge需要先破解Lightning Flow模块，相关链接如下： https://trailhead.salesforce.com/en/content/learn/superbadges/superbadge_integration 需安装如下’Data Integration Specialist Superbadge’ package： https://login.salesforce.com/packaging/installPackage.apexp?p0=04t41000001T3kx Configure outbound application and integration security题目要求如下： Install the unmanaged package from the prework if you haven’t already. Configure a named credential and remote site according to the specifications outlined in the business requirements. Enter the billing service credentials in the custom setting. 在设置(Setup)下-&gt;安全性控制 -&gt;远程站点设置, 远程站点名称设置为BillingService，远程站点 URL为：http://sb-integration-bs.herokuapp.com 在安全性控制中添加新的命名凭证: * 标签：ProjectService * 名称：ProjectService * URL：https://sb-integration-pms.herokuapp.com/projects * 身份类型：命名首要 * 验证协议：密码验证 * 用户名：pmsUser1 * 密码：pmsUser1 * 生成授权标题：打上勾√ 添加连接的应用程序：API 名称设置为ProjectService，系统会生成一个’客户键’和’消费者秘密’。然后在如下链接测试你的链接https://sb-integration-pms.herokuapp.com. 结果会在URL体现出来，同时,会得到一个Token，成功的URL会如下：https://sb-integration-pms.herokuapp.com/test?success=true 在Custom Setting添加一条记录ServiceCredentials，名字是BillingServiceCredential，username是bsUser1，Password是bsPass1。 Configure inbound integration security题目要求如下Configure the PMS Connected App according to the specifications outlined in the business requirements. Then register the connected app with the Org Registration Heroku app and test the connection. Enter the project service security token into the custom setting. 基于上面一题得到的Token，在Custom Setting中的ServiceTokens加一条名字为ProjectServiceToken的记录 Synchronize Salesforce opportunity data with Square Peg’s PMS external systemBuild a Process Builder process on the opportunity object to invoke an Apex REST callout to the external PMS as outlined in the requirements section.本题考查的是进程生成器(Process Builder)调用Apex类。 同时，需要在业务机会(Opportunity) Type字段加一个新的选项’New Project’ Apex 类如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657public class ProjectCalloutService &#123; //method to be invoked by ProcessBuilder apex @InvocableMethod public static void postOpportunityToPMS(List&lt;Id&gt; oppoIds)&#123; Opportunity opp = [SELECT Id,Name,Account.Name,CloseDate,Amount FROM Opportunity WHERE Id = :oppoIds[0]]; String serviceToken = ServiceTokens__c.getValues('ProjectServiceToken').Token__c; String jsonInput = '&#123;\\n' + ' \"opportunityId\" : \"'+opp.Id+'\",\\n'+ ' \"opportunityName\" : \"'+opp.Name+'\",\\n'+ ' \"accountName\" : \"'+opp.Account.Name+'\",\\n'+ ' \"closeDate\" : \"'+String.ValueOf(opp.CloseDate).mid(0,10)+'\",\\n'+ ' \"amount\" : \"'+opp.Amount+'\"\\n&#125;'; System.enqueueJob(new QueueablePMSCall(serviceToken, jsonInput, opp.Id)); &#125; class QueueablePMSCall implements System.Queueable, Database.AllowsCallouts&#123; private String serviceToken; private String jsonInput; private Id oppId; public QueueablePMSCall(String serviceToken, String jsonInput, Id oppId)&#123; this.serviceToken = serviceToken; this.jsonInput = jsonInput; this.oppId = oppId; &#125; public void execute(QueueableContext qc)&#123; postToPMS(serviceToken, jsonInput, oppId); &#125; &#125; @Future(callout=true) private static void postToPMS(String serviceToken, String jsonInput, Id oppoId)&#123; HTTPRequest req = new HTTPRequest(); req.setEndPoint('callout:ProjectService'); req.setMethod('POST'); req.setHeader('token',serviceToken); req.setHeader('Content-Type', 'application/json;charset=UTF-8'); req.setBody(jsonInput); HTTP http = new HTTP(); HTTPResponse res = http.send(req); Opportunity opp = new Opportunity(Id=oppoId); if(res.getStatusCode() == 201)&#123; opp.StageName = 'Submitted Project'; System.debug('Success: ' + res.getStatus()); &#125;else&#123; opp.StageName = 'Resubmit Project'; System.debug('Failure: ' + res.getStatusCode() + ' ' + res.getStatus()); &#125; update opp; &#125;&#125; 之后需要新建一个进程生成器(Process Builder) ，可以命名为Update Opportunity with Opportunity object selection. 总图为： 选择Opportunity，中间判断条件可以设置为：Opportunity Type with stage change 下面是用进程生成器(Process Builder)调用Apex类 Test outbound Apex REST callout logicBuild tests for your Apex outbound service logic using the included stubs (ProjectCalloutServiceMock and ProjectCalloutServiceMockFailure) and callout test class (ProjectCalloutServiceTest) in the package. You must have 90% test coverage to pass this challenge and assert values to prove that your logic is working as expected. 基于上一题写一个测试类，同时要求90%代码覆盖率。成功例子 1234567891011121314@isTestglobal class ProjectCalloutServiceMock implements HttpCalloutMock&#123; //Implement http mock callout here // Implement this interface method global HTTPResponse respond(HTTPRequest request)&#123; // Create a fake response HttpResponse response = new HttpResponse(); response.setHeader('Content-Type', 'application/json'); response.setStatus('OK'); response.setStatusCode(201); return response; &#125;&#125; 失败的例子 1234567891011121314@isTestglobal class ProjectCalloutServiceMockFailure implements HttpCalloutMock&#123; //Implement http mock callout here // Implement this interface method global HTTPResponse respond(HTTPRequest request)&#123; // Create a fake response HttpResponse response = new HttpResponse(); response.setHeader('Content-Type', 'application/json'); response.setStatus('Bad Response'); response.setStatusCode(500); return response; &#125;&#125; 最后写测试类，其中testSetupdata是新建测试数据。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162@isTestprivate class ProjectCalloutServiceTest &#123; //Implement mock callout tests here @testSetup static void testSetupdata()&#123; //create the opportunity record Opportunity opp1 = new Opportunity(); opp1.Name = 'Test Opp1'; opp1.Type = 'New Project'; opp1.Amount = 100; opp1.CloseDate = Date.today(); opp1.StageName = 'Submitted Project'; insert opp1; //create the opportunity record Opportunity opp2 = new Opportunity(); opp2.Name = 'Test Opp2'; opp2.Type = 'New Project'; opp2.Amount = 200; opp2.CloseDate = Date.today(); opp2.StageName = 'Resubmit Project'; insert opp2; //create the Custom Settings ServiceTokens__c servToken = new ServiceTokens__c(); servToken.Name = 'ProjectServiceToken'; servToken.Token__c = 'qwertyuiopnjhgft'; insert servToken; &#125; @isTest static void testSuccessMessage()&#123; Opportunity opp = [Select Id, Name FROM Opportunity WHERE Name = 'Test Opp1' Limit 1]; List&lt;Id&gt; lstOfOppIds = new List&lt;Id&gt;(); lstOfOppIds.add(opp.Id); // Set mock callout class Test.setMock(HttpCalloutMock.class, new ProjectCalloutServiceMock()); // This causes a fake response to be sent // from the class that implements HttpCalloutMock. Test.startTest(); ProjectCalloutService.postOpportunityToPMS(lstOfOppIds); Test.stopTest(); // Verify that the response received contains fake values opp = [select StageName from Opportunity where id =: opp.Id]; System.assertEquals('Submitted Project',opp.StageName); &#125; @isTest static void testFailureMessage()&#123; Opportunity opp = [Select Id, Name FROM Opportunity WHERE Name = 'Test Opp2' Limit 1]; List&lt;Id&gt; lstOfOppIds = new List&lt;Id&gt;(); lstOfOppIds.add(opp.Id); // Set mock callout class Test.setMock(HttpCalloutMock.class, new ProjectCalloutServiceMockFailure()); // This causes a fake response to be sent // from the class that implements HttpCalloutMock. Test.startTest(); ProjectCalloutService.postOpportunityToPMS(lstOfOppIds); Test.stopTest(); // Verify that the response received contains fake values opp = [select StageName from Opportunity where id =: opp.Id]; System.assertEquals('Resubmit Project',opp.StageName); &#125;&#125; Synchronize external PMS system project data with SalesforceUse the requirements above to implement an Apex REST service to process related project and opportunity data that comes in from the Square Peg external application. Before checking this section, run the service method in the ProjectRESTService class to confirm that it’s working as expected. 本题考查的是如何使得外部系统PMS 的数据和Salesforce保持一致。根据题目要求，需要写一个Apex REST服务类，用于接收外部系统Post过来的数据，获得的数据可以更新或者插入到Salesforce数据库中。写好之后的测试URL可以如下： https://YOUR_INSTANCE.salesforce.com/services/apexrest/project 123456789101112131415161718192021222324252627282930313233343536373839404142@RestResource(urlMapping = '/project/*')global with sharing class ProjectRESTService &#123; @HttpPost global static String postProjectData(String ProjectRef, String ProjectName, String OpportunityId, Date StartDate, Date EndDate, Double Amount, String Status)&#123; String retMsg = 'Error'; SavePoint sp1 = Database.setSavePoint(); try&#123; List&lt;Opportunity&gt; lstOfOpps = new List&lt;Opportunity&gt;(); if(OpportunityId != null &amp;&amp; OpportunityId.trim().length() &gt; 0)&#123; Opportunity opp = [SELECT Id, DeliveryInstallationStatus__c, Discount_Percent__c FROM Opportunity WHERE Id = :OpportunityId]; opp.DeliveryInstallationStatus__c = 'In progress'; lstOfOpps.add(opp); &#125; UPDATE lstOfOpps; List&lt;Project__c&gt; lstOfRrjts = new List&lt;Project__c&gt;(); Project__c prjt = new Project__c(); prjt.ProjectRef__c = ProjectRef; prjt.Name = ProjectName; prjt.Opportunity__c = OpportunityId; prjt.Start_Date__c = StartDate; prjt.End_Date__c = EndDate; prjt.Billable_Amount__c = Amount; prjt.Status__c = Status; lstOfRrjts.add(prjt); UPSERT lstOfRrjts; retMsg = 'OK'; &#125;catch(Exception ex)&#123; Database.rollback(sp1); retMsg = ex.getMessage(); &#125; return retMsg; &#125;&#125; Test inbound Apex REST service logicBuild tests for your Apex REST service logic using the stub for the test class (ProjectRESTServiceTest) in the package. You must have 90% test coverage to pass this challenge and assert values to prove that your logic is working as expected. 写好了Apex 类，现在需要写一个测试类： 1234567891011121314151617181920212223242526272829303132@isTestprivate class ProjectRESTServiceTest &#123; @testSetup static void loadServiceData()&#123; Opportunity opp = new Opportunity(); opp.Name = 'Test Opportunity'; opp.DeliveryInstallationStatus__c = 'In progress'; opp.CloseDate = (Date.today()).addDays(20); opp.StageName = 'Submitted Project'; INSERT opp; Project__c prjt = new Project__c(); prjt.ProjectRef__c = 'ProjectRef'; prjt.Name = 'ProjectName'; prjt.Opportunity__c = opp.Id; prjt.Start_Date__c = Date.today(); prjt.End_Date__c = (Date.today()).addDays(10); prjt.Billable_Amount__c = 1000; prjt.Status__c = 'Running'; INSERT prjt; &#125; @isTest static void testProjectRESTService()&#123; Project__c prjt = [SELECT Id, ProjectRef__c, Name, Opportunity__c, Start_Date__c, End_Date__c, Billable_Amount__c, Status__c FROM Project__c LIMIT 1]; Test.startTest(); Opportunity opp = [SELECT Id FROM Opportunity LIMIT 1]; System.assertEquals(1,[SELECT count() FROM Opportunity]); String returnMessage = ProjectRESTService.postProjectData('ProjectRef', 'ProjectName', String.valueOf(opp.Id), Date.today(), Date.today(), 1000, 'Running'); Test.stopTest(); &#125;&#125; Synchronize Salesforce project data with Square Peg’s external billing systemPerform the necessary steps, as outlined in the requirements, to make an outbound authenticated Apex callout to Square Peg’s external billing system’s SOAP service. To pass this challenge, delete the unused Async process class that is autogenerated from the WSDL AsyncBillingServiceProxy. 下载XML： http://sb-integration-bs.herokuapp.com/ws/invoices.wsdl 在Apex Class 里，点击’ Generate from WSDL’,并生成一个名为BillingServiceProxy 的proxy类。 相关参考链接如下：https://help.salesforce.com/articleView?id=code_wsdl_to_package.htm&amp;type=5 同时题目要求ProjectTrigger 调用 ‘BillingCalloutService.callBillingService()并且传入新旧记录的参数。 1234567891011121314151617181920212223242526public class BillingCalloutService &#123; @future(callout = true) public static void callBillingService(String projectRef, Decimal billingAmount)&#123; ServiceCredentials__c srvcCrd = ServiceCredentials__c.getValues('BillingServiceCredential'); BillingServiceProxy.project projectInst = new BillingServiceProxy.project(); projectInst.username = srvcCrd.Username__c; projectInst.password = srvcCrd.Password__c; projectInst.billAmount = billingAmount; BillingServiceProxy.InvoicesPortSoap11 invPortSoapInst = new BillingServiceProxy.InvoicesPortSoap11(); String response = invPortSoapInst.billProject(projectInst); List&lt;Project__c&gt; lstOfProjects = new List&lt;Project__c&gt;(); if(response != null &amp;&amp; response.equalsIgnoreCase('OK'))&#123; List&lt;Project__c&gt; lstOfPrjts = [SELECT Status__c FROM Project__c WHERE ProjectRef__c = :projectRef]; for(Project__c prjt : lstOfPrjts)&#123; prjt.Status__c = 'Billed'; lstOfProjects.add(prjt); &#125; UPDATE lstOfProjects; &#125; &#125;&#125; Trigger这样写： 123456789trigger ProjectTrigger on Project__c (after update) &#123; if(Trigger.isAfter &amp;&amp; Trigger.isUpdate)&#123; for(Project__c prjt : Trigger.new)&#123; if(prjt.Status__c != null &amp;&amp; prjt.Status__c.equals('Billable'))&#123; BillingCalloutService.callBillingService(prjt.ProjectRef__c, prjt.Billable_Amount__c); &#125; &#125; &#125;&#125; Test outbound Apex SOAP callout logicBuild tests for your SOAP callout and assert proper behavior using the included stubs (BillingCalloutServiceMock and BillingCalloutServiceMockFailure) and callout test class (BillingCalloutServiceTest) in the package. You must have 90% test coverage to pass this challenge and assert values to prove that your logic is working as expected. 12345678@isTestglobal class BillingCalloutServiceMock implements WebServiceMock &#123; global void doInvoke(Object stub,Object request,Map&lt;String, Object&gt; response,String endpoint,String soapAction,String requestName,String responseNS, String responseName,String responseType)&#123; BillingServiceProxy.billProjectResponse_element response_x = new BillingServiceProxy.billProjectResponse_element(); response_x.status = 'OK'; response.put('response_x', response_x); &#125;&#125; 1234567global class BillingCalloutServiceMockFailure implements WebServiceMock &#123; global void doInvoke(Object stub,Object request,Map&lt;String, Object&gt; response,String endpoint,String soapAction, String requestName, String responseNS,String responseName,String responseType) &#123; BillingServiceProxy.billProjectResponse_element response_x = new BillingServiceProxy.billProjectResponse_element(); response_x.status = 'ERROR'; response.put('response_x', response_x); &#125;&#125; 测试类： 123456789101112131415161718192021222324252627282930313233343536373839404142434445@isTestprivate class BillingCalloutServiceTest &#123; @testSetup static void loadData()&#123; Opportunity oppo = new Opportunity(); oppo.Name = 'TestOpp1'; oppo.CloseDate = Date.today(); oppo.StageName = 'Prospecting'; insert oppo; Project__c proj = new Project__c(); proj.Name = 'TestProj1'; proj.Billable_Amount__c = 1000; proj.ProjectRef__c = 'TestRef1'; proj.Status__c = 'Running'; proj.Opportunity__c = oppo.Id; insert proj; ServiceCredentials__c servCred = new ServiceCredentials__c(); servCred.Name = 'BillingServiceCredential'; servCred.Username__c = 'usr1'; servCred.Password__c = 'pwd1'; insert servCred; &#125; @isTest static void testCalloutSuccess()&#123; Test.setMock(WebServiceMock.class, new BillingCalloutServiceMock()); List&lt;Project__c&gt; prjt = [SELECT Status__C FROM Project__c WHERE ProjectRef__c = 'TestRef1']; System.assertEquals(1, prjt.size()); Test.startTest(); prjt[0].Status__c = 'Billable'; update prjt; Test.stopTest(); &#125; @isTest static void testCalloutFailure()&#123; Test.setMock(WebServiceMock.class, new BillingCalloutServiceMockFailure()); List&lt;Project__c&gt; prjt = [SELECT Status__C FROM Project__c WHERE ProjectRef__c = 'TestRef1']; System.assertEquals(1, prjt.size()); Test.startTest(); prjt[0].Status__c = 'Running'; update prjt; Test.stopTest(); &#125;&#125; Synchronize external billing data with Salesforce in real timeConfigure Salesforce Connect to integrate with Square Peg’s external billing system to expose invoice information as children of projects as outlined in the requirements. 根据题目要求，需要设置一个external data source的连接。路径为：setup–&gt;external data source 然后输入如下信息： External Data Source: BillingServiceName: BillingServiceType: Salesforce Connect OData 2.0URL: https://sb-integration-is.herokuapp.com/odataIdentity Type: AnonymousAuthentication Protocol:No Authentication 同时需要新建一个external对象切名字为 “invoices”。 就这样，我们获得了Data Integration Specialist，一次性得到了6500分。 Reference Calega&#x2F;Data-Integration-Specialist-Superbadge: Data integration specialist superbadge solution.: https://github.com/Calega/Data-Integration-Specialist-Superbadge Salesforce Tips and Tricks for Developer: http://sfdccodepractices.blogspot.com/","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Trailhead","slug":"Trailhead","permalink":"http://tonyrenhk.github.io/tags/Trailhead/"},{"name":"开发者II考试","slug":"开发者II考试","permalink":"http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"},{"name":"Superbadge","slug":"Superbadge","permalink":"http://tonyrenhk.github.io/tags/Superbadge/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"hexo-theme-doc主题实现中文搜索","slug":"2018-11-27-hexo-theme-doc-SupportCN","date":"2018-11-27T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/11/27/2018-11-27-hexo-theme-doc-SupportCN/","link":"","permalink":"http://tonyrenhk.github.io/2018/11/27/2018-11-27-hexo-theme-doc-SupportCN/","excerpt":"由于 hexo-theme-doc主题无法实现中文搜索，更新build json 有关代码，实现中文搜索功能。","text":"由于 hexo-theme-doc主题无法实现中文搜索，更新build json 有关代码，实现中文搜索功能。 问题如果你找到这篇文章，说明你已经在使用hexo-theme-doc，并且已经知道hexo是什么和hexo-theme-doc怎么安装了。 hexo-theme-doc是一个很好的帮助文档Theme，页面简洁，可以参考https://github.com/zalando-incubator/hexo-theme-doc 由于项目需要建立帮助文档，所以选择了hexo-theme-doc，但是发现在中文界面下无法使用搜索功能。 在Github向他们提出了有关问题，因为是 lunr.js出了问题，他们好像也没办法，https://github.com/zalando-incubator/hexo-theme-doc/issues/143 解决本次修改的lunr.js的版本是2.1.0，不知道以后会不会支持中文，同时hexo-theme-doc 的版本是1.0.0-rc.1。 hexo-theme-doc搜索的原理是通过lunr.js生成一个lunr.json文件，把hexo post的内容全部变成Json格式，然后检索时候，就在这个Json文件里面寻找。 现在问题就出在这个lunr.json，如果你在博客里面输入中文，那么在生成静态文件时，打开lunr.json文件会发现里面的Json的Body是一大堆乱码。由于这一些乱码，在之后的搜索功能就自然找不到需要的关键字或者文章。 首先要解决build json出来的时候乱码问题，在lib&#x2F;nodejs&#x2F;search&#x2F;build.js下,112行，直接comment掉有关代码 123$(&#39;h1,h2&#39;).each(function() &#123; 。。。&#125;); 这样生成的Json文件的中文字就会正常显示了，相关改动可以参考如下：https://github.com/TonyRenHK/hexo-theme-doc/commit/c543d21a3dbbd79000f99babc98eba6c2fd029e5 由于修改了相关Json文件，所以在生成的search 模块也需要进行相应的修改。这里修改就可以根据实际需要进行修改。修改的文件在 lib&#x2F;browser&#x2F;search&#x2F;components.jsx下。其中SearchForm就是需要修改的search模块。这里把页面也直接翻译成中文页面： 1234567891011function SearchResultsTitle(&#123; results, query &#125;) &#123; return ( &lt;div&gt; &lt;h1 className=\"doc-search-results__title\"&gt; 搜索 &lt;span className=\"doc-search-results__title__query\"&gt;\"&#123;query&#125;\"&lt;/span&gt;，&#123; results.length ? results.length+'个' : '没有' &#125; 结果 ： &lt;/h1&gt; &#123; !results.length ? &lt;p&gt;系统未能搜索 \"&#123;query&#125;\"到结果. &lt;strong&gt;试试其他关键字？&lt;/strong&gt;&lt;/p&gt; : null &#125; &lt;/div&gt; );&#125; 同时值得注意的是，搜索检索出来的是整个博客文章body，有时候，需要裁剪有关文章，比如只需要显示先后100个字。这里可以参考如下的cut budy 方法。如下方法仅供参考。 1234567891011121314151617181920212223function generateBody(body, query) &#123; var indexNumber = body.indexOf(query); var bodyLength = body.length; var returnBody = ''; var frontCut = 10; var bodyCut = 100; if (indexNumber &lt; frontCut &amp;&amp; bodyLength &gt; bodyCut) &#123; returnBody = body.substring(0, bodyCut) + '。。。'; &#125; else if (indexNumber &lt; frontCut &amp;&amp; bodyLength &lt; bodyCut) &#123; returnBody = body.substring(0, bodyLength); &#125; else if (indexNumber &gt; frontCut &amp;&amp; bodyLength &gt; (bodyCut + indexNumber)) &#123; returnBody = '。。。' + body.substring(indexNumber - frontCut, bodyCut + indexNumber) + '。。。'; &#125; else if (indexNumber &gt; frontCut &amp;&amp; bodyLength &lt; (bodyCut + indexNumber)) &#123; returnBody = '。。。' + body.substring(indexNumber - frontCut, bodyLength); &#125; //add highlight returnBody = returnBody.replace(new RegExp(query, 'g'), '&lt;span style=\"font-weight: bold;\"&gt;' + query + '&lt;/span&gt;'); return returnBody;&#125; 可以参考最后修改版本的search components： https://github.com/TonyRenHK/hexo-theme-doc/blob/6a11a284a6fb136252744260dd1fdb511e1773c2/lib/browser/search/components.jsx 修改完成之后需要利用Webpack 和 node-sass 进行编译 1$ npm run compile 而编译生成的文件在source&#x2F;script&#x2F;doc.js 。 代码有关代码如下： https://github.com/TonyRenHK/hexo-theme-doc 当然，实现中文搜索的方法不唯一，欢迎留言讨论。如上方法仅供参考。 参考文献 olivernn&#x2F;lunr.js: A bit like Solr, but much smaller and not as bright : https://github.com/olivernn/lunr.js does it support Chinese? · Issue #173 · olivernn&#x2F;lunr.js : https://github.com/olivernn/lunr.js/issues/173 lunr-languages&#x2F;lunr.ja.js at master · MihaiValentin&#x2F;lunr-languages : https://github.com/MihaiValentin/lunr-languages/blob/master/lunr.ja.js Lunr: A bit like Solr, but much smaller and not as bright : https://lunrjs.com/ 为 lunr.js 添加中文支持 | 阿阿燃 : http://linfuyan.com/add-chinese-support-to-lunrjs/ linfuyan&#x2F;lunr.js: 添加中文支持的 lunr.js。无分词版本 un-participle 分支，分词版本 participle 分支 : https://github.com/linfuyan/lunr.js nandy007&#x2F;lunr.js: 支持chinese中文搜索的lunr.js : https://github.com/nandy007/lunr.js codepiano&#x2F;lunr.js: support Chinese. 添加中文支持，使用一个nodejs库来分词，在前端使用时需要先dump索引文件，在前端引用 : https://github.com/codepiano/lunr.js lunr-languages&#x2F;lunr.ja.js at master · MihaiValentin&#x2F;lunr-languages : https://github.com/MihaiValentin/lunr-languages/blob/master/lunr.ja.js","categories":[{"name":"hexo","slug":"hexo","permalink":"http://tonyrenhk.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://tonyrenhk.github.io/tags/hexo/"},{"name":"hexo-theme-doc","slug":"hexo-theme-doc","permalink":"http://tonyrenhk.github.io/tags/hexo-theme-doc/"}],"keywords":[{"name":"hexo","slug":"hexo","permalink":"http://tonyrenhk.github.io/categories/hexo/"}]},{"title":"Trailhead学习:Lightning Flow","slug":"2018-11-26-Lightning-Flow","date":"2018-11-26T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/11/26/2018-11-26-Lightning-Flow/","link":"","permalink":"http://tonyrenhk.github.io/2018/11/26/2018-11-26-Lightning-Flow/","excerpt":"Trailhead学习：Data Integration Specialist Superbadge中的Lightning Flow章节。","text":"Trailhead学习：Data Integration Specialist Superbadge中的Lightning Flow章节。 Choose the Right Automation Tool这里解析Data Integration Specialist Superbadge中的Lightning Flow章节的’选择正确的自动化工具’(Choose the Right Automation Tool)，相关链接如下： https://trailhead.salesforce.com/content/learn/modules/business_process_automation/process_whichtool 学习Lightning Flow和Cloud Flow Designer，还有Process Builder有什么区别呢？ Lightning Flow 是产品的名字 Process Builder 和Cloud Flow Designer 是工具的名字 管理员可以用Process Builder制作Process; 可以用Cloud Flow Designer 制作flows. 利用Process Builder 和Cloud Flow Designer，Lightning Flow可以让你实现如下功能： 使用一个页面创建指导教程或向导。 设置自动化任务(tasks)和流程(process)。使用Process Builder或Cloud Flow Designer可以声明业务流程配置逻辑和操作。 如果需要，可以构建自定义Apex代码以实现相关功能。 连接外部系统 为页面和应用添加自动化功能。 可以不断重用之前所见的Process Builder 和Cloud Flow Designer。在Process Builder中，创建一个可调用的流程(invocable process)，以便在其他业务流程中重用该流程的逻辑或操作。在Cloud Flow Designer中，任何flow都可以用作子flow。 题目题目如下： Which tools are included with the Lightning Flow product? A:Lightning Experience and Cloud Flow Designer B:Lightning App Builder and Process Builder C:Process Builder and Cloud Flow Designer D:Process Builder, Cloud Flow Designer, and Approvals 解析：题目问的是Lightning Flow产品包含哪些工具？答案是C。 Which declarative tool would you use for the following use case? Guide customers through the process of troubleshooting issues with your product. A) Process Builder B)Cloud Flow Designer C)Approvals D)Apex 解析：哪一个工具可以指导客户完成产品问题排查过程。根据上文功能的第一点，答案是B Which declarative tool would you use for the following use case? When an opportunity’s discount is higher than 40%, notify the CEO via email and request sign-off. Provide a way for the CEO to leave comments. A) Process Builder B)Cloud Flow Designer C)Approvals D)Apex 解析：如果一个opportunity的折扣是高于40%，需要邮件通知CEO，并且CEO留下意见，很显然，这是通过审批流程实现。所以答案是答案是C 4)Which declarative tool would you use for the following use case? When the Annual Revenue field exceeds $500,000 on an account, automatically update the Customer Priority field to High. A) Process Builder B)Cloud Flow Designer C)Approvals D)Apex 解析：当客户的年度收入(Annual Revenue)字段超过500,000美元时，系统会知道将“客户优先级”更新为“高”。根据上文的功能2，可以通过Process Builder可以实现这样逻辑。答案是A。之后的文章会通过实例详细学习如何构建Process Builder。 参考答案链接在此，关于Lightning Flow的答题卡，有需要的话可以参考： https://quizlet.com/298965518/lightning-flow-flash-cards/ Automate Simple Business Processes with Process Builder这里解析Data Integration Specialist Superbadge中的Lightning Flow章节的’Process Builder的简单业务逻辑’(Automate Simple Business Processes with Process Builder)，相关链接如下 https://trailhead.salesforce.com/content/learn/modules/business_process_automation/process_builder 学习Process Builder是一个点击式工具，可让您轻松自动化if &#x2F; then业务流程，并在构建时查看流程的图形表示。 **触发器(trigger)**识别什么时候进程(process)可以运行。 对于记录更改过程，触发器决定哪个对象以及下面什么情况，该进程(process)要监听相关数据变动： 只有当数据是新建的时候 任何时候数据被新建或者更新。 条件(Criteria):决定是否执行该操作。在此条件，管理员可以设置如下： 设置过滤条件。 输入自定义公式(formula)。 与验证规则(validation rules)一样，公式必须解析为true或false。 选择退出标准并始终执行相关操作。 ** 操作(Action) **,开发者可以实现如下操作(不完全举例)： 新建数据 更新数据或者其他有关数据 提交审批 发邮件。 *发 Chatter feed. 同时，系统设置了三种Process Types，Process Builder可以自动化几种业务流程。 其主要区别在于生命时候触发触发器(trigger)。 1）Record Change，数据改变 2）Invocable，调用其他Process Builder 3）Platform Event ，平台事件，收到平台事件消息 其中，Lightning Process Builder 相关帮助文档可以参考如下： https://help.salesforce.com/articleView?id=process_overview.htm&amp;type=5 题目原题题目如下： Keep contact addresses in sync with their account’s address You’ve been given a requirement to keep contact addresses in sync with the accounts they belong to. Use Process Builder to create a process on the Account object that updates child Contact addresses when an account’s address is updated. Challenge Requirements: The process can have any name The process must have an Update Records action that updates Contact mailing address fields (Street, City, State, Postal Code, Country) when the parent Account shipping address field values are updated The process must be active 解析题目要求联系人的地址时刻与客户的地址保持一致。具体来说就是当客户的shipping address被更新时候，联系人的mailing address相关字段如Street, City, State, Postal Code, Country)也要被一致更新。 这里我们新建一个Process Builder，名字可以为任意名字。 然后设置如下几步流程， 1）选择Account 无论是被更新还是新建时候都执行该流程2）系统判定Account是否被新建。3）如果是新建的Account，则新建一个Contact，同时设置相关字段值，令Contact mailing address相关字段等于shipping address相关字段。4）判断Account是否被update，注意条件选择OR5）最后，如果Account是更新的话，会同步更新Contact相关字段最后记得要激活该Process Builder。 流(Flow)本章的主题为Guide Users Through Your Business Processes with Cloud Flow Designer，主要学习流(Flow)的制作方法。 相关链接为：https://trailhead.salesforce.com/content/learn/modules/business_process_automation/flow 题目如下： Guide users through creating a leadBuild a flow that creates a lead with user-entered information and uploads a related file for the lead. Then add the flow to a Home page. 具体要求如下：Challenge Requirements: Create a flow: Name: New Lead Type: Screen Flow In the flow, add a screen with these required screen fields. Last Name Company Name In the flow, create a lead record. Use the screen fields to set the lead’s Last Name and Company. Store the lead’s ID in a Text variable called leadId. In the flow, add another screen with a Lightning component screen field. Name the field Upload_File Choose the forceContent:fileUpload Lightning component. *Use the leadId variable to set the component’s Related Record ID attribute. Activate the New Lead flow. Create a new Lightning page: Type: Home page Label: Process Automation Home In Process Automation Home, add a Flow component that references the New Lead flow. Activate the page and set it as the default Home page. 题目解析：题目要求开发者建一个流(Flow),并且输入名字和公司名字，同时实现新建一条Lead的数据。同时实现上传文档的功能。而相关上传的文档是储存于Lead的附件。最后，用户可以在Home 的页面使用流(Flow)。 首先，在流(Flow)里面先新建一个screen。 可以输入名字为screen。 同时，加上需要用户输入的两个field：’Last Name’ 和’Company Name’: 新建’Record Create’的模块。 这里需要新建另外一个变量为’leadId’,是生成新的Lead的时候的Id。也就是下一步需要上传附件时候所对应的leadId。 再填加新的上传附件的lightning component。 设置上传附件的lightning component的变量。 同时，需要设置整个流(Flow)的开始点，点击screen的右上角的绿色按钮。 整个流(Flow)份三个模块如下： 最后保存整个流(Flow)。 保存之后需要激活： 之后，需要在Home 的页面加上该流(Flow)。 路径： SETUP–&gt; Lightning App Builder–&gt;New 选择 ‘Home Page’ 点击’Next’ Label 打上’Process Automation Home’ 点击’Finish’ 在左边选择’Flow’拖至home页面， 就这样，解锁了： Combine the Power of Process Builder and Cloud Flow Designer接下来的主题是’Combine the Power of Process Builder and Cloud Flow Designer’,讲的是如何将进程生成器(Process Builder)和流(Flow)紧密结合起来。 链接如下: https://trailhead.salesforce.com/content/learn/modules/business_process_automation/business_process_automation_combined 进程生成器(Process Builder)不能解决所有的自动化流程的问题。 发布到社区 提交审批 删除数据 新建一系列数据，并使之相互关联 实施复杂的业务逻辑 管理员或者开发者不必在另一个工具中重建整个业务逻辑。 在流(Flow)中配置更复杂的功能，然后向进程生成器(Process Builder)添加流(Flow)操作。 如果流(Flow)也无法满足您的实际业务需求，您或许可以要求有关开发人员可以编写Apex来执行此操作。 同时通过您的流(Flow)来添加Apex操作。 假如，现在有一个需求是需求是：更新closed won的业务机会(opportunity)。由于closed won的业务机会(opportunity)已经完结，需要复制现有的业务机会(opportunity)。 那么该如何实现呢？ 开发人员可以通过进程生成器(Process Builder)复制一个现在已经处于closed won阶段的业务机会(opportunity)，但是如果想复制产品(products)并且将其与新的业务机会(opportunity)产生连接。 在进程生成器(Process Builder)中，我们不能获取新建数据的ID，并用于其他用户。但是我们可以在流(Flow)中应用。对于上述的需求，开发人员可以新建一个流(Flow)，复制业务机会(opportunity)和其对应的产品(products)。同时新建一个进程生成器(Process Builder)当业务机会(opportunity)时处于closed won阶段，自动调用该流(Flow)。 对于流(Flow)的步骤可以如下： 复制业务机会(opportunity) 复制其对应的产品(products) 连接新建的产品(products)和新建的业务机会(opportunity) 下面来做题目。题目如下： 题目1. An sObject variable can store A）A single value B）A set of field values for a single record C）Multiple values of the same data type D）A set of field values for multiple records that have the same object 解析： 问题是一个sObject可以储存什么。B 题目2. For which use case is it appropriate to combine a process and a flow? A）Post to an internal Chatter group. B）Clone a record and its children. C）Delete a related record. D）B and C 解析：什么情况需要结合进程生成器(Process Builder)和流(Flow)操作，根据上面的案例，需要复制master-detail的数据，需要用到答案是D。 *题目3.*Inside a loop, you should avoid: A）Executing actions, like creating or updating records. B）Assigning new values to variables. C）Displaying data to the user. D）esting another loop. 解析：在一个循环里面，开发者需要避免的是A执行新建或者更新数据的操作。切记，除非开发人员已经确认该循环只执行有限数量次数，任何DML操作都得在循环外面执行。 就这样解锁了。 Customize How Records Get Approved with Approvals本章节讲述的是批准过程(Approval Process)。相关链接如下： https://trailhead.salesforce.com/en/content/learn/modules/business_process_automation/approvals 挑战如下： Make sure that prospect amounts are approved before they’re converted to customers Due to local regulation, new customers must be approved by the legal team. When a user creates an account that has a type of Prospect, they manually submit it for approval by clicking Submit for Approval on the account. The record is evaluated only if its type is Prospect and there are more than 500 employees. When the account enters the approval process, Type gets set to Pending and the record is locked. If approved, Type gets set to Customer and the record is unlocked. If not approved, Type gets set back to Prospect and the record is unlocked. Before You StartVerify that the Account object’s Type field has the following picklist values: Prospect, Customer, Pending. Challenge Requirements:‘ Use the Jump Start Wizard to create a new approval process for the Account object The approval process name must be Approve New Account Pick any email template for approval assignment email template For Entry Criteria, use the following criteria. Account: Type equals Prospect Account: Employees greater than 500 For Approver, choose Automatically assign to approver(s) and assign yourself as the approver Click View Approval Process Detail Page and finish off the remaining requirements. In the Initial Submission section, add a Field Update action that updates the Account: Type field to Pending. The name of the action must be Account Type To Pending. In the Final Approval Actions, add a Field Update action that updates the Account: Type field to Customer. The name of the action must be Account Type To Customer. In the Final Approval Actions section, edit the Record Lock action to unlock the record In the Final Rejection Actions section, add a Field Update action that updates the Account: Type field to Prospect. The name of the action must be Account Type To Prospect Activate the approval process 题目解析 题目要求开发者在客户(Account)对象下新建一个批准过程(Approval Process)，由于法律的需要，在成为真正客户前需要提交法务部门审批，当审批通过后，该客户(Account)会真正成为客户。 开始前需要确认Account 对象中的Type字段需要有Prospect, Customer, Pending这个三个选项，这三个状态在批准过程(Approval Process)会用到。 在SETUP里面输入Approval Processes，然后找到对应到的Acount对象。选择Jump Start Wizard新建一个批准过程(Approval Process)。其中，名字必须设置为Approve New Account。项目条件可以设置为(客户: 类型等于Prospect) 和 (客户: 员工大于500)。 在“初始提交操作”中，需要添加新的字段更新，将客户: 类型更新为Pending状态。 在“最终批准操作”中，需要添加新的字段更新，将客户: 类型更新为Customer状态，同时在‘记录锁定’中选择“取消锁定可以进行编辑”。 在“最终拒绝操作”中，需要添加新的字段更新，将客户: 类型更新为原有的状态Prospect。 最终流程如下： 批准分配电子邮件模板可以任意选择一个。批准人可以设置为自己。 然后点击“启用”按钮，就这样整个批准过程就激活了。然后，我们就这样解锁了Lightning Flow模块： 参考相关参考链接： https://salesforce.stackexchange.com/questions/134054/process-builder-create-a-child-contact-and-keep-it-in-sync-with-parent-account https://technologyflows.com/2015/03/01/process-builder-update-contact-address-from-account/ https://www.youtube.com/watch?v=EhnuJ32Oq6o https://www.youtube.com/watch?v=zBFPcFZ1zSQ https://www.youtube.com/watch?v=sjOWbErHvtY","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Lightning","slug":"Lightning","permalink":"http://tonyrenhk.github.io/tags/Lightning/"},{"name":"Trailhead","slug":"Trailhead","permalink":"http://tonyrenhk.github.io/tags/Trailhead/"},{"name":"开发者II考试","slug":"开发者II考试","permalink":"http://tonyrenhk.github.io/tags/%E5%BC%80%E5%8F%91%E8%80%85II%E8%80%83%E8%AF%95/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"全民K歌小外挂：自动评论插件","slug":"2018-11-25-WesingPlugins","date":"2018-11-25T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/11/25/2018-11-25-WesingPlugins/","link":"","permalink":"http://tonyrenhk.github.io/2018/11/25/2018-11-25-WesingPlugins/","excerpt":"全民K歌自动评论插件实现自动刷分，自动升级。再也不用手动刷评论了。","text":"全民K歌自动评论插件实现自动刷分，自动升级。再也不用手动刷评论了。 开始全民K歌每评论一次，可以让对方积分分数增加，由于人手手动评论过于费事，所以用了Python自动评论实现自动刷分。这里需要在PC端安装Python和全民K歌桌面版。同时安装pyautogui库。 导入函数导入函数 12345import pyautogui, sys import time from random import randint 设置评论内容1234567891011CommentList = ['Good!!!', 'Nice', 'Wonderful！！！','[em]e7150[/em][em]e7150[/em][em]e7150[/em]', 'Name[em]e179[/em][em]e179[/em][em]e179[/em][em]e179[/em]', '[em]e163[/em][em]e163[/em][em]e163[/em]', '[em]e7054[/em][em]e7054[/em][em]e7054[/em][em]e7054[/em]', '[em]e7038[/em][em]e7038[/em][em]e7038[/em]！！！', 'Good!!!Wonderful!', '[em]e142[/em]！！[em]e142[/em]！'] 刷评论设置循环一千次刷评论。注意这里moveTo是鼠标在屏幕中的位置，可以调整。 1234567for num in range(1,1000): pyautogui.moveTo( 1200, 340, 2) pyautogui.click() pyautogui.typewrite(CommentList[randint(0, 9)]) pyautogui.press('enter') time.sleep(3) 由于全民K歌不能不间断一直评论，所以加了睡眠3秒的等待时间，系统会等3秒之后继续评论。就这样，我们轻轻松松把全民K歌等级推上了17级。 同样原理，可以实现各种刷评论功能。本方法只用于学习用途。","categories":[{"name":"Python","slug":"Python","permalink":"http://tonyrenhk.github.io/categories/Python/"}],"tags":[{"name":"自动","slug":"自动","permalink":"http://tonyrenhk.github.io/tags/%E8%87%AA%E5%8A%A8/"},{"name":"Python","slug":"Python","permalink":"http://tonyrenhk.github.io/tags/Python/"}],"keywords":[{"name":"Python","slug":"Python","permalink":"http://tonyrenhk.github.io/categories/Python/"}]},{"title":"Google App Script 学习","slug":"2018-11-24-Google-App-Script-Note","date":"2018-11-24T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/11/24/2018-11-24-Google-App-Script-Note/","link":"","permalink":"http://tonyrenhk.github.io/2018/11/24/2018-11-24-Google-App-Script-Note/","excerpt":"Google App Script 是谷歌开发的基于JS的脚本语言，可以广泛应用于Gmail、Maps、Drive、Calendar、Forms等一系列插件中。","text":"Google App Script 是谷歌开发的基于JS的脚本语言，可以广泛应用于Gmail、Maps、Drive、Calendar、Forms等一系列插件中。 如下是在Google App Script开发中的一些总结。 找文件在Google Drive 内，基于文件名需要相关文件，并且取得有关Id。 12345678function GetFileId()&#123;var files = DriveApp.searchFiles(' title contains \"LoginNumber\" '); while (files.hasNext()) &#123; var spreadsheet = SpreadsheetApp.open(files.next()); Logger.log('Found:'+spreadsheet.getId()); &#125;&#125; Spreadsheet获得spreadsheet1var spreadsheet = SpreadsheetApp.openById(\"YourId\"); 拿到sheet的列表方法： 1var sheetList = spreadsheet.getSheets(); 插入新的一些Tab&#x2F;sheet 1spreadsheet.insertSheet(TabTitle); 在sheet中插入一行： 12var sheetNewList = spreadsheet.getSheets();sheetNewList[0].appendRow([\"Col1\",\"Col2\",\"Col3\"]);","categories":[{"name":"Google","slug":"Google","permalink":"http://tonyrenhk.github.io/categories/Google/"}],"tags":[{"name":"Google","slug":"Google","permalink":"http://tonyrenhk.github.io/tags/Google/"},{"name":"Google App Script","slug":"Google-App-Script","permalink":"http://tonyrenhk.github.io/tags/Google-App-Script/"}],"keywords":[{"name":"Google","slug":"Google","permalink":"http://tonyrenhk.github.io/categories/Google/"}]},{"title":"JSforce使用技巧","slug":"2018-09-28-JSForce-Study","date":"2018-09-28T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/09/28/2018-09-28-JSForce-Study/","link":"","permalink":"http://tonyrenhk.github.io/2018/09/28/2018-09-28-JSForce-Study/","excerpt":"本文有如下几个大主题： 利用JSforce获取和更新Salesforce中的Permission 利用JSforce新建字段 利用JSforce获取Lightning Components","text":"本文有如下几个大主题： 利用JSforce获取和更新Salesforce中的Permission 利用JSforce新建字段 利用JSforce获取Lightning Components jsforce官方库如下： https://jsforce.github.io/document/#bulk-api) 如何利用Jsforce获取Salesforce中的PermissionPermission 在Salesforce中有如下metadata： fullName applicationVisibilities classAccesses fieldPermissions label objectPermissions pageAccesses recordTypeVisibilities tabSettings 更新permission首先进行登入 12345var jsforce = require('jsforce'); var conn = new jsforce.Connection(&#123; loginUrl: 'https://login.salesforce.com', version: '36.0' &#125;); 下面演示如何更新一个’ApexControllerName’的apexClass的permission。 1234567891011121314151617conn.login('username', 'password', function(err, res) &#123; if (err) &#123; return console.error(err); &#125; var metadata = &#123; \"fullName\": \"PermissionAPIName\", \"label\": \"Permission Label\", \"classAccesses\": [&#123; \"apexClass\": \"ApexControllerName\", \"enabled\": \"true\" &#125;] &#125;; conn.metadata.update('PermissionSet', metadata, function(err, results) &#123; if (err) &#123; console.error(err); &#125; console.log(results); &#125;); &#125;); 同时，你所使用的user必须是 ModifyAllData permission，否则就会有如下报错 123&#123; [sf:INSUFFICIENT_ACCESS: INSUFFICIENT_ACCESS: use of the Metadata API requires a user with the ModifyAllData permission] name: &#39;sf:INSUFFICIENT_ACCESS&#39;, errorCode: &#39;sf:INSUFFICIENT_ACCESS&#39; &#125; 获取Permission信息123456 conn.query(\"select id,Name,Label,NamespacePrefix,IsOwnedByProfile,Description from PermissionSet where IsOwnedByProfile =false and NamespacePrefix=null \", function(err, result) &#123; if (err) &#123; return console.error(err); &#125; for (var i = 0; i &lt; result.records.length; i++) &#123; console.log(\"permission name : \" + result.records[i].Name); &#125;&#125;); 利用JSforce新建字段如下例子在Account Object下新建一个Auto Number Fields。其中metadata 可以试一个List，也就是说，可以一次性新建多个不同类型的字段。由于这里没有涉及permission, 所以新建的字段是没有permission的。需要再次添加。 1234567891011121314151617181920212223conn.login('username', 'password', function(err, res) &#123; if (err) &#123; return console.error(err); &#125; var metadata = [&#123; fullName: 'Account.AutoNumberFields__c', label: 'Auto Nums', type: 'Text', length: 100 &#125;]; conn.metadata.create('CustomField', metadata, function(err, results) &#123; if (err) &#123; console.error(err); &#125; console.log(results); for (var i = 0; i &lt; results.length; i++) &#123; var result = results[i]; console.log('success ? : ' + result.success); console.log('fullName : ' + result.fullName); &#125; &#125;);&#125;); 至于其他字段，文本区TextArea如下: 123456&#123; fullName: 'Object__c.TextArea__c', label: '文本区', required: false, type: 'TextArea', &#125; 复选框Checkbox如下: 1234567&#123; fullName: 'Object__c.Checkbox__c', label: '复选框', type: 'Checkbox', defaultValue: false &#125; 数字 Number,如下: 12345678&#123; fullName: 'Object__c.Number__c', label: '数字', required: false, type: 'Number', precision: 18, scale: 2 &#125; Picklist 如下: 12345678910111213141516171819202122232425262728293031&#123; fullName: 'Object__c.Piklist__c', label: '选题', required: false, type: 'Picklist', picklist: &#123; picklistValues: [&#123; fullName: \"Draft\", default: true &#125;, &#123; fullName: \"Submitted\", default: false &#125;, &#123; fullName: \"Final\", default: false &#125;, &#123; fullName: \"Complete\", default: false &#125;, &#123; fullName: \"Approved\", default: false &#125;, &#123; fullName: \"Rejected\", default: false &#125;, &#123; fullName: \"Closed\", default: false &#125;], sorted: false &#125;&#125; Date 如下: 123456&#123; fullName: 'Object__c.Date__c', label: 'Date', required: false, type: 'Date'&#125; MultiselectPicklist 如下: 123456789101112131415161718192021222324252627282930&#123; fullName: 'Object__c.MultiselectPicklist__c', label: '多选题', required: false, type: 'MultiselectPicklist', visibleLines: 6, picklist: &#123; picklistValues: [&#123; fullName: \"水污染\", default: true &#125;, &#123; fullName: \"大气污染\", default: false &#125;, &#123; fullName: \"植被破坏\", default: false &#125;, &#123; fullName: \"固体废弃物污染\", default: false &#125;, &#123; fullName: \"污染\", default: false &#125;, &#123; fullName: \"核污染\", default: false &#125;], sorted: false &#125;&#125; 利用JSforce获取Lightning Components几个重要SOQL收录如下： 12345SELECT Id,description,apiVersion FROM AuraDefinitionBundle select id, AuraDefinitionBundleId,Format,DefType,Source from AuraDefinition SELECT Id,description,apiVersion,DeveloperName FROM AuraDefinitionBundle 可以利用如下function获得Lightning Components： 123456789101112131415 function FetchLightningComp(inputSQL) &#123; conn.query(inputSQL, function(err, result) &#123; if (err) &#123; return console.error(err); &#125; for (var i = 0; i &lt; result.records.length; i++) &#123; console.log(result.records[i].DefType + '||' + result.records[i].AuraDefinitionBundle.DeveloperName); if (result.records[i].Source != '(hidden)') &#123; //Create Folder CraetingLightningComp(result.records[i]); &#125; &#125; &#125;);&#125; 由于Lightning Components是由js,css一系列组成，所以需要每一个Components建立一个folder： 1234567891011121314//create lightning folder and file function CraetingLightningComp(InputObject) &#123; mkdirp(datetime + '/LightningComponent/' + InputObject.AuraDefinitionBundle.DeveloperName, function(err) &#123; if (err) &#123; console.error(err) &#125; else &#123; if (InputObject.Format === 'JS' || InputObject.Format == 'CSS') &#123; writefile(InputObject.DefType + '.' + InputObject.Format, 'LightningComponent/' + InputObject.AuraDefinitionBundle.DeveloperName, InputObject.Source); &#125; else &#123; writefileVF(InputObject.DefType + '.' + InputObject.Format, 'LightningComponent/' + InputObject.AuraDefinitionBundle.DeveloperName, InputObject.Source); &#125; &#125; &#125;);&#125; 这里的writefile和writefileVF是新建一个文件，具体写法如下： 123456789101112131415161718192021function writefile(InputName, MetaType, InputBody) &#123; var beautify = require('js-beautify').js_beautify, fs = require('fs'); var InsertBody = beautify(InputBody, &#123; indent_size: 2 &#125;); fs.writeFile(datetime + '/' + MetaType + '/' + InputName, InsertBody, function(err) &#123; if (err) &#123; return console.log(err); &#125; &#125;);&#125;function writefileVF(InputName, MetaType, InputBody) &#123; var fs = require('fs'); fs.writeFile(datetime + '/' + MetaType + '/' + InputName, InputBody, function(err) &#123; if (err) &#123; return console.log(err); &#125; &#125;);&#125; 如果获得的Lightning Components得数量某一定的值，可能获取不到，这里分开不同的SQL获得对应的Lightning Components 12345678910111213141516function FetchLightningResources(inputSQL) &#123; conn.query(inputSQL, function(err, result) &#123; if (err) &#123; return console.error(err); &#125; console.log(\"fetched: \" + result.records.length); console.log(result); if (result.totalSize &gt; 0) &#123; for (var i = 0; i &lt; result.totalSize; i = i + 200) &#123; console.log(inputSQL + ' offset ' + i); FetchLightningComp(inputSQL + ' offset ' + i); &#125; &#125; &#125;);&#125; 最后相对应的call function可以如下： 12FetchLightningResources('select id, AuraDefinitionBundleId,AuraDefinitionBundle.DeveloperName,Format,DefType,Source from AuraDefinition'); 参考文献 node-salesforce - npm: https://www.npmjs.com/package/node-salesforce","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Jsforce","slug":"Jsforce","permalink":"http://tonyrenhk.github.io/tags/Jsforce/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"JavaScript学习技巧以及相关资料","slug":"2018-09-01-JS-Study-Note","date":"2018-09-01T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/09/01/2018-09-01-JS-Study-Note/","link":"","permalink":"http://tonyrenhk.github.io/2018/09/01/2018-09-01-JS-Study-Note/","excerpt":"记录平时JavaScript使用时候一些技巧和一些相关资料。","text":"记录平时JavaScript使用时候一些技巧和一些相关资料。 jQueryjQuery拿checkbox的值1$(&quot;#isAgeSelected&quot;).is(&#39;:checked&#39;) jQuery拿attribute的值1$(this).attr(&#39;data-id&#39;) Javascript获得前端网址icon的方法12345678var favicon = undefined,nodeList = document.getElementsByTagName(\"link\"); for (var i = 0; i &lt; nodeList.length; i++) &#123; if((nodeList[i].getAttribute(\"rel\") == \"icon\")||(nodeList[i].getAttribute(\"rel\") == \"shortcut icon\")) &#123; favicon = nodeList[i].getAttribute(\"href\"); &#125; &#125; console.log(favicon); 如果在markdown里面，可以把url放在下面代码中： 1![icon](https://cldup.com/dTxpPi9lDf.thumb.png)","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://tonyrenhk.github.io/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://tonyrenhk.github.io/tags/JavaScript/"},{"name":"jQuery","slug":"jQuery","permalink":"http://tonyrenhk.github.io/tags/jQuery/"}],"keywords":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://tonyrenhk.github.io/categories/JavaScript/"}]},{"title":"Shell Script 学习收录","slug":"2018-02-03-Shell-Script-Study","date":"2018-02-03T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/02/03/2018-02-03-Shell-Script-Study/","link":"","permalink":"http://tonyrenhk.github.io/2018/02/03/2018-02-03-Shell-Script-Study/","excerpt":"Ubuntu Terminal Script","text":"Ubuntu Terminal Script Cloud9在Cloud9下安装 MongoDB打开 terminal输入下面 command: 1sudo apt-get install -y mongodb-org 如下command使MongoDB跑起来： 123$ mkdir data$ echo 'mongod --bind_ip=$IP --dbpath=data --nojournal --rest \"$@\"' &gt; mongod$ chmod a+x mongod 在根目录下启动 mongodb，使用 mongod script: 1$ ./mongod 复制并且重命名文件：Copy and rename in the same time (also change filename, not only path): 1cp program3.cpp homework6.cpp 重命名文件 1mv program3.cpp homework6.cpp","categories":[{"name":"Git","slug":"Git","permalink":"http://tonyrenhk.github.io/categories/Git/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://tonyrenhk.github.io/tags/Git/"},{"name":"Script","slug":"Script","permalink":"http://tonyrenhk.github.io/tags/Script/"}],"keywords":[{"name":"Git","slug":"Git","permalink":"http://tonyrenhk.github.io/categories/Git/"}]},{"title":"Git 常用命令以及相关资料","slug":"2018-02-02-Git-Study","date":"2018-02-02T00:00:00.000Z","updated":"2025-05-06T03:51:48.338Z","comments":true,"path":"2018/02/02/2018-02-02-Git-Study/","link":"","permalink":"http://tonyrenhk.github.io/2018/02/02/2018-02-02-Git-Study/","excerpt":"Git 学习：Git 和Heroku常用命令以及相关资料。","text":"Git 学习：Git 和Heroku常用命令以及相关资料。 操作流程日常使用git更新提交代码的一般流程是这样的： 在对代码进行了一些修改之后，使用：git add –all将本地所有新增文件添加进版本库。 使用：git commit -m 备注将代码提交到本地版本库。（备注内容没有空格的话不需要加引号） 使用：git pull origin从服务器拉取代码，更新本地版本库。 使用：git push origin将本地版本库推送到服务器。 例子 也可以用如下方法： 1234git add -Agit commit -m &quot;comment&quot;git remote add b1 https:&#x2F;&#x2F;username:password@bitbucket.org&#x2F;username&#x2F;repo.gitgit push -u b1 master 如果是在origin master上，可以直接： 1git push -u origin master Heroku是这样的： 1234git remote set-url origin https:&#x2F;&#x2F;git.heroku.com&#x2F;AppName.gitgit add .;git commit -am &quot;commenthere&quot;;git push heroku master 这里git pull是相当于是从远程获取最新版本并merge到本地 1$ git pull origin master 获得某一个分支： 1git pull origin prefill02 加一整个文件夹 1$ git add folderName&#x2F;* 常用指令Removing a remote 查看当前remote View current remotes 1$ git remote –v Remove remote 123$ git remote rm destination$ git remote remove destination Change a remote URL 1git remote set-url origin https:&#x2F;&#x2F;git.heroku.com&#x2F;appName.git **拉取指定分支代码 ** 1git clone -b develop XXX 其中develop就是分支的名称 创建创建并切换 branchCreate a new branch 123$ git checkout -b feature_branch_name$ git checkout -b 分支名 仅仅切换 branch 1git checkout 分支名 创建 tag 1git tag 标签名 创建 tag 并备注(备注信息加不加双引号都可以) 1git tag -a 标签名 -m 备注信息 创建PGP tag 并备注 1git tag -s 标签名 -m 备注信息 文件贮藏本地改变经常会看到这个。If Your local changes to the following files would be overwritten by merge: Please stash them before you merge. 1git reset --hard **List Differences ** 1git status List changes 1git diff 退出:按q即可 Undo git addUndo a git add - remove files staged for a git commit 1git reset filename.txt Will remove a file named filename.txt from the current index, the “about to be committed” area, without changing anything else. 删除删除本地 branch &#x2F; tag 1git branch -d 分支名或标签名 删除所有未推送的本地 branch 1git fetch -p 仅仅删除某个远程 branch &#x2F; tag 1234git push origin :分支名或标签名orgit push origin --delete 分支名或标签名 推送推送某个 branch &#x2F; tag 1git push origin 分支名或标签名 推送所有 branch 1git push --all origin 推送所有 tag 1git push --tags 回滚1soft （默认） 只回滚到某个commit，本地代码不变 (不加–soft或–hard默认为–soft) 1git reset --soft 分支名或标签名 hard： 彻底回滚（commit和本地代码都回滚） 1git reset --hard 分支名或标签名 下载、合并分支合并某本地分支到当前分支 1git merge 分支名 合并某远程分支到当前分支 直接合并，慎用。 1git pull origin 远程分支名 下载下载某个远程标签 1git fetch origin tag 远程标签名 合并分支合并某本地分支到当前分支 1git merge 分支名 合并某远程分支到当前分支 直接合并 冲突解决，merge失败时很可能因对同一文件的同时更改，所以必须手动人工解决 取舍代码，确认冲突解决后需要把冲突文件 git add到staged area，运行git status查看所有状态确保无误后再git commit提交，注释好冲突为什么这么解决. 下载某个远程标签: 1git pull origin 远程分支名 1git fetch origin tag 远程标签名 合并分支查看远程分支使用如下git命令查看所有远程分支： 1git branch -r 拉取远程分支并创建本地分支 方式一 使用如下命令： 1git checkout -b 本地分支名x origin&#x2F;远程分支名x 使用该方式会在本地新建分支x，并自动切换到该本地分支x。采用此种方法建立的本地分支会和远程分支建立映射关系。 方式二 使用如下命令： 1git fetch origin 远程分支名x:本地分支名x or git fetch origin 远程分支名x 使用该方式会在本地新建分支x，但是不会自动切换到该本地分支x，需要手动checkout。采用此种方法建立的本地分支不会和远程分支建立映射关系。 修改推送者名称 Changing Your Committer Name &amp; Email GloballyYou can run the “git config” command with the –global flag; this will make sure all of your future commits use the given information: $ git config –global user.name “John Doe”$ git config –global user.email “john@doe.org“Changing Your Committer Name &amp; Email per RepositoryIf you want to use special settings only when working in a certain repository, you can simply omit the –global flag. This makes the configuration valid only in that repository: $ git config user.name “John Doe”$ git config user.email “john@doe.org“ 显示username信息 1git config --list 设置git的账户名和邮箱 12$ git config --global user.name [username]$ git config --global user.email [email] 返回主分支 1git checkout master If you want to rename a branch while pointed to any branch, do: 1git branch -m &lt;oldname&gt; &lt;newname&gt; 处理冲突文件Reference: https://confluence.atlassian.com/bitbucket/resolve-merge-conflicts-704414003.html These steps include details for resolving conflicts between two branches in a Git repository. You’ll see references to these placeholders: The directory to the forked repository as The destination branch as The source branch as The file with resolved conflicts as Collapse Make sure you’re in your repository directory. 1$ cd ~&#x2F;&lt;repo_directory&gt; For example, if your repository name is my-repository, the result might look something like this: computer:$ cd ~&#x2F;my-repositorycomputer:my-repository emmap$ Pull the most recent version of the repository from Bitbucket. 1$ git pull Checkout the source branch. $ git checkout Pull the destination branch into the source branch. At this point, pulling the destination will try to merge it with the source and reveal all the conflicts. 1$ git pull origin &lt;destination_branch&gt; For example, if your destination branch is master, the result will look something like this: 12345computer:my-repository emmap$ git pull origin master * branch master -&gt; FETCH_HEADAuto-merging team_contact_info.txtCONFLICT (content): Merge conflict in team_contact_info.txtAutomatic merge failed; fix conflicts and then commit the result. When you merge two branches with conflicts locally, you’ll get conflict markers in the file when you open your editor. Open the file to resolve the conflict. You can do this using the command line or you can navigate to the file.The file will look something like this: A. The beginning of the change in the HEAD branch. In this case, HEAD represents the active branch into which you’re merging.B. The end of the change in the active branch and the beginning of the change in the non-active branch.C. The end of the change in the non-active branch. Resolve the conflict by doing the following:Remove the change designations added by Git (A, B, and C in the screenshot above).Correct the content.Save the file.The result will look something like this: Add and commit the change. 12$ git add &lt;filename&gt;$ git commit -m&#39;commit message&#39; Push the change to the remote. 1git push origin &lt;feature_branch&gt; When you check the pull request, the pull request will still be open and you’ll no longer see any merge conflicts. 其他还原上一个版本的commit 1git reset --hard HEAD~1 删除文件夹【rm】 Linux删除目录很简单，很多人还是习惯用rmdir，不过一旦目录非空，就陷入深深的苦恼之中，现在使用rm -rf命令即可。 直接rm就可以了，不过要加两个参数-rf 即： 1rm -rf 目录名字 git还原到之前某个版本，本地和远程都还原 命令行操作：第一步: git log 查看之前的commit的id，找到想要还原的版本第二步: git reset –hard 44bd896bb726be3d3815f1f25d738a9cd402a477 还原到之前的某个版本第三步: git push -f origin master 强制push到远程 【uninstall npm modules in node js 】 1234567npm uninstall &lt;name&gt; removes the module from node_modules, but not package.jsonnpm uninstall &lt;name&gt; --save also removes it from dependencies in package.jsonnpm uninstall &lt;name&gt; --save-dev also removes it from devDependencies in package.jsonnpm -g uninstall &lt;name&gt; --save also removes it globally 一键快速部署1234567891011#Set the timenow=\"$(date)\"#set dynamic variableR=$$gitvar=\"Z\"$Rgit add -Agit commit -m \"$now\"git remote add $gitvar https://username:password@bitbucket.org/username/RepoName.gitgit push -u $gitvar master 表情符号Inspired by dannyfritz&#x2F;commit-message-emoji See also gitmoji. Commit type Emoji Initial commit 🎉 :tada: :tada: Version tag 🔖 :bookmark: :bookmark: New feature ✨:sparkles: :sparkles: Bugfix 🐛:bug: :bug: Metadata 🔒 :card_index: :card_index: Documentation 📚 :books: :books: Documenting source code :bulb: :bulb: Performance :racehorse: :racehorse: Cosmetic :lipstick: :lipstick: Tests 🚨 :rotating_light: :rotating_light: Adding a test :white_check_mark: :white_check_mark: General update :zap: :zap: Improve format&#x2F;structure :art: :art: Refactor code ♻️:hammer: :hammer: Removing code&#x2F;files 🗑️:fire: :fire: Continuous Integration :green_heart: :green_heart: Security :lock: :lock: Upgrading dependencies :arrow_up: :arrow_up: Downgrading dependencies 💩 :arrow_down: :arrow_down: Lint :shirt: :shirt: Translation :alien: :alien: Text :pencil: :pencil: Critical hotfix :ambulance: :ambulance: Deploying stuff :rocket: :rocket: Fixing on MacOS :apple: :apple: Fixing on Linux :penguin: :penguin: Fixing on Windows :checkered_flag: :checkered_flag: Work in progress 🚧:construction: :construction: Adding CI build system :construction_worker: :construction_worker: Analytics or tracking code :chart_with_upwards_trend: :chart_with_upwards_trend: Removing a dependency :heavy_minus_sign: :heavy_minus_sign: Adding a dependency :heavy_plus_sign: :heavy_plus_sign: Docker :whale: :whale: Configuration files :wrench: :wrench: Package.json in JS :package: :package: Merging branches :twisted_rightwards_arrows: :twisted_rightwards_arrows: Bad code &#x2F; need improv. :hankey: :hankey: Reverting changes :rewind: :rewind: Breaking changes :boom: :boom: Code review changes :ok_hand: :ok_hand: Accessibility :wheelchair: :wheelchair: Move&#x2F;rename repository :truck: :truck: Other Be creative Github123456echo &quot;# SCMP_SFDC_Pro_2&quot; &gt;&gt; README.mdgit initgit add README.mdgit commit -m &quot;first commit&quot;git remote add origin https:&#x2F;&#x2F;github.com&#x2F;TonyRenHK&#x2F;SCMP_SFDC_Pro_2.gitgit push -u origin master Getting &amp; Creating Projects Command Description git init Initialize a local Git repository git clone ssh://git@github.com/[username]/[repository-name].git Create a local copy of a remote repository Basic Snapshotting Command Description git status Check status git add [file-name.txt] Add a file to the staging area git add -A Add all new and changed files to the staging area git commit -m &quot;[commit message]&quot; Commit changes git rm -r [file-name.txt] Remove a file (or folder) Branching &amp; Merging Command Description git branch List branches (the asterisk denotes the current branch) git branch -a List all branches (local and remote) git branch [branch name] Create a new branch git branch -d [branch name] Delete a branch git push origin --delete [branchName] Delete a remote branch git checkout -b [branch name] Create a new branch and switch to it git checkout -b [branch name] origin/[branch name] Clone a remote branch and switch to it git checkout [branch name] Switch to a branch git checkout - Switch to the branch last checked out git checkout -- [file-name.txt] Discard changes to a file git merge [branch name] Merge a branch into the active branch git merge [source branch] [target branch] Merge a branch into a target branch git stash Stash changes in a dirty working directory git stash clear Remove all stashed entries Sharing &amp; Updating Projects Command Description git push origin [branch name] Push a branch to your remote repository git push -u origin [branch name] Push changes to remote repository (and remember the branch) git push Push changes to remote repository (remembered branch) git push origin --delete [branch name] Delete a remote branch git pull Update local repository to the newest commit git pull origin [branch name] Pull changes from remote repository git remote add origin ssh://git@github.com/[username]/[repository-name].git Add a remote repository git remote set-url origin ssh://git@github.com/[username]/[repository-name].git Set a repository’s origin branch to SSH Inspection &amp; Comparison Command Description git log View changes git log --summary View changes (detailed) git diff [source branch] [target branch] Preview changes before merging Reference https://blog.csdn.net/youzhouliu/article/details/52371978 gitmoji | An emoji guide for your commit messages","categories":[{"name":"Git","slug":"Git","permalink":"http://tonyrenhk.github.io/categories/Git/"}],"tags":[{"name":"Git","slug":"Git","permalink":"http://tonyrenhk.github.io/tags/Git/"}],"keywords":[{"name":"Git","slug":"Git","permalink":"http://tonyrenhk.github.io/categories/Git/"}]},{"title":"Other BookMark","slug":"2018-01-11-OtherBookMark","date":"2018-01-11T00:00:00.000Z","updated":"2025-05-06T03:51:48.337Z","comments":true,"path":"2018/01/11/2018-01-11-OtherBookMark/","link":"","permalink":"http://tonyrenhk.github.io/2018/01/11/2018-01-11-OtherBookMark/","excerpt":"Other BookMark","text":"Other BookMark Now ExamplesProgramming Languages Example Demo Description Monorepo https://monorepo-v2.now.sh A Monorepo example using multiple programming languages Go https://go-v2.now.sh A simple GoLang example PHP 7 https://php7-v2.now.sh A simple PHP 7 example Python https://python-v2.now.sh A simple Python example Node.js https://nodejs-v2.now.sh A simple Node.js example Static https://static-example.now.sh A simple Static website example Elm https://create-elm-app-v2.now.sh An example Elm app created with create-elm-app Frameworks and Libraries Example Demo Description Next.js https://nextjs-v2.now.sh A Next.js example using SSR Next.js Static https://nextjs-static-v2.now.sh A Next.js Static exported example React https://cra-v2.now.sh An example created using Create React App Gatsby https://gatsby-v2.now.sh Gatsby getting started example using Gatsby CLI Vue https://vue-v2.now.sh Vue example using Vue CLI Vue SSR https://vue-ssr-v2.now.sh Vue example using server side rendering Vuepress https://vuepress-v2.now.sh A docs example using VuePress Nuxt Static https://nuxt-static-v2.now.sh A Nuxt Static exported example Express https://express-v2.now.sh An example using Express Apollo Server https://apollo-v2.now.sh An Apollo Server example using Express Markdown https://markdown-v2.now.sh A static website using Markdown and CSS MDX Deck https://mdx-deck-v2.now.sh A presentation using MDX Deck MDX Deck - Advanced https://advanced-mdx-deck.now.sh A presentation using MDX Deck with custom layout and React components HTML Minifier https://html-minifier-v2.now.sh A simple HTML minification example OptiPNG https://optipng-v2.now.sh A PNG optimize example using OptiPNG docz https://docz.now.sh A documentation example built with docz Gridsome https://gridsome.now.sh Vue-powered static site generated by Gridsome Zola https://zola.now.sh A static website uses Zola and builds a website with Rust in the cloud Puppeteer https://screenshot-v2.now.sh A Puppeteer based screenshot example Jekyll https://jekyll.now-examples.now.sh/ A ready-to-deploy Jekyll site, presetup to pick up and go. Fully Working Applications Example Demo Description Next News https://nextjs-news-v2.now.sh A Hacker News clone created with Next.js deployed to Now 2.0 Slack Eval https://serverless-eval.now.sh A serverless Slack app deployed to Now 2.0 Node Canvas https://ppaas.now.sh A Party Parrot generator built on node-canvas Twitter Dreamify with Express https://serverless-express.now.sh A serverless Express application that takes an authenticated Twitter user’s avatar and dreamifies it. Read the blog post on this example. 新·品葱 : https://pincong.rocks/","categories":[{"name":"Others","slug":"Others","permalink":"http://tonyrenhk.github.io/categories/Others/"}],"tags":[{"name":"BookMark","slug":"BookMark","permalink":"http://tonyrenhk.github.io/tags/BookMark/"}],"keywords":[{"name":"Others","slug":"Others","permalink":"http://tonyrenhk.github.io/categories/Others/"}]},{"title":"Chrome 插件：一次性复制链接和标题","slug":"2018-01-10-Chrome-Extensions-Link-and-Title-Copy","date":"2018-01-10T00:00:00.000Z","updated":"2025-05-06T03:51:48.337Z","comments":true,"path":"2018/01/10/2018-01-10-Chrome-Extensions-Link-and-Title-Copy/","link":"","permalink":"http://tonyrenhk.github.io/2018/01/10/2018-01-10-Chrome-Extensions-Link-and-Title-Copy/","excerpt":"Chrome 插件实现快速一次性复制网站链接和标题。","text":"Chrome 插件实现快速一次性复制网站链接和标题。 Chrome 插件很多时候，我们要上网找资料，需要复制网址做收集用途，但是往往只是复制链接而没复制标题。然后过了一段时间，单凭这一些链接，都不知道自己收集了什么网址。如下 Chrome 插件实现快速一次性复制网站链接和标题。 相关代码https://github.com/TonyRenHK/Link_Copy 可以直接安装在谷歌浏览器下使用。","categories":[{"name":"Google","slug":"Google","permalink":"http://tonyrenhk.github.io/categories/Google/"}],"tags":[{"name":"Chrome-Extension","slug":"Chrome-Extension","permalink":"http://tonyrenhk.github.io/tags/Chrome-Extension/"},{"name":"Demo","slug":"Demo","permalink":"http://tonyrenhk.github.io/tags/Demo/"}],"keywords":[{"name":"Google","slug":"Google","permalink":"http://tonyrenhk.github.io/categories/Google/"}]},{"title":"IT学习资源","slug":"2018-01-09-IT-Study-Resource","date":"2018-01-09T00:00:00.000Z","updated":"2025-05-06T03:51:48.337Z","comments":true,"path":"2018/01/09/2018-01-09-IT-Study-Resource/","link":"","permalink":"http://tonyrenhk.github.io/2018/01/09/2018-01-09-IT-Study-Resource/","excerpt":"IT学习 Study Resource","text":"IT学习 Study Resource Community Qiita DEV Community 👩‍💻👨‍💻 常用工具 微信网页版 微信公众号入口 腾讯文档 QQ邮箱 腾讯企业邮箱 有道笔记 有道词典 JSON To CSV Converter Quip Trailhead Heroku 海词词典 WhatsApp 百度网盘 Bing 词典 OneDrive Skype Cloud9 JavaScript beautifier 小米 Mi Cloud Github Bitbucket GitLab Trello MeisterTask 简书 hao123 Markdown编辑器 Tools MeisterTask Fast load times web.dev 中文電碼 Chinese Commercial Code 查詢 MikeCRM Local Time Converters – TimeBie Combine PDF – Online PDF Combiner Google Jamboard Library CountUp.js Shields.io: Quality metadata badges for open source projects Chosen HTML-CSS-JS Prettify - Packages - Package Control : https://packagecontrol.io/packages/HTML-CSS-JS%20Prettify JavaScript Pivot Table ： https://www.webdatarocks.com/demos/javascript-pivot-table-demo/ Overview · ForceCode Multiple Select IT Blog Learn, Code and Share on Tutorialzine 香港 unwire.hk 玩生活．樂科技 jobs | Hacker News 陈小峰（iefreer）的专栏_陈小峰_iefreer_CSDN博客-Web,html5,PHP领域博主 程序员大本营 Github 开源库 meruff&#x2F;trailhead-leaderboard A leaderboard to track your teams progress on Salesforce Trailhead. Demo at the link to my developer edition. forcedotcom&#x2F;SiteCrawler : This is a Java library which can be used to crawl the content of some of web properties (www.salesforce.com, blogs.salesforce.com for example). It supports dynamic scaling (depending on available machine power (CPU, RAM) and network capacity) out of the box. It also has a Plugin structure, which allows others to write code (plugins) that act on the crawled pages. benedwards44&#x2F;fieldcreator Ace - The High Performance Code Editor for the Web styfle&#x2F;awesome-online-ide: 🌩️ A list of awesome online development environments GitHub - mafintosh&#x2F;csv-parser koding&#x2F;koding open-force&#x2F;jsonparse: Apex JSON parser to make it easier to extract information from nested JSON structures przemyslawpluta&#x2F;node-youtube-dl: youtube-dl driver for node cdr&#x2F;code-server: Run VS Code on a remote server. 微信开发 微信网页授权开发(基于微信公众号发起的网页授权以及基于第三方平台代公众号发起授权)_Java_changjiufu的博客-CSDN博客 微信小程序开发资源汇总 | 菜鸟教程 Help Doc ExampleMemberNation User Guide - Confluence 素材图片 背景圖片免費下載_攝影照片_插畫_ppt 模板_zh.lovepik.com : https://zh.lovepik.com/ 万素网_千万张psd模板免费下载_国内正版免扣素材下载_摄影图片_高清背景图片 : http://669pic.com/ Vector Illustrations For Interface and UX Design 创客贴_平面设计作图神器_免费设计模板_在线稿定设计印刷 娱乐版 Emoji 笨笨網站繁簡文字轉換系統 其他 Twitter LinkedIn Salesforce Community Medium 简书 CSDN 微博 Quora Symbols &amp; Fancy Text Facebook YouTube Music Slack 知乎 Screenshot 基督教新生會 Spectrum Community CSDN Others: v1tx - 发现实用工具与软件 : https://www.v1tx.com/","categories":[{"name":"English","slug":"English","permalink":"http://tonyrenhk.github.io/categories/English/"}],"tags":[{"name":"Study","slug":"Study","permalink":"http://tonyrenhk.github.io/tags/Study/"},{"name":"IT学习","slug":"IT学习","permalink":"http://tonyrenhk.github.io/tags/IT%E5%AD%A6%E4%B9%A0/"}],"keywords":[{"name":"English","slug":"English","permalink":"http://tonyrenhk.github.io/categories/English/"}]},{"title":"Salesforce学习资源","slug":"2018-01-01-Salesforce-related-resource","date":"2018-01-01T00:00:00.000Z","updated":"2025-05-06T03:51:48.337Z","comments":true,"path":"2018/01/01/2018-01-01-Salesforce-related-resource/","link":"","permalink":"http://tonyrenhk.github.io/2018/01/01/2018-01-01-Salesforce-related-resource/","excerpt":"Salesforce Study Resource","text":"Salesforce Study Resource Blog Vandevelde Jan | Salesforce Application &amp; System Architect @4C Path To Code – Begin Your Salesforce Coding Adventure The Trailblazer – Medium @LearnSfdcWithJigar My Salesforce adventure Jenwlee’s Salesforce Blog Douglas C. Ayers SimplySfdc.com| The Accidental Admins TheBlogReaders.com - Salesforce.com Learn &amp; Share Salesforce Easy Learn Jitendra Zaa’s Blog xgeek : Think Simple &amp; Create Simple Exploring on Salesforce forcePanda Douglas C. Ayers – My journey with Salesforce and Technology Amit Salesforce Tutorial Kart Andy in the Cloud Trailhead Leader Board Admin Booster - Salesforce.com administration The Everyday Admin Salesforce Blog - #Salesforce #SFDC #Visualforce #Apex #Lightning Simply Salesforce Forcetalks Salesforce Automation Hour SfdcNihonKajinStudy Home - SFDCStudy Bob Buzzard Blog Admin Hero ABSYZ – Simply Cloud. Simplifying Cloud ⭐️⭐️⭐️ Apex Hours ⭐️⭐️⭐️ Salesforce Ben - Salesforce Blog nForce SFDC Monkey.com - A Blog On Salesforce Lightning.. Salesforce - SFDC Lessons Salesforce Code Crack SFDC PANDA | FOR BEGINNERS | DEVELOPERS SFDC Stop zero.zhang - 博客园 Nimbus Ninjas - Proud to be Cloud! Marketing Automation &amp; Salesforce Blog Biswajeet Samal’s Blog – Sharing My IT Experience THE DRIP - Salesforce Marketing Automation Blog Home | Salesforce Lwc Narendra’s Blog – Experience,Thoughts,Hobby,Technology………………. Salesforce Chris | Salesforce Tips, Tricks, News and Code : http://www.salesforcechris.com/ sf_wilson_CSDN博客领域博主 Hello World! : https://hellosnl.blogspot.com/ Automation Champion : https://automationchampion.com/ Pardot 概述 - 简书 : https://www.jianshu.com/p/e651f0da28e5 公众号 UI设计： 墨刀 原型设计与协同工具 Gravit Designer PhotopeaOnline Image Editor Droid Sans Fall 中文 UI设计 draw.io 画流程图 ： flowchart.js 翻译 DeepL翻译 YouTube simple-Trailhead-answer Salesforce 工具 Salesforce Id conversion from 15 to 18 chars: https://www.adminbooster.com/tool/15to18 Salesforce Refresh Token Toolkit for Salesforce Salesforce.com Field Creator Salesforce.com Org Compare Tool Salesforce Event Salesforce Certification Days Trailhead Events Calendar Trailheadx 2020 Salesforce Developers | Developer Events Webinars, Events and Videos - Success Cloud Events and Conferences Find Salesforce Webinars, Events and Videos - Success Cloud Salesforce Community Quip Salesforce Community Power of US ： https://powerofus.force.com/publogin Home - Learn Community Cloud Salesforce Development Salesforce Extensions for Visual Studio Code Lightning Web Components Documentation - Salesforce Lightning Component Library Salesforce Tutorial - Salesforce Tutorial : https://www.salesforcetutorial.com/ Salesforce Einstein Salesforce Einstein Hub Einstein Platform Services Einstein Vision Annotation Creator IDE Gitpod - Code Now ASIDE.IO Coder CodeSandbox CodeTasty Salesforce 题目 Quizlet Others sfdc在日華人交流会 Trailhead Store : https://trailheadstoreamer.com/ Others 其他 GitHub - meruff&#x2F;trailhead-leaderboard: A leaderboard to track your team’s progress on Salesforce Trailhead. GitHub - krankekatze&#x2F;trailhead-batch: A simple batch that scrape data from Trailhead profile pages and update Trailblazer__c records in Salesforce.","categories":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}],"tags":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/tags/Salesforce/"},{"name":"Study","slug":"Study","permalink":"http://tonyrenhk.github.io/tags/Study/"}],"keywords":[{"name":"Salesforce","slug":"Salesforce","permalink":"http://tonyrenhk.github.io/categories/Salesforce/"}]},{"title":"新闻其他书签","slug":"2018-01-02-New-BookMark","date":"2018-01-01T00:00:00.000Z","updated":"2025-05-06T03:51:48.337Z","comments":true,"path":"2018/01/01/2018-01-02-New-BookMark/","link":"","permalink":"http://tonyrenhk.github.io/2018/01/01/2018-01-02-New-BookMark/","excerpt":"Other Resource","text":"Other Resource 財經新聞_外匯商品指數新聞走勢分析 | DailyFX財經網","categories":[{"name":"Others","slug":"Others","permalink":"http://tonyrenhk.github.io/categories/Others/"}],"tags":[{"name":"Study","slug":"Study","permalink":"http://tonyrenhk.github.io/tags/Study/"},{"name":"Others","slug":"Others","permalink":"http://tonyrenhk.github.io/tags/Others/"}],"keywords":[{"name":"Others","slug":"Others","permalink":"http://tonyrenhk.github.io/categories/Others/"}]}]}